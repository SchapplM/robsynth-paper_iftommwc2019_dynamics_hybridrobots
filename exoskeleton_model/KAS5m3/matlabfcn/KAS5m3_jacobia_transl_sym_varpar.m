% Analytische Jacobi-Matrix (Translatorisch) für beliebiges Segment von
% KAS5m3
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorposition und verallgemeinerten Koordinaten.
% (Ist für translatorischen Teil egal, kennzeichnet nur den Rechenweg der Herleitung)
% 
% Input:
% qJ [6x1]
%   Generalized joint coordinates (joint angles)
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt (0=Basis).
% r_i_i_C [3x1]
%   Ortsvektor vom KörperKS-Ursprung zum gesuchten Punkt
% pkin [30x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a10,a11,a12,a4,a5,a6,a9,d1,d2,d3,d7,d8,delta8s,delta9s,l11,l12,l13,l14,l17,l18,l20,l21,l22,l4,l5,l6,delta10s,delta12s,delta17s,delta18s]';
% 
% Output:
% Ja_transl [3x6]
%   Translatorischer Teil der analytischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-27 17:47
% Revision: bc59515823ab4a8d0fec19bf3bf92c32c39a66b0 (2020-06-27)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Ja_transl = KAS5m3_jacobia_transl_sym_varpar(qJ, link_index, r_i_i_C, ...
  pkin)


%% Coder Information
%#codegen
%$cgargs {zeros(6,1),uint8(0),zeros(3,1),zeros(30,1)}
assert(isreal(qJ) && all(size(qJ) == [6 1]), ...
  'KAS5m3_jacobia_transl_sym_varpar: qJ has to be [6x1] (double)');
assert(isa(r_i_i_C,'double') && isreal(r_i_i_C) && all(size(r_i_i_C) == [3 1]), ...
	'KAS5m3_jacobia_transl_sym_varpar: Position vector r_i_i_C has to be [3x1] double');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'KAS5m3_jacobia_transl_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [30 1]), ...
  'KAS5m3_jacobia_transl_sym_varpar: pkin has to be [30x1] (double)');
Ja_transl=NaN(3,6);
if link_index == 0
	%% Symbolic Calculation
	% From jacobia_transl_0_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 17:03:51
	% EndTime: 2020-06-27 17:03:51
	% DurationCPUTime: 0.04s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->18)
	unknown=NaN(3,6);
	unknown(1,1) = 0;
	unknown(1,2) = 0;
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = 0;
	unknown(1,6) = 0;
	unknown(2,1) = 0;
	unknown(2,2) = 0;
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = 0;
	unknown(2,6) = 0;
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	unknown(3,6) = 0;
	Ja_transl = unknown;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobia_transl_1_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 17:03:51
	% EndTime: 2020-06-27 17:03:52
	% DurationCPUTime: 0.04s
	% Computational Cost: add. (2->2), mult. (4->4), div. (0->0), fcn. (4->2), ass. (0->20)
	unknown=NaN(3,6);
	t1 = cos(qJ(1));
	t3 = sin(qJ(1));
	unknown(1,1) = t1 * r_i_i_C(1) - t3 * r_i_i_C(2);
	unknown(1,2) = 0.0e0;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = 0.0e0;
	unknown(2,1) = t3 * r_i_i_C(1) + t1 * r_i_i_C(2);
	unknown(2,2) = 0.0e0;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = 0.0e0;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobia_transl_2_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 17:03:51
	% EndTime: 2020-06-27 17:03:52
	% DurationCPUTime: 0.05s
	% Computational Cost: add. (9->9), mult. (22->18), div. (0->0), fcn. (22->4), ass. (0->26)
	unknown=NaN(3,6);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t5 = cos(qJ(2));
	t6 = t1 * t5;
	t8 = sin(qJ(1));
	t12 = t8 * t5;
	t14 = t8 * t2;
	unknown(1,1) = -t8 * pkin(9) - t3 * r_i_i_C(1) - t6 * r_i_i_C(2) - t8 * r_i_i_C(3);
	unknown(1,2) = -t12 * r_i_i_C(1) + t14 * r_i_i_C(2);
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = 0.0e0;
	unknown(2,1) = t1 * pkin(9) - t14 * r_i_i_C(1) - t12 * r_i_i_C(2) + t1 * r_i_i_C(3);
	unknown(2,2) = t6 * r_i_i_C(1) - t3 * r_i_i_C(2);
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = t2 * r_i_i_C(1) + t5 * r_i_i_C(2);
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobia_transl_3_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 17:03:52
	% EndTime: 2020-06-27 17:05:25
	% DurationCPUTime: 16.58s
	% Computational Cost: add. (1072930->120), mult. (1404416->240), div. (16548->8), fcn. (561560->16), ass. (0->123)
	unknown=NaN(3,6);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t45 = t42 * t43 + pkin(15) - t6 - t9;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t51 = t49 * t43 + t27 - t28;
	t52 = t21 * t51;
	t54 = 0.1e1 / pkin(23);
	t55 = (t46 - t52) * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t62 = (t59 + t60) * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t117 = cos(qJ(2));
	t118 = t1 * t117;
	t123 = t106 * t117;
	t124 = t104 * r_i_i_C(1);
	t126 = -t109 * r_i_i_C(2);
	t128 = t106 * t2;
	t132 = -t27 - t28;
	t144 = -t6 + t9;
	t149 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t132 * t8 * pkin(18) + 0.2e1 * t144 * t16 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t152 = 0.1e1 / t40;
	t156 = 0.4e1 * t10 * t132 + 0.4e1 * t29 * t144;
	t160 = 0.2e1 * t11 * t156 - 0.2e1 * t32 * t149;
	t165 = t36 ^ 2;
	t166 = 0.1e1 / t165;
	t169 = t27 + t28 + (-t29 * t152 * t160 + 0.2e1 * t10 * t149 + 0.2e1 * t132 * t32 - 0.2e1 * t144 * t40) * t43 - 0.2e1 * t42 * t166 * t156;
	t181 = t6 - t9 + (t10 * t152 * t160 + 0.2e1 * t132 * t40 + 0.2e1 * t32 * t144 + 0.2e1 * t149 * t29) * t43 - 0.2e1 * t49 * t166 * t156;
	t184 = (t4 * t169 - t21 * t181 - t59 - t60) * t54;
	t185 = t184 * t57;
	t189 = (t21 * t169 + t4 * t181 + t46 - t52) * t54;
	t190 = t189 * t64;
	t191 = -t185 + t190;
	t195 = t189 * t57;
	t196 = t184 * t64;
	t197 = t195 + t196;
	t203 = 0.2e1 * t66 * t191 + 0.2e1 * t73 * t197;
	t206 = 0.1e1 / t86;
	t210 = 0.4e1 * t66 * t191 + 0.4e1 * t73 * t197;
	t214 = -0.2e1 * t78 * t203 + 0.2e1 * t67 * t210;
	t219 = t82 ^ 2;
	t220 = 0.1e1 / t219;
	t224 = (-t185 + t190 - (t73 * t206 * t214 + 0.2e1 * t191 * t78 + 0.2e1 * t197 * t86 + 0.2e1 * t66 * t203) * t89 + 0.2e1 * t88 * t220 * t210) * t92;
	t237 = (-t195 - t196 - (t66 * t206 * t214 + 0.2e1 * t191 * t86 - 0.2e1 * t78 * t197 - 0.2e1 * t203 * t73) * t89 + 0.2e1 * t98 * t220 * t210) * t92;
	t239 = t237 * t102 - t224 * t94;
	t243 = t224 * t102 + t237 * t94;
	unknown(1,1) = (-t3 * t104 - t106 * t109) * r_i_i_C(1) + (-t106 * t104 + t3 * t109) * r_i_i_C(2) + t118 * r_i_i_C(3) + t118 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = -t128 * pkin(10) - t128 * r_i_i_C(3) - t123 * t124 - t123 * t126;
	unknown(1,3) = (t1 * t243 - t128 * t239) * r_i_i_C(1) + (t1 * t239 + t128 * t243) * r_i_i_C(2);
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = 0.0e0;
	unknown(2,1) = (t1 * t109 - t128 * t104) * r_i_i_C(1) + (t1 * t104 + t128 * t109) * r_i_i_C(2) + t123 * r_i_i_C(3) + t123 * pkin(10) + t1 * pkin(9);
	unknown(2,2) = t3 * pkin(10) + t3 * r_i_i_C(3) + t118 * t124 + t118 * t126;
	unknown(2,3) = (t106 * t243 + t3 * t239) * r_i_i_C(1) + (t106 * t239 - t3 * t243) * r_i_i_C(2);
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = t2 * t104 * r_i_i_C(1) - t2 * t109 * r_i_i_C(2) - t117 * pkin(10) - t117 * r_i_i_C(3);
	unknown(3,3) = -t117 * t239 * r_i_i_C(1) + t117 * t243 * r_i_i_C(2);
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobia_transl_4_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 17:03:52
	% EndTime: 2020-06-27 17:08:04
	% DurationCPUTime: 44.98s
	% Computational Cost: add. (2902899->160), mult. (3795786->293), div. (46010->8), fcn. (1518062->16), ass. (0->144)
	unknown=NaN(3,6);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t45 = t42 * t43 + pkin(15) - t6 - t9;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t51 = t49 * t43 + t27 - t28;
	t52 = t21 * t51;
	t54 = 0.1e1 / pkin(23);
	t55 = (t46 - t52) * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t62 = (t59 + t60) * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 - t106 * t109;
	t115 = -t106 * t104 + t3 * t109;
	t123 = cos(qJ(2));
	t124 = t1 * t123;
	t130 = t106 * t123;
	t131 = t104 * t4;
	t133 = -t109 * t21;
	t137 = t104 * t21;
	t139 = -t109 * t4;
	t143 = t106 * t2;
	t145 = t104 * pkin(4);
	t149 = -t27 - t28;
	t161 = -t6 + t9;
	t166 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t149 * t8 * pkin(18) + 0.2e1 * t161 * t16 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t169 = 0.1e1 / t40;
	t173 = 0.4e1 * t10 * t149 + 0.4e1 * t29 * t161;
	t177 = 0.2e1 * t11 * t173 - 0.2e1 * t32 * t166;
	t182 = t36 ^ 2;
	t183 = 0.1e1 / t182;
	t186 = t27 + t28 + (-t29 * t169 * t177 + 0.2e1 * t10 * t166 + 0.2e1 * t149 * t32 - 0.2e1 * t161 * t40) * t43 - 0.2e1 * t42 * t183 * t173;
	t198 = t6 - t9 + (t10 * t169 * t177 + 0.2e1 * t149 * t40 + 0.2e1 * t32 * t161 + 0.2e1 * t166 * t29) * t43 - 0.2e1 * t49 * t183 * t173;
	t201 = (t4 * t186 - t21 * t198 - t59 - t60) * t54;
	t202 = t201 * t57;
	t206 = (t21 * t186 + t4 * t198 + t46 - t52) * t54;
	t207 = t206 * t64;
	t208 = -t202 + t207;
	t212 = t206 * t57;
	t213 = t201 * t64;
	t214 = t212 + t213;
	t220 = 0.2e1 * t66 * t208 + 0.2e1 * t73 * t214;
	t223 = 0.1e1 / t86;
	t227 = 0.4e1 * t66 * t208 + 0.4e1 * t73 * t214;
	t231 = -0.2e1 * t78 * t220 + 0.2e1 * t67 * t227;
	t236 = t82 ^ 2;
	t237 = 0.1e1 / t236;
	t241 = (-t202 + t207 - (t73 * t223 * t231 + 0.2e1 * t208 * t78 + 0.2e1 * t214 * t86 + 0.2e1 * t66 * t220) * t89 + 0.2e1 * t88 * t237 * t227) * t92;
	t254 = (-t212 - t213 - (t66 * t223 * t231 + 0.2e1 * t208 * t86 - 0.2e1 * t78 * t214 - 0.2e1 * t220 * t73) * t89 + 0.2e1 * t98 * t237 * t227) * t92;
	t256 = t254 * t102 - t241 * t94;
	t260 = t241 * t102 + t254 * t94;
	t262 = t1 * t260 - t143 * t256;
	t266 = t1 * t109 - t143 * t104;
	t267 = t266 * t21;
	t270 = t1 * t256 + t143 * t260;
	t274 = t1 * t104 + t143 * t109;
	t275 = t274 * t4;
	t279 = t266 * t4;
	t281 = t274 * t21;
	t309 = t106 * t260 + t3 * t256;
	t314 = t106 * t256 - t3 * t260;
	t327 = t2 * t104;
	t329 = -t2 * t109;
	t341 = t123 * t256;
	t343 = t123 * t104;
	t345 = -t123 * t260;
	t347 = -t123 * t109;
	unknown(1,1) = (t111 * t4 + t115 * t21) * r_i_i_C(1) + (-t111 * t21 + t115 * t4) * r_i_i_C(2) + t124 * r_i_i_C(3) + t111 * pkin(4) + t124 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (-t130 * t131 - t130 * t133) * r_i_i_C(1) + (t130 * t137 - t130 * t139) * r_i_i_C(2) - t143 * r_i_i_C(3) - t130 * t145 - t143 * pkin(10);
	unknown(1,3) = (t270 * t21 + t262 * t4 - t267 + t275) * r_i_i_C(1) + (-t262 * t21 + t270 * t4 - t279 - t281) * r_i_i_C(2) + t262 * pkin(4);
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = 0.0e0;
	unknown(2,1) = (t279 + t281) * r_i_i_C(1) + (-t267 + t275) * r_i_i_C(2) + t130 * r_i_i_C(3) + t266 * pkin(4) + t130 * pkin(10) + t1 * pkin(9);
	unknown(2,2) = (t124 * t131 + t124 * t133) * r_i_i_C(1) + (-t124 * t137 + t124 * t139) * r_i_i_C(2) + t3 * r_i_i_C(3) + t124 * t145 + t3 * pkin(10);
	unknown(2,3) = (t111 * t21 - t115 * t4 + t314 * t21 + t309 * t4) * r_i_i_C(1) + (t111 * t4 + t115 * t21 - t309 * t21 + t314 * t4) * r_i_i_C(2) + t309 * pkin(4);
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (t329 * t21 + t327 * t4) * r_i_i_C(1) + (-t327 * t21 + t329 * t4) * r_i_i_C(2) - t123 * r_i_i_C(3) + t327 * pkin(4) - t123 * pkin(10);
	unknown(3,3) = (t343 * t21 - t345 * t21 - t341 * t4 - t347 * t4) * r_i_i_C(1) + (t341 * t21 + t347 * t21 + t343 * t4 - t345 * t4) * r_i_i_C(2) - t341 * pkin(4);
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobia_transl_5_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 17:03:53
	% EndTime: 2020-06-27 17:13:00
	% DurationCPUTime: 106.45s
	% Computational Cost: add. (6893704->199), mult. (9005692->347), div. (111894->8), fcn. (3602334->18), ass. (0->176)
	unknown=NaN(3,6);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t45 = t42 * t43 + pkin(15) - t6 - t9;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t51 = t49 * t43 + t27 - t28;
	t52 = t21 * t51;
	t54 = 0.1e1 / pkin(23);
	t55 = (t46 - t52) * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t62 = (t59 + t60) * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 - t106 * t109;
	t115 = -t106 * t104 + t3 * t109;
	t117 = t111 * t4 + t115 * t21;
	t118 = cos(qJ(4));
	t122 = -t111 * t21 + t115 * t4;
	t123 = sin(qJ(4));
	t131 = cos(qJ(2));
	t132 = t1 * t131;
	t139 = t106 * t131;
	t140 = t104 * t4;
	t142 = -t109 * t21;
	t144 = -t139 * t140 - t139 * t142;
	t146 = t104 * t21;
	t148 = -t109 * t4;
	t150 = t139 * t146 - t139 * t148;
	t158 = t106 * t2;
	t161 = t104 * pkin(4);
	t165 = -t27 - t28;
	t177 = -t6 + t9;
	t182 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t177 * t16 * pkin(18) + 0.2e1 * t165 * t8 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t185 = 0.1e1 / t40;
	t189 = 0.4e1 * t10 * t165 + 0.4e1 * t29 * t177;
	t193 = 0.2e1 * t11 * t189 - 0.2e1 * t32 * t182;
	t198 = t36 ^ 2;
	t199 = 0.1e1 / t198;
	t202 = t27 + t28 + (-t29 * t185 * t193 + 0.2e1 * t10 * t182 + 0.2e1 * t165 * t32 - 0.2e1 * t177 * t40) * t43 - 0.2e1 * t42 * t199 * t189;
	t214 = t6 - t9 + (t10 * t185 * t193 + 0.2e1 * t165 * t40 + 0.2e1 * t32 * t177 + 0.2e1 * t182 * t29) * t43 - 0.2e1 * t49 * t199 * t189;
	t217 = (t4 * t202 - t21 * t214 - t59 - t60) * t54;
	t218 = t217 * t57;
	t222 = (t21 * t202 + t4 * t214 + t46 - t52) * t54;
	t223 = t222 * t64;
	t224 = -t218 + t223;
	t228 = t222 * t57;
	t229 = t217 * t64;
	t230 = t228 + t229;
	t236 = 0.2e1 * t66 * t224 + 0.2e1 * t73 * t230;
	t239 = 0.1e1 / t86;
	t243 = 0.4e1 * t66 * t224 + 0.4e1 * t73 * t230;
	t247 = -0.2e1 * t78 * t236 + 0.2e1 * t67 * t243;
	t252 = t82 ^ 2;
	t253 = 0.1e1 / t252;
	t257 = (-t218 + t223 - (t73 * t239 * t247 + 0.2e1 * t224 * t78 + 0.2e1 * t230 * t86 + 0.2e1 * t66 * t236) * t89 + 0.2e1 * t88 * t253 * t243) * t92;
	t270 = (-t228 - t229 - (t66 * t239 * t247 + 0.2e1 * t224 * t86 - 0.2e1 * t78 * t230 - 0.2e1 * t236 * t73) * t89 + 0.2e1 * t98 * t253 * t243) * t92;
	t272 = t270 * t102 - t257 * t94;
	t276 = t257 * t102 + t270 * t94;
	t278 = t1 * t276 - t158 * t272;
	t282 = t1 * t109 - t158 * t104;
	t283 = t282 * t21;
	t286 = t1 * t272 + t158 * t276;
	t290 = t1 * t104 + t158 * t109;
	t291 = t290 * t4;
	t292 = t286 * t21 + t278 * t4 - t283 + t291;
	t295 = t282 * t4;
	t297 = t290 * t21;
	t298 = -t278 * t21 + t286 * t4 - t295 - t297;
	t309 = t295 + t297;
	t311 = -t283 + t291;
	t313 = t311 * t118 - t309 * t123;
	t317 = -t309 * t118 - t311 * t123;
	t330 = t132 * t140 + t132 * t142;
	t334 = -t132 * t146 + t132 * t148;
	t349 = t106 * t276 + t3 * t272;
	t351 = -t111 * t21;
	t354 = t106 * t272 - t3 * t276;
	t356 = -t115 * t4;
	t357 = t354 * t21 + t349 * t4 - t351 + t356;
	t360 = -t111 * t4;
	t362 = -t115 * t21;
	t363 = -t349 * t21 + t354 * t4 - t360 - t362;
	t374 = t360 + t362;
	t376 = -t351 + t356;
	t385 = t2 * t104;
	t387 = -t2 * t109;
	t389 = t387 * t21 + t385 * t4;
	t393 = -t385 * t21 + t387 * t4;
	t406 = t131 * t272;
	t408 = t131 * t104;
	t409 = t408 * t21;
	t410 = -t131 * t276;
	t412 = -t131 * t109;
	t413 = t412 * t4;
	t414 = -t410 * t21 - t406 * t4 + t409 - t413;
	t417 = t408 * t4;
	t419 = t412 * t21;
	t420 = t406 * t21 - t410 * t4 + t417 + t419;
	t431 = -t417 - t419;
	t433 = t409 - t413;
	unknown(1,1) = (t117 * t118 + t122 * t123) * r_i_i_C(1) + (-t117 * t123 + t122 * t118) * r_i_i_C(2) + t132 * r_i_i_C(3) + t117 * pkin(5) + t111 * pkin(4) + t132 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (t144 * t118 + t150 * t123) * r_i_i_C(1) + (t150 * t118 - t144 * t123) * r_i_i_C(2) - t158 * r_i_i_C(3) + t144 * pkin(5) - t139 * t161 - t158 * pkin(10);
	unknown(1,3) = (t292 * t118 + t298 * t123) * r_i_i_C(1) + (t298 * t118 - t292 * t123) * r_i_i_C(2) + t292 * pkin(5) + t278 * pkin(4);
	unknown(1,4) = t313 * r_i_i_C(1) + t317 * r_i_i_C(2);
	unknown(1,5) = 0.0e0;
	unknown(1,6) = 0.0e0;
	unknown(2,1) = t282 * pkin(4) + t309 * pkin(5) + t1 * pkin(9) + t139 * pkin(10) - t317 * r_i_i_C(1) + t313 * r_i_i_C(2) + t139 * r_i_i_C(3);
	unknown(2,2) = (t330 * t118 + t334 * t123) * r_i_i_C(1) + (t334 * t118 - t330 * t123) * r_i_i_C(2) + t3 * r_i_i_C(3) + t330 * pkin(5) + t132 * t161 + t3 * pkin(10);
	unknown(2,3) = (t357 * t118 + t363 * t123) * r_i_i_C(1) + (t363 * t118 - t357 * t123) * r_i_i_C(2) + t357 * pkin(5) + t349 * pkin(4);
	unknown(2,4) = (t376 * t118 - t374 * t123) * r_i_i_C(1) + (-t374 * t118 - t376 * t123) * r_i_i_C(2);
	unknown(2,5) = 0.0e0;
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (t389 * t118 + t393 * t123) * r_i_i_C(1) + (t393 * t118 - t389 * t123) * r_i_i_C(2) - t131 * r_i_i_C(3) + t389 * pkin(5) + t385 * pkin(4) - t131 * pkin(10);
	unknown(3,3) = (t414 * t118 + t420 * t123) * r_i_i_C(1) + (t420 * t118 - t414 * t123) * r_i_i_C(2) + t414 * pkin(5) - t406 * pkin(4);
	unknown(3,4) = (t433 * t118 - t431 * t123) * r_i_i_C(1) + (-t431 * t118 - t433 * t123) * r_i_i_C(2);
	unknown(3,5) = 0.0e0;
	unknown(3,6) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobia_transl_6_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 17:03:55
	% EndTime: 2020-06-27 17:21:06
	% DurationCPUTime: 238.52s
	% Computational Cost: add. (15537057->239), mult. (20279831->410), div. (257582->8), fcn. (8113416->20), ass. (0->204)
	unknown=NaN(3,6);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t45 = t42 * t43 + pkin(15) - t6 - t9;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t51 = t49 * t43 + t27 - t28;
	t52 = t21 * t51;
	t54 = 0.1e1 / pkin(23);
	t55 = (t46 - t52) * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t62 = (t59 + t60) * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 - t106 * t109;
	t115 = -t106 * t104 + t3 * t109;
	t117 = t111 * t4 + t115 * t21;
	t118 = cos(qJ(4));
	t122 = -t111 * t21 + t115 * t4;
	t123 = sin(qJ(4));
	t125 = t117 * t118 + t122 * t123;
	t126 = sin(qJ(5));
	t130 = -t117 * t123 + t122 * t118;
	t131 = cos(qJ(5));
	t139 = cos(qJ(2));
	t140 = t1 * t139;
	t148 = t106 * t139;
	t149 = t104 * t4;
	t151 = -t109 * t21;
	t153 = -t148 * t149 - t148 * t151;
	t155 = t104 * t21;
	t157 = -t109 * t4;
	t159 = t148 * t155 - t148 * t157;
	t161 = t153 * t118 + t159 * t123;
	t165 = t159 * t118 - t153 * t123;
	t173 = t106 * t2;
	t177 = t104 * pkin(4);
	t181 = -t27 - t28;
	t193 = -t6 + t9;
	t198 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t193 * t16 * pkin(18) + 0.2e1 * t181 * t8 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t201 = 0.1e1 / t40;
	t205 = 0.4e1 * t10 * t181 + 0.4e1 * t29 * t193;
	t209 = 0.2e1 * t11 * t205 - 0.2e1 * t32 * t198;
	t214 = t36 ^ 2;
	t215 = 0.1e1 / t214;
	t218 = t27 + t28 + (-t29 * t201 * t209 + 0.2e1 * t10 * t198 + 0.2e1 * t181 * t32 - 0.2e1 * t193 * t40) * t43 - 0.2e1 * t42 * t215 * t205;
	t230 = t6 - t9 + (t10 * t201 * t209 + 0.2e1 * t181 * t40 + 0.2e1 * t32 * t193 + 0.2e1 * t198 * t29) * t43 - 0.2e1 * t49 * t215 * t205;
	t233 = (-t21 * t230 + t4 * t218 - t59 - t60) * t54;
	t234 = t233 * t57;
	t238 = (t21 * t218 + t4 * t230 + t46 - t52) * t54;
	t239 = t238 * t64;
	t240 = -t234 + t239;
	t244 = t238 * t57;
	t245 = t233 * t64;
	t246 = t244 + t245;
	t252 = 0.2e1 * t66 * t240 + 0.2e1 * t73 * t246;
	t255 = 0.1e1 / t86;
	t259 = 0.4e1 * t66 * t240 + 0.4e1 * t73 * t246;
	t263 = -0.2e1 * t78 * t252 + 0.2e1 * t67 * t259;
	t268 = t82 ^ 2;
	t269 = 0.1e1 / t268;
	t273 = (-t234 + t239 - (t73 * t255 * t263 + 0.2e1 * t240 * t78 + 0.2e1 * t246 * t86 + 0.2e1 * t66 * t252) * t89 + 0.2e1 * t88 * t269 * t259) * t92;
	t286 = (-t244 - t245 - (t66 * t255 * t263 + 0.2e1 * t240 * t86 - 0.2e1 * t78 * t246 - 0.2e1 * t252 * t73) * t89 + 0.2e1 * t98 * t269 * t259) * t92;
	t288 = t286 * t102 - t273 * t94;
	t292 = t273 * t102 + t286 * t94;
	t294 = t1 * t292 - t173 * t288;
	t298 = t1 * t109 - t173 * t104;
	t299 = t298 * t21;
	t302 = t1 * t288 + t173 * t292;
	t306 = t1 * t104 + t173 * t109;
	t307 = t306 * t4;
	t308 = t302 * t21 + t294 * t4 - t299 + t307;
	t311 = t298 * t4;
	t313 = t306 * t21;
	t314 = -t294 * t21 + t302 * t4 - t311 - t313;
	t316 = t308 * t118 + t314 * t123;
	t320 = t314 * t118 - t308 * t123;
	t332 = t311 + t313;
	t334 = -t299 + t307;
	t336 = t334 * t118 - t332 * t123;
	t337 = t336 * t126;
	t340 = -t332 * t118 - t334 * t123;
	t344 = t336 * t131;
	t351 = t340 * t131 - t337;
	t354 = -t340 * t126 - t344;
	t368 = t140 * t149 + t140 * t151;
	t372 = -t140 * t155 + t140 * t157;
	t374 = t368 * t118 + t372 * t123;
	t378 = t372 * t118 - t368 * t123;
	t394 = t106 * t292 + t3 * t288;
	t396 = -t111 * t21;
	t399 = t106 * t288 - t3 * t292;
	t401 = -t115 * t4;
	t402 = t399 * t21 + t394 * t4 - t396 + t401;
	t405 = -t111 * t4;
	t407 = -t115 * t21;
	t408 = -t394 * t21 + t399 * t4 - t405 - t407;
	t410 = t402 * t118 + t408 * t123;
	t414 = t408 * t118 - t402 * t123;
	t426 = t405 + t407;
	t428 = -t396 + t401;
	t430 = t428 * t118 - t426 * t123;
	t431 = t430 * t126;
	t434 = -t426 * t118 - t428 * t123;
	t438 = t430 * t131;
	t451 = t2 * t104;
	t453 = -t2 * t109;
	t455 = t453 * t21 + t451 * t4;
	t459 = -t451 * t21 + t453 * t4;
	t461 = t455 * t118 + t459 * t123;
	t465 = t459 * t118 - t455 * t123;
	t479 = t139 * t288;
	t481 = t139 * t104;
	t482 = t481 * t21;
	t483 = -t139 * t292;
	t485 = -t139 * t109;
	t486 = t485 * t4;
	t487 = -t483 * t21 - t479 * t4 + t482 - t486;
	t490 = t481 * t4;
	t492 = t485 * t21;
	t493 = t479 * t21 - t483 * t4 + t490 + t492;
	t495 = t487 * t118 + t493 * t123;
	t499 = t493 * t118 - t487 * t123;
	t511 = -t490 - t492;
	t513 = t482 - t486;
	t515 = t513 * t118 - t511 * t123;
	t516 = t515 * t126;
	t519 = -t511 * t118 - t513 * t123;
	t523 = t515 * t131;
	unknown(1,1) = (-t125 * t126 + t130 * t131) * r_i_i_C(1) + (-t125 * t131 - t130 * t126) * r_i_i_C(2) + t140 * r_i_i_C(3) + t125 * pkin(6) + t117 * pkin(5) + t111 * pkin(4) + t140 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (-t161 * t126 + t165 * t131) * r_i_i_C(1) + (-t165 * t126 - t161 * t131) * r_i_i_C(2) - t173 * r_i_i_C(3) + t161 * pkin(6) + t153 * pkin(5) - t148 * t177 - t173 * pkin(10);
	unknown(1,3) = (-t316 * t126 + t320 * t131) * r_i_i_C(1) + (-t320 * t126 - t316 * t131) * r_i_i_C(2) + t316 * pkin(6) + t308 * pkin(5) + t294 * pkin(4);
	unknown(1,4) = (t340 * t131 - t337) * r_i_i_C(1) + (-t340 * t126 - t344) * r_i_i_C(2) + t336 * pkin(6);
	unknown(1,5) = t351 * r_i_i_C(1) + t354 * r_i_i_C(2);
	unknown(1,6) = 0.0e0;
	unknown(2,1) = t298 * pkin(4) + t332 * pkin(5) - t340 * pkin(6) + t1 * pkin(9) + t148 * pkin(10) - t354 * r_i_i_C(1) + t351 * r_i_i_C(2) + t148 * r_i_i_C(3);
	unknown(2,2) = (-t374 * t126 + t378 * t131) * r_i_i_C(1) + (-t378 * t126 - t374 * t131) * r_i_i_C(2) + t3 * r_i_i_C(3) + t374 * pkin(6) + t368 * pkin(5) + t140 * t177 + t3 * pkin(10);
	unknown(2,3) = (-t410 * t126 + t414 * t131) * r_i_i_C(1) + (-t414 * t126 - t410 * t131) * r_i_i_C(2) + t410 * pkin(6) + t402 * pkin(5) + t394 * pkin(4);
	unknown(2,4) = (t434 * t131 - t431) * r_i_i_C(1) + (-t434 * t126 - t438) * r_i_i_C(2) + t430 * pkin(6);
	unknown(2,5) = (t434 * t131 - t431) * r_i_i_C(1) + (-t434 * t126 - t438) * r_i_i_C(2);
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (-t461 * t126 + t465 * t131) * r_i_i_C(1) + (-t465 * t126 - t461 * t131) * r_i_i_C(2) - t139 * r_i_i_C(3) + t461 * pkin(6) + t455 * pkin(5) + t451 * pkin(4) - t139 * pkin(10);
	unknown(3,3) = (-t495 * t126 + t499 * t131) * r_i_i_C(1) + (-t499 * t126 - t495 * t131) * r_i_i_C(2) + t495 * pkin(6) + t487 * pkin(5) - t479 * pkin(4);
	unknown(3,4) = (t519 * t131 - t516) * r_i_i_C(1) + (-t519 * t126 - t523) * r_i_i_C(2) + t515 * pkin(6);
	unknown(3,5) = (t519 * t131 - t516) * r_i_i_C(1) + (-t519 * t126 - t523) * r_i_i_C(2);
	unknown(3,6) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobia_transl_7_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 17:03:58
	% EndTime: 2020-06-27 17:28:48
	% DurationCPUTime: 422.92s
	% Computational Cost: add. (27649753->279), mult. (36071450->483), div. (464206->8), fcn. (14432697->22), ass. (0->234)
	unknown=NaN(3,6);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t45 = t42 * t43 + pkin(15) - t6 - t9;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t51 = t49 * t43 + t27 - t28;
	t52 = t21 * t51;
	t54 = 0.1e1 / pkin(23);
	t55 = (t46 - t52) * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t62 = (t59 + t60) * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 - t106 * t109;
	t115 = -t106 * t104 + t3 * t109;
	t117 = t111 * t4 + t115 * t21;
	t118 = cos(qJ(4));
	t122 = -t111 * t21 + t115 * t4;
	t123 = sin(qJ(4));
	t125 = t117 * t118 + t122 * t123;
	t126 = sin(qJ(5));
	t130 = -t117 * t123 + t122 * t118;
	t131 = cos(qJ(5));
	t133 = -t125 * t126 + t130 * t131;
	t134 = cos(qJ(6));
	t136 = cos(qJ(2));
	t137 = t1 * t136;
	t138 = sin(qJ(6));
	t139 = t137 * t138;
	t143 = t137 * t134;
	t148 = t125 * t131 + t130 * t126;
	t157 = t106 * t136;
	t158 = t104 * t4;
	t160 = -t109 * t21;
	t162 = -t157 * t158 - t157 * t160;
	t164 = t104 * t21;
	t166 = -t109 * t4;
	t168 = t157 * t164 - t157 * t166;
	t170 = t162 * t118 + t168 * t123;
	t174 = t168 * t118 - t162 * t123;
	t176 = -t170 * t126 + t174 * t131;
	t178 = t106 * t2;
	t188 = t174 * t126 + t170 * t131;
	t193 = t104 * pkin(4);
	t197 = -t27 - t28;
	t209 = -t6 + t9;
	t214 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t209 * t16 * pkin(18) + 0.2e1 * t197 * t8 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t217 = 0.1e1 / t40;
	t221 = 0.4e1 * t10 * t197 + 0.4e1 * t29 * t209;
	t225 = 0.2e1 * t11 * t221 - 0.2e1 * t32 * t214;
	t230 = t36 ^ 2;
	t231 = 0.1e1 / t230;
	t234 = t27 + t28 + (-t29 * t217 * t225 + 0.2e1 * t10 * t214 + 0.2e1 * t197 * t32 - 0.2e1 * t209 * t40) * t43 - 0.2e1 * t42 * t231 * t221;
	t246 = t6 - t9 + (t10 * t217 * t225 + 0.2e1 * t197 * t40 + 0.2e1 * t32 * t209 + 0.2e1 * t214 * t29) * t43 - 0.2e1 * t49 * t231 * t221;
	t249 = (-t21 * t246 + t4 * t234 - t59 - t60) * t54;
	t250 = t249 * t57;
	t254 = (t21 * t234 + t4 * t246 + t46 - t52) * t54;
	t255 = t254 * t64;
	t256 = -t250 + t255;
	t260 = t254 * t57;
	t261 = t249 * t64;
	t262 = t260 + t261;
	t268 = 0.2e1 * t66 * t256 + 0.2e1 * t73 * t262;
	t271 = 0.1e1 / t86;
	t275 = 0.4e1 * t66 * t256 + 0.4e1 * t73 * t262;
	t279 = -0.2e1 * t78 * t268 + 0.2e1 * t67 * t275;
	t284 = t82 ^ 2;
	t285 = 0.1e1 / t284;
	t289 = (-t250 + t255 - (t73 * t271 * t279 + 0.2e1 * t256 * t78 + 0.2e1 * t262 * t86 + 0.2e1 * t66 * t268) * t89 + 0.2e1 * t88 * t285 * t275) * t92;
	t302 = (-t260 - t261 - (t66 * t271 * t279 + 0.2e1 * t256 * t86 - 0.2e1 * t78 * t262 - 0.2e1 * t268 * t73) * t89 + 0.2e1 * t98 * t285 * t275) * t92;
	t304 = t302 * t102 - t289 * t94;
	t308 = t289 * t102 + t302 * t94;
	t310 = t1 * t308 - t178 * t304;
	t314 = t1 * t109 - t178 * t104;
	t315 = t314 * t21;
	t318 = t1 * t304 + t178 * t308;
	t322 = t1 * t104 + t178 * t109;
	t323 = t322 * t4;
	t324 = t318 * t21 + t310 * t4 - t315 + t323;
	t327 = t314 * t4;
	t329 = t322 * t21;
	t330 = -t310 * t21 + t318 * t4 - t327 - t329;
	t332 = t324 * t118 + t330 * t123;
	t336 = t330 * t118 - t324 * t123;
	t338 = -t332 * t126 + t336 * t131;
	t345 = t336 * t126 + t332 * t131;
	t352 = t327 + t329;
	t354 = -t315 + t323;
	t356 = t354 * t118 - t352 * t123;
	t357 = t356 * t126;
	t360 = -t352 * t118 - t354 * t123;
	t362 = t360 * t131 - t357;
	t367 = t356 * t131;
	t369 = t360 * t126 + t367;
	t375 = t360 * t131 - t357;
	t381 = t360 * t126 + t367;
	t387 = t157 * t134 - t381 * t138;
	t391 = -t381 * t134 - t157 * t138;
	t406 = t137 * t158 + t137 * t160;
	t410 = -t137 * t164 + t137 * t166;
	t412 = t406 * t118 + t410 * t123;
	t416 = t410 * t118 - t406 * t123;
	t418 = -t412 * t126 + t416 * t131;
	t429 = t416 * t126 + t412 * t131;
	t439 = t106 * t308 + t3 * t304;
	t441 = -t111 * t21;
	t444 = t106 * t304 - t3 * t308;
	t446 = -t115 * t4;
	t447 = t444 * t21 + t439 * t4 - t441 + t446;
	t450 = -t111 * t4;
	t452 = -t115 * t21;
	t453 = -t439 * t21 + t444 * t4 - t450 - t452;
	t455 = t447 * t118 + t453 * t123;
	t459 = t453 * t118 - t447 * t123;
	t461 = -t455 * t126 + t459 * t131;
	t468 = t459 * t126 + t455 * t131;
	t475 = t450 + t452;
	t477 = -t441 + t446;
	t479 = t477 * t118 - t475 * t123;
	t480 = t479 * t126;
	t483 = -t475 * t118 - t477 * t123;
	t485 = t483 * t131 - t480;
	t490 = t479 * t131;
	t492 = t483 * t126 + t490;
	t498 = t483 * t131 - t480;
	t504 = t483 * t126 + t490;
	t515 = t2 * t104;
	t517 = -t2 * t109;
	t519 = t517 * t21 + t515 * t4;
	t523 = -t515 * t21 + t517 * t4;
	t525 = t519 * t118 + t523 * t123;
	t529 = t523 * t118 - t519 * t123;
	t531 = -t525 * t126 + t529 * t131;
	t542 = t529 * t126 + t525 * t131;
	t550 = t136 * t304;
	t552 = t136 * t104;
	t553 = t552 * t21;
	t554 = -t136 * t308;
	t556 = -t136 * t109;
	t557 = t556 * t4;
	t558 = -t554 * t21 - t550 * t4 + t553 - t557;
	t561 = t552 * t4;
	t563 = t556 * t21;
	t564 = t550 * t21 - t554 * t4 + t561 + t563;
	t566 = t558 * t118 + t564 * t123;
	t570 = t564 * t118 - t558 * t123;
	t572 = -t566 * t126 + t570 * t131;
	t579 = t570 * t126 + t566 * t131;
	t586 = -t561 - t563;
	t588 = t553 - t557;
	t590 = t588 * t118 - t586 * t123;
	t591 = t590 * t126;
	t594 = -t586 * t118 - t588 * t123;
	t596 = t594 * t131 - t591;
	t601 = t590 * t131;
	t603 = t594 * t126 + t601;
	t609 = t594 * t131 - t591;
	t615 = t594 * t126 + t601;
	unknown(1,1) = (t133 * t134 + t139) * r_i_i_C(1) + (-t133 * t138 + t143) * r_i_i_C(2) + t148 * r_i_i_C(3) + t148 * pkin(11) + t125 * pkin(6) + t117 * pkin(5) + t111 * pkin(4) + t137 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (t176 * t134 - t178 * t138) * r_i_i_C(1) + (-t178 * t134 - t176 * t138) * r_i_i_C(2) + t188 * r_i_i_C(3) + t188 * pkin(11) + t170 * pkin(6) + t162 * pkin(5) - t157 * t193 - t178 * pkin(10);
	unknown(1,3) = t338 * t134 * r_i_i_C(1) - t338 * t138 * r_i_i_C(2) + t310 * pkin(4) + t324 * pkin(5) + t332 * pkin(6) + t345 * pkin(11) + t345 * r_i_i_C(3);
	unknown(1,4) = t362 * t134 * r_i_i_C(1) - t362 * t138 * r_i_i_C(2) + t356 * pkin(6) + t369 * pkin(11) + t369 * r_i_i_C(3);
	unknown(1,5) = t375 * t134 * r_i_i_C(1) - t375 * t138 * r_i_i_C(2) + t381 * pkin(11) + t381 * r_i_i_C(3);
	unknown(1,6) = t387 * r_i_i_C(1) + t391 * r_i_i_C(2);
	unknown(2,1) = t314 * pkin(4) + t352 * pkin(5) - t360 * pkin(6) + t1 * pkin(9) + t157 * pkin(10) - t375 * pkin(11) - t391 * r_i_i_C(1) + t387 * r_i_i_C(2) - t375 * r_i_i_C(3);
	unknown(2,2) = (t418 * t134 + t3 * t138) * r_i_i_C(1) + (t3 * t134 - t418 * t138) * r_i_i_C(2) + t429 * r_i_i_C(3) + t429 * pkin(11) + t412 * pkin(6) + t406 * pkin(5) + t137 * t193 + t3 * pkin(10);
	unknown(2,3) = t461 * t134 * r_i_i_C(1) - t461 * t138 * r_i_i_C(2) + t439 * pkin(4) + t447 * pkin(5) + t455 * pkin(6) + t468 * pkin(11) + t468 * r_i_i_C(3);
	unknown(2,4) = t485 * t134 * r_i_i_C(1) - t485 * t138 * r_i_i_C(2) + t479 * pkin(6) + t492 * pkin(11) + t492 * r_i_i_C(3);
	unknown(2,5) = t498 * t134 * r_i_i_C(1) - t498 * t138 * r_i_i_C(2) + t504 * pkin(11) + t504 * r_i_i_C(3);
	unknown(2,6) = (-t504 * t138 - t143) * r_i_i_C(1) + (-t504 * t134 + t139) * r_i_i_C(2);
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (t531 * t134 - t136 * t138) * r_i_i_C(1) + (-t136 * t134 - t531 * t138) * r_i_i_C(2) + t542 * r_i_i_C(3) + t542 * pkin(11) + t525 * pkin(6) + t519 * pkin(5) + t515 * pkin(4) - t136 * pkin(10);
	unknown(3,3) = t572 * t134 * r_i_i_C(1) - t572 * t138 * r_i_i_C(2) - t550 * pkin(4) + t558 * pkin(5) + t566 * pkin(6) + t579 * pkin(11) + t579 * r_i_i_C(3);
	unknown(3,4) = t596 * t134 * r_i_i_C(1) - t596 * t138 * r_i_i_C(2) + t590 * pkin(6) + t603 * pkin(11) + t603 * r_i_i_C(3);
	unknown(3,5) = t609 * t134 * r_i_i_C(1) - t609 * t138 * r_i_i_C(2) + t615 * pkin(11) + t615 * r_i_i_C(3);
	unknown(3,6) = (-t2 * t134 - t615 * t138) * r_i_i_C(1) + (-t615 * t134 + t2 * t138) * r_i_i_C(2);
	Ja_transl = unknown;
elseif link_index == 8
	%% Symbolic Calculation
	% From jacobia_transl_8_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 17:03:52
	% EndTime: 2020-06-27 17:03:52
	% DurationCPUTime: 0.06s
	% Computational Cost: add. (21->21), mult. (52->38), div. (0->0), fcn. (56->6), ass. (0->30)
	unknown=NaN(3,6);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = sin(pkin(13));
	t6 = sin(qJ(1));
	t7 = cos(pkin(13));
	t15 = cos(qJ(2));
	t16 = t1 * t15;
	t21 = t6 * t15;
	t22 = t4 * r_i_i_C(1);
	t24 = t7 * r_i_i_C(2);
	t26 = t6 * t2;
	unknown(1,1) = (t3 * t4 - t6 * t7) * r_i_i_C(1) + (t3 * t7 + t6 * t4) * r_i_i_C(2) + t16 * r_i_i_C(3) + t16 * pkin(12) - t6 * pkin(9);
	unknown(1,2) = -t26 * pkin(12) - t26 * r_i_i_C(3) + t21 * t22 + t21 * t24;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = 0.0e0;
	unknown(2,1) = (t1 * t7 + t26 * t4) * r_i_i_C(1) + (-t1 * t4 + t26 * t7) * r_i_i_C(2) + t21 * r_i_i_C(3) + t21 * pkin(12) + t1 * pkin(9);
	unknown(2,2) = t3 * pkin(12) + t3 * r_i_i_C(3) - t16 * t22 - t16 * t24;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = -t2 * t4 * r_i_i_C(1) - t2 * t7 * r_i_i_C(2) - t15 * pkin(12) - t15 * r_i_i_C(3);
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 9
	%% Symbolic Calculation
	% From jacobia_transl_9_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 17:03:54
	% EndTime: 2020-06-27 17:18:14
	% DurationCPUTime: 181.84s
	% Computational Cost: add. (11693587->158), mult. (15282124->307), div. (187880->9), fcn. (6112302->16), ass. (0->148)
	unknown=NaN(3,6);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = sin(pkin(13));
	t6 = sin(qJ(1));
	t7 = cos(pkin(13));
	t9 = t3 * t4 - t6 * t7;
	t10 = cos(qJ(3));
	t11 = -pkin(25) + pkin(26);
	t12 = t10 * t11;
	t13 = pkin(29) + qJ(3);
	t14 = cos(t13);
	t15 = t14 * pkin(18);
	t16 = -pkin(15) + t12 + t15;
	t17 = pkin(17) ^ 2;
	t18 = pkin(23) ^ 2;
	t19 = t14 ^ 2;
	t20 = pkin(18) ^ 2;
	t22 = sin(t13);
	t23 = t22 ^ 2;
	t25 = -pkin(15) + t12;
	t26 = t25 ^ 2;
	t27 = sin(qJ(3));
	t28 = t27 ^ 2;
	t29 = t11 ^ 2;
	t33 = t27 * t11;
	t34 = t22 * pkin(18);
	t35 = -t33 + t34;
	t38 = 0.2e1 * t16 * t14 * pkin(18) + 0.2e1 * t35 * t22 * pkin(18) - t19 * t20 - t23 * t20 + t28 * t29 + t17 - t18 + t26;
	t42 = 0.4e1 * t16 ^ 2 + 0.4e1 * t35 ^ 2;
	t44 = t38 ^ 2;
	t46 = sqrt(t17 * t42 - t44);
	t48 = 0.2e1 * t16 * t38 - 0.2e1 * t35 * t46;
	t49 = 0.1e1 / t42;
	t51 = t48 * t49 + pkin(15) - t12 - t15;
	t52 = t10 * t51;
	t55 = 0.2e1 * t16 * t46 + 0.2e1 * t38 * t35;
	t57 = t55 * t49 + t33 - t34;
	t58 = t27 * t57;
	t60 = 0.1e1 / pkin(23);
	t61 = (t52 - t58) * t60;
	t62 = cos(pkin(14));
	t63 = t62 * pkin(22);
	t64 = t61 * t63;
	t65 = t27 * t51;
	t66 = t10 * t57;
	t68 = (t65 + t66) * t60;
	t69 = sin(pkin(14));
	t70 = t69 * pkin(22);
	t71 = t68 * t70;
	t72 = -pkin(26) - t64 + t71;
	t73 = pkin(21) ^ 2;
	t74 = pkin(24) ^ 2;
	t75 = t64 - t71;
	t76 = t75 ^ 2;
	t77 = t68 * t63;
	t78 = t61 * t70;
	t79 = t77 + t78;
	t80 = t79 ^ 2;
	t81 = pkin(26) ^ 2;
	t84 = -0.2e1 * t72 * t75 + 0.2e1 * t79 ^ 2 + t73 - t74 - t76 - t80 + t81;
	t88 = 0.4e1 * t72 ^ 2 + 0.4e1 * t79 ^ 2;
	t90 = t84 ^ 2;
	t92 = sqrt(t73 * t88 - t90);
	t94 = 0.2e1 * t72 * t84 + 0.2e1 * t79 * t92;
	t95 = 0.1e1 / t88;
	t98 = 0.1e1 / pkin(24);
	t99 = (-t94 * t95 - pkin(26) - t64 + t71) * t98;
	t103 = 0.2e1 * t72 * t92 - 0.2e1 * t84 * t79;
	t106 = (-t103 * t95 - t77 - t78) * t98;
	t108 = t106 * t7 - t99 * t4;
	t112 = t106 * t4 + t99 * t7;
	t114 = t108 * t7 + t112 * t4;
	t116 = t114 * pkin(24) + t77 + t78;
	t118 = 0.1e1 / pkin(21);
	t122 = t108 * t4 - t112 * t7;
	t124 = -t122 * pkin(24) + pkin(26) + t64 - t71;
	t127 = t114 * t116 * t118 - t122 * t124 * t118;
	t131 = t3 * t7 + t6 * t4;
	t134 = t116 * t118;
	t136 = -t114 * t124 * t118 - t134 * t122;
	t144 = cos(qJ(2));
	t145 = t1 * t144;
	t151 = t6 * t144;
	t152 = t4 * t127;
	t154 = t7 * t136;
	t158 = -t4 * t136;
	t160 = t7 * t127;
	t164 = t6 * t2;
	t166 = t4 * pkin(7);
	t172 = t1 * t7 + t164 * t4;
	t173 = -t33 - t34;
	t185 = -t12 + t15;
	t190 = 0.2e1 * t173 * t14 * pkin(18) + 0.2e1 * t35 * t14 * pkin(18) - 0.2e1 * t16 * t22 * pkin(18) + 0.2e1 * t185 * t22 * pkin(18) + 0.2e1 * t27 * t29 * t10 - 0.2e1 * t25 * t27 * t11;
	t193 = 0.1e1 / t46;
	t197 = 0.4e1 * t16 * t173 + 0.4e1 * t35 * t185;
	t201 = 0.2e1 * t17 * t197 - 0.2e1 * t38 * t190;
	t206 = t42 ^ 2;
	t207 = 0.1e1 / t206;
	t210 = t33 + t34 + (-t35 * t193 * t201 + 0.2e1 * t16 * t190 + 0.2e1 * t173 * t38 - 0.2e1 * t185 * t46) * t49 - 0.2e1 * t48 * t207 * t197;
	t222 = t12 - t15 + (t16 * t193 * t201 + 0.2e1 * t173 * t46 + 0.2e1 * t38 * t185 + 0.2e1 * t190 * t35) * t49 - 0.2e1 * t55 * t207 * t197;
	t225 = (t10 * t210 - t27 * t222 - t65 - t66) * t60;
	t226 = t225 * t63;
	t230 = (t10 * t222 + t27 * t210 + t52 - t58) * t60;
	t231 = t230 * t70;
	t232 = -t226 + t231;
	t236 = t230 * t63;
	t237 = t225 * t70;
	t238 = t236 + t237;
	t244 = 0.2e1 * t72 * t232 + 0.2e1 * t79 * t238;
	t247 = 0.1e1 / t92;
	t251 = 0.4e1 * t72 * t232 + 0.4e1 * t79 * t238;
	t255 = -0.2e1 * t84 * t244 + 0.2e1 * t73 * t251;
	t260 = t88 ^ 2;
	t261 = 0.1e1 / t260;
	t265 = (-t226 + t231 - (t79 * t247 * t255 + 0.2e1 * t232 * t84 + 0.2e1 * t238 * t92 + 0.2e1 * t72 * t244) * t95 + 0.2e1 * t94 * t261 * t251) * t98;
	t278 = (-t236 - t237 - (t72 * t247 * t255 + 0.2e1 * t232 * t92 - 0.2e1 * t84 * t238 - 0.2e1 * t244 * t79) * t95 + 0.2e1 * t103 * t261 * t251) * t98;
	t280 = -t265 * t4 + t278 * t7;
	t284 = t265 * t7 + t278 * t4;
	t286 = t280 * t7 + t284 * t4;
	t290 = t286 * pkin(24) + t236 + t237;
	t295 = t280 * t4 - t284 * t7;
	t299 = -t295 * pkin(24) + t226 - t231;
	t302 = t114 * t290 * t118 + t286 * t116 * t118 - t122 * t299 * t118 - t295 * t124 * t118;
	t306 = -t1 * t4 + t164 * t7;
	t314 = -t114 * t299 * t118 - t290 * t118 * t122 - t286 * t124 * t118 - t134 * t295;
	t357 = t2 * t4;
	t359 = t2 * t7;
	t371 = t144 * t4;
	t373 = t144 * t7;
	unknown(1,1) = (t9 * t127 + t131 * t136) * r_i_i_C(1) + (t131 * t127 - t9 * t136) * r_i_i_C(2) + t145 * r_i_i_C(3) + t9 * pkin(7) + t145 * pkin(12) - t6 * pkin(9);
	unknown(1,2) = (t151 * t152 + t151 * t154) * r_i_i_C(1) + (t151 * t158 + t151 * t160) * r_i_i_C(2) - t164 * r_i_i_C(3) + t151 * t166 - t164 * pkin(12);
	unknown(1,3) = (t172 * t302 + t306 * t314) * r_i_i_C(1) + (-t172 * t314 + t306 * t302) * r_i_i_C(2);
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = 0.0e0;
	unknown(2,1) = (t172 * t127 + t306 * t136) * r_i_i_C(1) + (t306 * t127 - t172 * t136) * r_i_i_C(2) + t151 * r_i_i_C(3) + t172 * pkin(7) + t151 * pkin(12) + t1 * pkin(9);
	unknown(2,2) = (-t145 * t152 - t145 * t154) * r_i_i_C(1) + (-t145 * t158 - t145 * t160) * r_i_i_C(2) + t3 * r_i_i_C(3) - t145 * t166 + t3 * pkin(12);
	unknown(2,3) = (-t131 * t314 - t9 * t302) * r_i_i_C(1) + (-t131 * t302 + t9 * t314) * r_i_i_C(2);
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (-t357 * t127 - t359 * t136) * r_i_i_C(1) + (-t359 * t127 + t357 * t136) * r_i_i_C(2) - t144 * r_i_i_C(3) - t357 * pkin(7) - t144 * pkin(12);
	unknown(3,3) = (t371 * t302 + t373 * t314) * r_i_i_C(1) + (t373 * t302 - t371 * t314) * r_i_i_C(2);
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 10
	%% Symbolic Calculation
	% From jacobia_transl_10_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 17:03:52
	% EndTime: 2020-06-27 17:08:08
	% DurationCPUTime: 45.15s
	% Computational Cost: add. (2915955->160), mult. (3812858->325), div. (46190->8), fcn. (1524850->16), ass. (0->144)
	unknown=NaN(3,6);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t45 = t42 * t43 + pkin(15) - t6 - t9;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t51 = t49 * t43 + t27 - t28;
	t52 = t21 * t51;
	t53 = t46 - t52;
	t54 = 0.1e1 / pkin(23);
	t55 = t53 * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t61 = t59 + t60;
	t62 = t61 * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 - t106 * t109;
	t116 = -t106 * t104 + t3 * t109;
	t127 = cos(qJ(2));
	t128 = t1 * t127;
	t134 = t106 * t127;
	t136 = t104 * t53 * t54;
	t139 = -t109 * t61 * t54;
	t144 = t104 * t61 * t54;
	t147 = -t109 * t53 * t54;
	t151 = t106 * t2;
	t153 = t104 * pkin(1);
	t157 = -t27 - t28;
	t169 = -t6 + t9;
	t174 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t157 * t8 * pkin(18) + 0.2e1 * t169 * t16 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t177 = 0.1e1 / t40;
	t181 = 0.4e1 * t10 * t157 + 0.4e1 * t29 * t169;
	t185 = 0.2e1 * t11 * t181 - 0.2e1 * t32 * t174;
	t190 = t36 ^ 2;
	t191 = 0.1e1 / t190;
	t194 = t27 + t28 + (-t29 * t177 * t185 + 0.2e1 * t10 * t174 + 0.2e1 * t157 * t32 - 0.2e1 * t169 * t40) * t43 - 0.2e1 * t42 * t191 * t181;
	t206 = t6 - t9 + (t10 * t177 * t185 + 0.2e1 * t157 * t40 + 0.2e1 * t32 * t169 + 0.2e1 * t174 * t29) * t43 - 0.2e1 * t49 * t191 * t181;
	t208 = t4 * t194 - t21 * t206 - t59 - t60;
	t209 = t208 * t54;
	t210 = t209 * t57;
	t213 = t21 * t194 + t4 * t206 + t46 - t52;
	t214 = t213 * t54;
	t215 = t214 * t64;
	t216 = -t210 + t215;
	t220 = t214 * t57;
	t221 = t209 * t64;
	t222 = t220 + t221;
	t228 = 0.2e1 * t66 * t216 + 0.2e1 * t73 * t222;
	t231 = 0.1e1 / t86;
	t235 = 0.4e1 * t66 * t216 + 0.4e1 * t73 * t222;
	t239 = -0.2e1 * t78 * t228 + 0.2e1 * t67 * t235;
	t244 = t82 ^ 2;
	t245 = 0.1e1 / t244;
	t249 = (-t210 + t215 - (t73 * t231 * t239 + 0.2e1 * t216 * t78 + 0.2e1 * t222 * t86 + 0.2e1 * t66 * t228) * t89 + 0.2e1 * t88 * t245 * t235) * t92;
	t262 = (-t220 - t221 - (t66 * t231 * t239 + 0.2e1 * t216 * t86 - 0.2e1 * t78 * t222 - 0.2e1 * t228 * t73) * t89 + 0.2e1 * t98 * t245 * t235) * t92;
	t264 = t262 * t102 - t249 * t94;
	t268 = t249 * t102 + t262 * t94;
	t270 = t1 * t268 - t151 * t264;
	t275 = t1 * t109 - t151 * t104;
	t280 = t1 * t264 + t151 * t268;
	t285 = t1 * t104 + t151 * t109;
	t333 = t106 * t268 + t3 * t264;
	t340 = t106 * t264 - t3 * t268;
	t359 = t2 * t104;
	t361 = -t2 * t109;
	t373 = t127 * t264;
	t375 = t127 * t104;
	t377 = -t127 * t268;
	t379 = -t127 * t109;
	unknown(1,1) = (t111 * t53 * t54 + t116 * t61 * t54) * r_i_i_C(1) + (-t111 * t61 * t54 + t116 * t53 * t54) * r_i_i_C(2) + t128 * r_i_i_C(3) + t111 * pkin(1) + t128 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (-t134 * t136 - t134 * t139) * r_i_i_C(1) + (t134 * t144 - t134 * t147) * r_i_i_C(2) - t151 * r_i_i_C(3) - t134 * t153 - t151 * pkin(10);
	unknown(1,3) = (t275 * t208 * t54 + t285 * t213 * t54 + t270 * t53 * t54 + t280 * t61 * t54) * r_i_i_C(1) + (t285 * t208 * t54 - t275 * t213 * t54 - t270 * t61 * t54 + t280 * t53 * t54) * r_i_i_C(2) + t270 * pkin(1);
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = 0.0e0;
	unknown(2,1) = (t275 * t53 * t54 + t285 * t61 * t54) * r_i_i_C(1) + (-t275 * t61 * t54 + t285 * t53 * t54) * r_i_i_C(2) + t134 * r_i_i_C(3) + t275 * pkin(1) + t134 * pkin(10) + t1 * pkin(9);
	unknown(2,2) = (t128 * t136 + t128 * t139) * r_i_i_C(1) + (-t128 * t144 + t128 * t147) * r_i_i_C(2) + t3 * r_i_i_C(3) + t128 * t153 + t3 * pkin(10);
	unknown(2,3) = (-t111 * t208 * t54 - t116 * t213 * t54 + t333 * t53 * t54 + t340 * t61 * t54) * r_i_i_C(1) + (t111 * t213 * t54 - t116 * t208 * t54 - t333 * t61 * t54 + t340 * t53 * t54) * r_i_i_C(2) + t333 * pkin(1);
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (t359 * t55 + t361 * t62) * r_i_i_C(1) + (-t359 * t62 + t361 * t55) * r_i_i_C(2) - t127 * r_i_i_C(3) + t359 * pkin(1) - t127 * pkin(10);
	unknown(3,3) = (-t375 * t209 - t379 * t214 - t373 * t55 - t377 * t62) * r_i_i_C(1) + (-t379 * t209 + t375 * t214 + t373 * t62 - t377 * t55) * r_i_i_C(2) - t373 * pkin(1);
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 11
	%% Symbolic Calculation
	% From jacobia_transl_11_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 17:03:54
	% EndTime: 2020-06-27 17:13:10
	% DurationCPUTime: 109.73s
	% Computational Cost: add. (7062779->225), mult. (9225678->432), div. (114544->9), fcn. (3690644->16), ass. (0->182)
	unknown=NaN(3,6);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t45 = t42 * t43 + pkin(15) - t6 - t9;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t51 = t49 * t43 + t27 - t28;
	t52 = t21 * t51;
	t53 = t46 - t52;
	t54 = 0.1e1 / pkin(23);
	t55 = t53 * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t61 = t59 + t60;
	t62 = t61 * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 - t106 * t109;
	t116 = -t106 * t104 + t3 * t109;
	t119 = t111 * t53 * t54 + t116 * t61 * t54;
	t121 = t4 * t53 * t54;
	t123 = t21 * t61 * t54;
	t124 = t121 + t123;
	t126 = t124 * pkin(23) - pkin(15) + t6 + t9;
	t128 = 0.1e1 / pkin(17);
	t131 = t21 * t53 * t54;
	t133 = t4 * t61 * t54;
	t134 = t131 - t133;
	t136 = t134 * pkin(23) + t27 - t28;
	t139 = -t124 * t126 * t128 - t134 * t136 * t128;
	t145 = -t111 * t61 * t54 + t116 * t53 * t54;
	t148 = t126 * t128;
	t150 = t124 * t136 * t128 - t148 * t134;
	t158 = cos(qJ(2));
	t159 = t1 * t158;
	t166 = t106 * t158;
	t168 = t104 * t53 * t54;
	t171 = -t109 * t61 * t54;
	t173 = -t166 * t168 - t166 * t171;
	t176 = t104 * t61 * t54;
	t179 = -t109 * t53 * t54;
	t181 = t166 * t176 - t166 * t179;
	t189 = t106 * t2;
	t192 = t104 * pkin(1);
	t196 = -t27 - t28;
	t208 = -t6 + t9;
	t213 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t208 * t16 * pkin(18) + 0.2e1 * t196 * t8 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t216 = 0.1e1 / t40;
	t220 = 0.4e1 * t10 * t196 + 0.4e1 * t29 * t208;
	t224 = 0.2e1 * t11 * t220 - 0.2e1 * t32 * t213;
	t229 = t36 ^ 2;
	t230 = 0.1e1 / t229;
	t233 = t27 + t28 + (-t29 * t216 * t224 + 0.2e1 * t10 * t213 + 0.2e1 * t196 * t32 - 0.2e1 * t208 * t40) * t43 - 0.2e1 * t42 * t230 * t220;
	t245 = t6 - t9 + (t10 * t216 * t224 + 0.2e1 * t196 * t40 + 0.2e1 * t32 * t208 + 0.2e1 * t213 * t29) * t43 - 0.2e1 * t49 * t230 * t220;
	t247 = -t21 * t245 + t4 * t233 - t59 - t60;
	t248 = t247 * t54;
	t249 = t248 * t57;
	t252 = t21 * t233 + t4 * t245 + t46 - t52;
	t253 = t252 * t54;
	t254 = t253 * t64;
	t255 = -t249 + t254;
	t259 = t253 * t57;
	t260 = t248 * t64;
	t261 = t259 + t260;
	t267 = 0.2e1 * t66 * t255 + 0.2e1 * t73 * t261;
	t270 = 0.1e1 / t86;
	t274 = 0.4e1 * t66 * t255 + 0.4e1 * t73 * t261;
	t278 = -0.2e1 * t78 * t267 + 0.2e1 * t67 * t274;
	t283 = t82 ^ 2;
	t284 = 0.1e1 / t283;
	t288 = (-t249 + t254 - (t73 * t270 * t278 + 0.2e1 * t255 * t78 + 0.2e1 * t261 * t86 + 0.2e1 * t66 * t267) * t89 + 0.2e1 * t88 * t284 * t274) * t92;
	t301 = (-t259 - t260 - (t66 * t270 * t278 + 0.2e1 * t255 * t86 - 0.2e1 * t78 * t261 - 0.2e1 * t267 * t73) * t89 + 0.2e1 * t98 * t284 * t274) * t92;
	t303 = t301 * t102 - t288 * t94;
	t307 = t288 * t102 + t301 * t94;
	t309 = t1 * t307 - t189 * t303;
	t314 = t1 * t109 - t189 * t104;
	t319 = t1 * t303 + t189 * t307;
	t324 = t1 * t104 + t189 * t109;
	t327 = t314 * t247 * t54 + t324 * t252 * t54 + t309 * t53 * t54 + t319 * t61 * t54;
	t333 = t314 * t53 * t54 + t324 * t61 * t54;
	t338 = t21 * t252 * t54 + t4 * t247 * t54 - t131 + t133;
	t342 = t338 * pkin(23) - t27 - t28;
	t349 = t21 * t247 * t54 - t4 * t252 * t54 + t121 + t123;
	t353 = t349 * pkin(23) + t6 - t9;
	t356 = -t124 * t342 * t128 - t338 * t126 * t128 - t134 * t353 * t128 - t349 * t136 * t128;
	t366 = t324 * t247 * t54 - t314 * t252 * t54 - t309 * t61 * t54 + t319 * t53 * t54;
	t372 = -t314 * t61 * t54 + t324 * t53 * t54;
	t380 = t124 * t353 * t128 - t342 * t128 * t134 + t338 * t136 * t128 - t148 * t349;
	t409 = t159 * t168 + t159 * t171;
	t413 = -t159 * t176 + t159 * t179;
	t428 = t106 * t307 + t3 * t303;
	t435 = t106 * t303 - t3 * t307;
	t440 = -t111 * t247 * t54 - t116 * t252 * t54 + t428 * t53 * t54 + t435 * t61 * t54;
	t446 = -t111 * t53 * t54 - t116 * t61 * t54;
	t456 = t111 * t252 * t54 - t116 * t247 * t54 - t428 * t61 * t54 + t435 * t53 * t54;
	t462 = t111 * t61 * t54 - t116 * t53 * t54;
	t475 = t2 * t104;
	t477 = -t2 * t109;
	t479 = t475 * t55 + t477 * t62;
	t483 = -t475 * t62 + t477 * t55;
	t496 = t158 * t303;
	t498 = t158 * t104;
	t500 = -t158 * t307;
	t502 = -t158 * t109;
	t504 = -t498 * t248 - t502 * t253 - t496 * t55 - t500 * t62;
	t508 = -t498 * t55 - t502 * t62;
	t514 = -t502 * t248 + t498 * t253 + t496 * t62 - t500 * t55;
	t518 = t498 * t62 - t502 * t55;
	unknown(1,1) = (t119 * t139 + t145 * t150) * r_i_i_C(1) + (-t119 * t150 + t145 * t139) * r_i_i_C(2) + t159 * r_i_i_C(3) + t119 * pkin(2) + t111 * pkin(1) + t159 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (t173 * t139 + t181 * t150) * r_i_i_C(1) + (t181 * t139 - t173 * t150) * r_i_i_C(2) - t189 * r_i_i_C(3) + t173 * pkin(2) - t166 * t192 - t189 * pkin(10);
	unknown(1,3) = (t327 * t139 + t366 * t150 + t333 * t356 + t372 * t380) * r_i_i_C(1) + (t366 * t139 - t327 * t150 - t333 * t380 + t372 * t356) * r_i_i_C(2) + t327 * pkin(2) + t309 * pkin(1);
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = 0.0e0;
	unknown(2,1) = (t333 * t139 + t372 * t150) * r_i_i_C(1) + (t372 * t139 - t333 * t150) * r_i_i_C(2) + t166 * r_i_i_C(3) + t333 * pkin(2) + t314 * pkin(1) + t166 * pkin(10) + t1 * pkin(9);
	unknown(2,2) = (t409 * t139 + t413 * t150) * r_i_i_C(1) + (t413 * t139 - t409 * t150) * r_i_i_C(2) + t3 * r_i_i_C(3) + t409 * pkin(2) + t159 * t192 + t3 * pkin(10);
	unknown(2,3) = (t440 * t139 + t456 * t150 + t446 * t356 + t462 * t380) * r_i_i_C(1) + (t456 * t139 - t440 * t150 + t462 * t356 - t446 * t380) * r_i_i_C(2) + t440 * pkin(2) + t428 * pkin(1);
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (t479 * t139 + t483 * t150) * r_i_i_C(1) + (t483 * t139 - t479 * t150) * r_i_i_C(2) - t158 * r_i_i_C(3) + t479 * pkin(2) + t475 * pkin(1) - t158 * pkin(10);
	unknown(3,3) = (t504 * t139 + t514 * t150 + t508 * t356 + t518 * t380) * r_i_i_C(1) + (t514 * t139 - t504 * t150 + t518 * t356 - t508 * t380) * r_i_i_C(2) + t504 * pkin(2) - t496 * pkin(1);
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 12
	%% Symbolic Calculation
	% From jacobia_transl_12_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 17:03:56
	% EndTime: 2020-06-27 17:21:21
	% DurationCPUTime: 245.43s
	% Computational Cost: add. (15997547->277), mult. (20878396->510), div. (265112->9), fcn. (8353652->16), ass. (0->220)
	unknown=NaN(3,6);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t44 = t42 * t43;
	t45 = pkin(15) - t6 - t9 + t44;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t50 = t49 * t43;
	t51 = t27 - t28 + t50;
	t52 = t21 * t51;
	t53 = t46 - t52;
	t54 = 0.1e1 / pkin(23);
	t55 = t53 * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t61 = t59 + t60;
	t62 = t61 * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 - t106 * t109;
	t116 = -t106 * t104 + t3 * t109;
	t119 = t111 * t53 * t54 + t116 * t61 * t54;
	t121 = t4 * t53 * t54;
	t123 = t21 * t61 * t54;
	t124 = t121 + t123;
	t126 = t124 * pkin(23) - pkin(15) + t6 + t9;
	t128 = 0.1e1 / pkin(17);
	t131 = t21 * t53 * t54;
	t133 = t4 * t61 * t54;
	t134 = t131 - t133;
	t136 = t134 * pkin(23) + t27 - t28;
	t139 = -t124 * t126 * t128 - t134 * t136 * t128;
	t145 = -t111 * t61 * t54 + t116 * t53 * t54;
	t148 = t126 * t128;
	t150 = t124 * t136 * t128 - t148 * t134;
	t152 = t119 * t139 + t145 * t150;
	t153 = t128 * t8;
	t154 = t44 * t153;
	t155 = t128 * t16;
	t156 = t50 * t155;
	t157 = t154 + t156;
	t161 = -t119 * t150 + t145 * t139;
	t162 = t50 * t153;
	t163 = t44 * t155;
	t164 = -t162 + t163;
	t172 = cos(qJ(2));
	t173 = t1 * t172;
	t181 = t106 * t172;
	t183 = t104 * t53 * t54;
	t186 = -t109 * t61 * t54;
	t188 = -t181 * t183 - t181 * t186;
	t191 = t104 * t61 * t54;
	t194 = -t109 * t53 * t54;
	t196 = t181 * t191 - t181 * t194;
	t198 = t188 * t139 + t196 * t150;
	t202 = t196 * t139 - t188 * t150;
	t210 = t106 * t2;
	t214 = t104 * pkin(1);
	t218 = -t27 - t28;
	t230 = -t6 + t9;
	t235 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t230 * t16 * pkin(18) + 0.2e1 * t218 * t8 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t238 = 0.1e1 / t40;
	t242 = 0.4e1 * t10 * t218 + 0.4e1 * t29 * t230;
	t246 = 0.2e1 * t11 * t242 - 0.2e1 * t32 * t235;
	t250 = (-t29 * t238 * t246 + 0.2e1 * t10 * t235 + 0.2e1 * t218 * t32 - 0.2e1 * t230 * t40) * t43;
	t251 = t36 ^ 2;
	t252 = 0.1e1 / t251;
	t253 = t42 * t252;
	t255 = -0.2e1 * t253 * t242 + t250 + t27 + t28;
	t264 = (t10 * t238 * t246 + 0.2e1 * t218 * t40 + 0.2e1 * t32 * t230 + 0.2e1 * t235 * t29) * t43;
	t265 = t49 * t252;
	t267 = -0.2e1 * t265 * t242 + t264 + t6 - t9;
	t269 = -t21 * t267 + t4 * t255 - t59 - t60;
	t270 = t269 * t54;
	t271 = t270 * t57;
	t274 = t21 * t255 + t4 * t267 + t46 - t52;
	t275 = t274 * t54;
	t276 = t275 * t64;
	t277 = -t271 + t276;
	t281 = t275 * t57;
	t282 = t270 * t64;
	t283 = t281 + t282;
	t289 = 0.2e1 * t66 * t277 + 0.2e1 * t73 * t283;
	t292 = 0.1e1 / t86;
	t296 = 0.4e1 * t66 * t277 + 0.4e1 * t73 * t283;
	t300 = -0.2e1 * t78 * t289 + 0.2e1 * t67 * t296;
	t305 = t82 ^ 2;
	t306 = 0.1e1 / t305;
	t310 = (-t271 + t276 - (t73 * t292 * t300 + 0.2e1 * t277 * t78 + 0.2e1 * t283 * t86 + 0.2e1 * t66 * t289) * t89 + 0.2e1 * t88 * t306 * t296) * t92;
	t323 = (-t281 - t282 - (t66 * t292 * t300 + 0.2e1 * t277 * t86 - 0.2e1 * t78 * t283 - 0.2e1 * t289 * t73) * t89 + 0.2e1 * t98 * t306 * t296) * t92;
	t325 = t323 * t102 - t310 * t94;
	t329 = t310 * t102 + t323 * t94;
	t331 = t1 * t329 - t210 * t325;
	t336 = t1 * t109 - t210 * t104;
	t341 = t1 * t325 + t210 * t329;
	t346 = t1 * t104 + t210 * t109;
	t349 = t336 * t269 * t54 + t346 * t274 * t54 + t331 * t53 * t54 + t341 * t61 * t54;
	t355 = t336 * t53 * t54 + t346 * t61 * t54;
	t360 = t21 * t274 * t54 + t4 * t269 * t54 - t131 + t133;
	t364 = t360 * pkin(23) - t27 - t28;
	t371 = t21 * t269 * t54 - t4 * t274 * t54 + t121 + t123;
	t375 = t371 * pkin(23) + t6 - t9;
	t378 = -t124 * t364 * t128 - t360 * t126 * t128 - t134 * t375 * t128 - t371 * t136 * t128;
	t388 = t346 * t269 * t54 - t336 * t274 * t54 - t331 * t61 * t54 + t341 * t53 * t54;
	t394 = -t336 * t61 * t54 + t346 * t53 * t54;
	t402 = t124 * t375 * t128 - t364 * t128 * t134 + t360 * t136 * t128 - t148 * t371;
	t404 = t349 * t139 + t388 * t150 + t355 * t378 + t394 * t402;
	t408 = t355 * t139 + t394 * t150;
	t410 = 0.2e1 * t153 * t242;
	t413 = 0.2e1 * t155 * t242;
	t415 = t250 * t153 + t264 * t155 - t253 * t410 - t265 * t413 + t162 - t163;
	t421 = t388 * t139 - t349 * t150 - t355 * t402 + t394 * t378;
	t425 = t394 * t139 - t355 * t150;
	t430 = -t264 * t153 + t250 * t155 - t253 * t413 + t265 * t410 + t154 + t156;
	t461 = t173 * t183 + t173 * t186;
	t465 = -t173 * t191 + t173 * t194;
	t467 = t461 * t139 + t465 * t150;
	t471 = t465 * t139 - t461 * t150;
	t487 = t106 * t329 + t3 * t325;
	t494 = t106 * t325 - t3 * t329;
	t499 = -t111 * t269 * t54 - t116 * t274 * t54 + t487 * t53 * t54 + t494 * t61 * t54;
	t505 = -t111 * t53 * t54 - t116 * t61 * t54;
	t515 = t111 * t274 * t54 - t116 * t269 * t54 - t487 * t61 * t54 + t494 * t53 * t54;
	t521 = t111 * t61 * t54 - t116 * t53 * t54;
	t523 = t499 * t139 + t515 * t150 + t505 * t378 + t521 * t402;
	t527 = t505 * t139 + t521 * t150;
	t533 = t515 * t139 - t499 * t150 + t521 * t378 - t505 * t402;
	t537 = t521 * t139 - t505 * t150;
	t551 = t2 * t104;
	t553 = -t2 * t109;
	t555 = t551 * t55 + t553 * t62;
	t559 = t553 * t55 - t551 * t62;
	t561 = t555 * t139 + t559 * t150;
	t565 = t559 * t139 - t555 * t150;
	t579 = t172 * t325;
	t581 = t172 * t104;
	t583 = -t172 * t329;
	t585 = -t172 * t109;
	t587 = -t581 * t270 - t585 * t275 - t579 * t55 - t583 * t62;
	t591 = -t581 * t55 - t585 * t62;
	t597 = -t585 * t270 + t581 * t275 - t583 * t55 + t579 * t62;
	t601 = -t585 * t55 + t581 * t62;
	t603 = t587 * t139 + t597 * t150 + t591 * t378 + t601 * t402;
	t607 = t591 * t139 + t601 * t150;
	t613 = t597 * t139 - t587 * t150 + t601 * t378 - t591 * t402;
	t617 = t601 * t139 - t591 * t150;
	unknown(1,1) = (t152 * t157 + t161 * t164) * r_i_i_C(1) + (-t152 * t164 + t161 * t157) * r_i_i_C(2) + t173 * r_i_i_C(3) + t152 * pkin(3) + t119 * pkin(2) + t111 * pkin(1) + t173 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (t198 * t157 + t202 * t164) * r_i_i_C(1) + (t202 * t157 - t198 * t164) * r_i_i_C(2) - t210 * r_i_i_C(3) + t198 * pkin(3) + t188 * pkin(2) - t181 * t214 - t210 * pkin(10);
	unknown(1,3) = (t404 * t157 + t421 * t164 + t408 * t415 + t425 * t430) * r_i_i_C(1) + (t421 * t157 - t404 * t164 - t408 * t430 + t425 * t415) * r_i_i_C(2) + t404 * pkin(3) + t349 * pkin(2) + t331 * pkin(1);
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(1,6) = 0.0e0;
	unknown(2,1) = (t408 * t157 + t425 * t164) * r_i_i_C(1) + (t425 * t157 - t408 * t164) * r_i_i_C(2) + t181 * r_i_i_C(3) + t408 * pkin(3) + t355 * pkin(2) + t336 * pkin(1) + t181 * pkin(10) + t1 * pkin(9);
	unknown(2,2) = (t467 * t157 + t471 * t164) * r_i_i_C(1) + (t471 * t157 - t467 * t164) * r_i_i_C(2) + t3 * r_i_i_C(3) + t467 * pkin(3) + t461 * pkin(2) + t173 * t214 + t3 * pkin(10);
	unknown(2,3) = (t523 * t157 + t533 * t164 + t527 * t415 + t537 * t430) * r_i_i_C(1) + (t533 * t157 - t523 * t164 + t537 * t415 - t527 * t430) * r_i_i_C(2) + t523 * pkin(3) + t499 * pkin(2) + t487 * pkin(1);
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (t561 * t157 + t565 * t164) * r_i_i_C(1) + (t565 * t157 - t561 * t164) * r_i_i_C(2) - t172 * r_i_i_C(3) + t561 * pkin(3) + t555 * pkin(2) + t551 * pkin(1) - t172 * pkin(10);
	unknown(3,3) = (t603 * t157 + t613 * t164 + t607 * t415 + t617 * t430) * r_i_i_C(1) + (t613 * t157 - t603 * t164 + t617 * t415 - t607 * t430) * r_i_i_C(2) + t603 * pkin(3) + t587 * pkin(2) - t579 * pkin(1);
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	unknown(3,6) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 13
	%% Symbolic Calculation
	% From jacobia_transl_13_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 17:03:58
	% EndTime: 2020-06-27 17:30:16
	% DurationCPUTime: 505.24s
	% Computational Cost: add. (33118513->366), mult. (43134160->668), div. (575592->12), fcn. (17266764->22), ass. (0->289)
	unknown=NaN(3,6);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t44 = t42 * t43;
	t45 = pkin(15) - t6 - t9 + t44;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t50 = t49 * t43;
	t51 = t27 - t28 + t50;
	t52 = t21 * t51;
	t53 = t46 - t52;
	t54 = 0.1e1 / pkin(23);
	t55 = t53 * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t61 = t59 + t60;
	t62 = t61 * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 - t106 * t109;
	t116 = -t106 * t104 + t3 * t109;
	t119 = t111 * t53 * t54 + t116 * t61 * t54;
	t121 = t4 * t53 * t54;
	t123 = t21 * t61 * t54;
	t124 = t121 + t123;
	t126 = t124 * pkin(23) - pkin(15) + t6 + t9;
	t128 = 0.1e1 / pkin(17);
	t131 = t21 * t53 * t54;
	t133 = t4 * t61 * t54;
	t134 = t131 - t133;
	t136 = t134 * pkin(23) + t27 - t28;
	t139 = -t124 * t126 * t128 - t134 * t136 * t128;
	t145 = -t111 * t61 * t54 + t116 * t53 * t54;
	t148 = t126 * t128;
	t150 = t124 * t136 * t128 - t148 * t134;
	t152 = t119 * t139 + t145 * t150;
	t153 = t128 * t8;
	t154 = t44 * t153;
	t155 = t128 * t16;
	t156 = t50 * t155;
	t157 = t154 + t156;
	t161 = -t119 * t150 + t145 * t139;
	t162 = t50 * t153;
	t163 = t44 * t155;
	t164 = -t162 + t163;
	t166 = t152 * t157 + t161 * t164;
	t167 = sin(qJ(5));
	t168 = t167 * pkin(19);
	t169 = cos(qJ(5));
	t170 = t169 * pkin(20);
	t171 = pkin(29) + qJ(3) - qJ(4);
	t172 = cos(t171);
	t174 = -t172 * pkin(18) - pkin(16) - t168 - t170;
	t175 = t174 ^ 2;
	t176 = t169 * pkin(19);
	t177 = t167 * pkin(20);
	t178 = sin(t171);
	t180 = -t178 * pkin(18) + t176 - t177;
	t181 = t180 ^ 2;
	t182 = t175 + t181;
	t183 = sqrt(t182);
	t184 = 0.1e1 / t183;
	t185 = t174 * t184;
	t186 = t185 * t172;
	t187 = -t180 * t184;
	t188 = t187 * t178;
	t189 = t186 - t188;
	t193 = -t152 * t164 + t161 * t157;
	t194 = t187 * t172;
	t195 = t185 * t178;
	t196 = -t194 - t195;
	t204 = cos(qJ(2));
	t205 = t1 * t204;
	t213 = t106 * t204;
	t215 = t104 * t53 * t54;
	t218 = -t109 * t61 * t54;
	t220 = -t213 * t215 - t213 * t218;
	t223 = t104 * t61 * t54;
	t226 = -t109 * t53 * t54;
	t228 = t213 * t223 - t213 * t226;
	t230 = t220 * t139 + t228 * t150;
	t234 = t228 * t139 - t220 * t150;
	t236 = t230 * t157 + t234 * t164;
	t240 = t234 * t157 - t230 * t164;
	t248 = t106 * t2;
	t252 = t104 * pkin(1);
	t256 = -t27 - t28;
	t268 = -t6 + t9;
	t273 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t268 * t16 * pkin(18) + 0.2e1 * t256 * t8 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t276 = 0.1e1 / t40;
	t280 = 0.4e1 * t10 * t256 + 0.4e1 * t29 * t268;
	t284 = 0.2e1 * t11 * t280 - 0.2e1 * t32 * t273;
	t288 = (-t29 * t276 * t284 + 0.2e1 * t10 * t273 + 0.2e1 * t256 * t32 - 0.2e1 * t268 * t40) * t43;
	t289 = t36 ^ 2;
	t290 = 0.1e1 / t289;
	t291 = t42 * t290;
	t293 = -0.2e1 * t291 * t280 + t27 + t28 + t288;
	t302 = (t10 * t276 * t284 + 0.2e1 * t256 * t40 + 0.2e1 * t32 * t268 + 0.2e1 * t273 * t29) * t43;
	t303 = t49 * t290;
	t305 = -0.2e1 * t303 * t280 + t302 + t6 - t9;
	t307 = -t21 * t305 + t4 * t293 - t59 - t60;
	t308 = t307 * t54;
	t309 = t308 * t57;
	t312 = t21 * t293 + t4 * t305 + t46 - t52;
	t313 = t312 * t54;
	t314 = t313 * t64;
	t315 = -t309 + t314;
	t319 = t313 * t57;
	t320 = t308 * t64;
	t321 = t319 + t320;
	t327 = 0.2e1 * t66 * t315 + 0.2e1 * t73 * t321;
	t330 = 0.1e1 / t86;
	t334 = 0.4e1 * t66 * t315 + 0.4e1 * t73 * t321;
	t338 = -0.2e1 * t78 * t327 + 0.2e1 * t67 * t334;
	t343 = t82 ^ 2;
	t344 = 0.1e1 / t343;
	t348 = (-t309 + t314 - (t73 * t330 * t338 + 0.2e1 * t315 * t78 + 0.2e1 * t321 * t86 + 0.2e1 * t66 * t327) * t89 + 0.2e1 * t88 * t344 * t334) * t92;
	t361 = (-t319 - t320 - (t66 * t330 * t338 + 0.2e1 * t315 * t86 - 0.2e1 * t78 * t321 - 0.2e1 * t327 * t73) * t89 + 0.2e1 * t98 * t344 * t334) * t92;
	t363 = t361 * t102 - t348 * t94;
	t367 = t348 * t102 + t361 * t94;
	t369 = t1 * t367 - t248 * t363;
	t374 = t1 * t109 - t248 * t104;
	t379 = t1 * t363 + t248 * t367;
	t384 = t1 * t104 + t248 * t109;
	t387 = t374 * t307 * t54 + t384 * t312 * t54 + t369 * t53 * t54 + t379 * t61 * t54;
	t393 = t374 * t53 * t54 + t384 * t61 * t54;
	t398 = t21 * t312 * t54 + t4 * t307 * t54 - t131 + t133;
	t402 = t398 * pkin(23) - t27 - t28;
	t409 = t21 * t307 * t54 - t4 * t312 * t54 + t121 + t123;
	t413 = t409 * pkin(23) + t6 - t9;
	t416 = -t124 * t402 * t128 - t398 * t126 * t128 - t134 * t413 * t128 - t409 * t136 * t128;
	t426 = t384 * t307 * t54 - t374 * t312 * t54 - t369 * t61 * t54 + t379 * t53 * t54;
	t432 = -t374 * t61 * t54 + t384 * t53 * t54;
	t440 = t124 * t413 * t128 - t402 * t128 * t134 + t398 * t136 * t128 - t148 * t409;
	t442 = t387 * t139 + t426 * t150 + t393 * t416 + t432 * t440;
	t446 = t393 * t139 + t432 * t150;
	t448 = 0.2e1 * t153 * t280;
	t451 = 0.2e1 * t155 * t280;
	t453 = t288 * t153 + t302 * t155 - t291 * t448 - t303 * t451 + t162 - t163;
	t459 = t426 * t139 - t387 * t150 - t393 * t440 + t432 * t416;
	t463 = t432 * t139 - t393 * t150;
	t468 = -t302 * t153 + t288 * t155 - t291 * t451 + t303 * t448 + t154 + t156;
	t470 = t442 * t157 + t459 * t164 + t446 * t453 + t463 * t468;
	t474 = t446 * t157 + t463 * t164;
	t476 = 0.1e1 / t183 / t182;
	t477 = t174 * t476;
	t482 = -t180 * t172 * pkin(18) + t174 * t178 * pkin(18);
	t483 = 0.2e1 * t172 * t482;
	t486 = -t180 * t476;
	t487 = 0.2e1 * t178 * t482;
	t490 = -t477 * t483 / 0.2e1 - t195 + t486 * t487 / 0.2e1 - t194;
	t496 = t459 * t157 - t442 * t164 - t446 * t468 + t463 * t453;
	t500 = t463 * t157 - t446 * t164;
	t501 = t172 ^ 2;
	t503 = t501 * pkin(18) * t184;
	t506 = t178 ^ 2;
	t508 = t506 * pkin(18) * t184;
	t511 = -t503 + t486 * t483 / 0.2e1 + t188 - t508 + t477 * t487 / 0.2e1 - t186;
	t525 = -0.2e1 * t172 * t482;
	t528 = -0.2e1 * t178 * t482;
	t531 = -t477 * t525 / 0.2e1 + t195 + t486 * t528 / 0.2e1 + t194;
	t537 = t503 + t486 * t525 / 0.2e1 - t188 + t508 + t477 * t528 / 0.2e1 + t186;
	t546 = -t176 + t177;
	t547 = t546 * t184;
	t550 = -t168 - t170;
	t552 = t174 * t546 + t180 * t550;
	t553 = 0.2e1 * t172 * t552;
	t556 = -t550 * t184;
	t558 = 0.2e1 * t178 * t552;
	t561 = t547 * t172 - t477 * t553 / 0.2e1 - t556 * t178 + t486 * t558 / 0.2e1;
	t569 = -t556 * t172 + t486 * t553 / 0.2e1 - t547 * t178 + t477 * t558 / 0.2e1;
	t595 = t205 * t215 + t205 * t218;
	t599 = -t205 * t223 + t205 * t226;
	t601 = t595 * t139 + t599 * t150;
	t605 = t599 * t139 - t595 * t150;
	t607 = t601 * t157 + t605 * t164;
	t611 = t605 * t157 - t601 * t164;
	t627 = t106 * t367 + t3 * t363;
	t634 = t106 * t363 - t3 * t367;
	t639 = -t111 * t307 * t54 - t116 * t312 * t54 + t627 * t53 * t54 + t634 * t61 * t54;
	t645 = -t111 * t53 * t54 - t116 * t61 * t54;
	t655 = t111 * t312 * t54 - t116 * t307 * t54 + t634 * t53 * t54 - t627 * t61 * t54;
	t661 = t111 * t61 * t54 - t116 * t53 * t54;
	t663 = t639 * t139 + t655 * t150 + t645 * t416 + t661 * t440;
	t667 = t645 * t139 + t661 * t150;
	t673 = t655 * t139 - t639 * t150 + t661 * t416 - t645 * t440;
	t677 = t661 * t139 - t645 * t150;
	t679 = t663 * t157 + t673 * t164 + t667 * t453 + t677 * t468;
	t683 = t667 * t157 + t677 * t164;
	t689 = t673 * t157 - t663 * t164 + t677 * t453 - t667 * t468;
	t693 = t677 * t157 - t667 * t164;
	t725 = t2 * t104;
	t727 = -t2 * t109;
	t729 = t725 * t55 + t727 * t62;
	t733 = t727 * t55 - t725 * t62;
	t735 = t729 * t139 + t733 * t150;
	t739 = t733 * t139 - t729 * t150;
	t741 = t735 * t157 + t739 * t164;
	t745 = t739 * t157 - t735 * t164;
	t759 = t204 * t363;
	t761 = t204 * t104;
	t763 = -t204 * t367;
	t765 = -t204 * t109;
	t767 = -t761 * t308 - t765 * t313 - t759 * t55 - t763 * t62;
	t771 = -t761 * t55 - t765 * t62;
	t777 = -t765 * t308 + t761 * t313 - t763 * t55 + t759 * t62;
	t781 = -t765 * t55 + t761 * t62;
	t783 = t767 * t139 + t777 * t150 + t771 * t416 + t781 * t440;
	t787 = t771 * t139 + t781 * t150;
	t793 = t777 * t139 - t767 * t150 + t781 * t416 - t771 * t440;
	t797 = t781 * t139 - t771 * t150;
	t799 = t783 * t157 + t793 * t164 + t787 * t453 + t797 * t468;
	t803 = t787 * t157 + t797 * t164;
	t809 = t793 * t157 - t783 * t164 + t797 * t453 - t787 * t468;
	t813 = t797 * t157 - t787 * t164;
	unknown(1,1) = (t166 * t189 + t193 * t196) * r_i_i_C(1) + (-t166 * t196 + t193 * t189) * r_i_i_C(2) + t205 * r_i_i_C(3) + t152 * pkin(3) + t119 * pkin(2) + t111 * pkin(1) + t205 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (t236 * t189 + t240 * t196) * r_i_i_C(1) + (t240 * t189 - t236 * t196) * r_i_i_C(2) - t248 * r_i_i_C(3) + t230 * pkin(3) + t220 * pkin(2) - t213 * t252 - t248 * pkin(10);
	unknown(1,3) = (t470 * t189 + t496 * t196 + t474 * t490 + t500 * t511) * r_i_i_C(1) + (t496 * t189 - t470 * t196 - t474 * t511 + t500 * t490) * r_i_i_C(2) + t442 * pkin(3) + t387 * pkin(2) + t369 * pkin(1);
	unknown(1,4) = (t474 * t531 + t500 * t537) * r_i_i_C(1) + (-t474 * t537 + t500 * t531) * r_i_i_C(2);
	unknown(1,5) = (t474 * t561 + t500 * t569) * r_i_i_C(1) + (-t474 * t569 + t500 * t561) * r_i_i_C(2);
	unknown(1,6) = 0.0e0;
	unknown(2,1) = (t474 * t189 + t500 * t196) * r_i_i_C(1) + (t500 * t189 - t474 * t196) * r_i_i_C(2) + t213 * r_i_i_C(3) + t446 * pkin(3) + t393 * pkin(2) + t374 * pkin(1) + t213 * pkin(10) + t1 * pkin(9);
	unknown(2,2) = (t607 * t189 + t611 * t196) * r_i_i_C(1) + (t611 * t189 - t607 * t196) * r_i_i_C(2) + t3 * r_i_i_C(3) + t601 * pkin(3) + t595 * pkin(2) + t205 * t252 + t3 * pkin(10);
	unknown(2,3) = (t679 * t189 + t689 * t196 + t683 * t490 + t693 * t511) * r_i_i_C(1) + (t689 * t189 - t679 * t196 + t693 * t490 - t683 * t511) * r_i_i_C(2) + t663 * pkin(3) + t639 * pkin(2) + t627 * pkin(1);
	unknown(2,4) = (t683 * t531 + t693 * t537) * r_i_i_C(1) + (t693 * t531 - t683 * t537) * r_i_i_C(2);
	unknown(2,5) = (t683 * t561 + t693 * t569) * r_i_i_C(1) + (t693 * t561 - t683 * t569) * r_i_i_C(2);
	unknown(2,6) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (t741 * t189 + t745 * t196) * r_i_i_C(1) + (t745 * t189 - t741 * t196) * r_i_i_C(2) - t204 * r_i_i_C(3) + t735 * pkin(3) + t729 * pkin(2) + t725 * pkin(1) - t204 * pkin(10);
	unknown(3,3) = (t799 * t189 + t809 * t196 + t803 * t490 + t813 * t511) * r_i_i_C(1) + (t809 * t189 - t799 * t196 + t813 * t490 - t803 * t511) * r_i_i_C(2) + t783 * pkin(3) + t767 * pkin(2) - t759 * pkin(1);
	unknown(3,4) = (t803 * t531 + t813 * t537) * r_i_i_C(1) + (t813 * t531 - t803 * t537) * r_i_i_C(2);
	unknown(3,5) = (t803 * t561 + t813 * t569) * r_i_i_C(1) + (t813 * t561 - t803 * t569) * r_i_i_C(2);
	unknown(3,6) = 0.0e0;
	Ja_transl = unknown;
end