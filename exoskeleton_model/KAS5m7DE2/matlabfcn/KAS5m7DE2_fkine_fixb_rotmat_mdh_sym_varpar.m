% Calculate forward kinematics (homogenous transformation matrices) for fixed-base
% KAS5m7DE2
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% pkin [24x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[delta10,delta12,delta17,delta18,delta20,delta8,delta9,l1,l11,l12,l13,l14,l15,l17,l18,l2,l20,l21,l22,l23,l3,l4,l5,l6]';
% 
% Output:
% Tc_mdh [4x4x(21+1)]
%   homogenous transformation matrices for each (body) frame (MDH)
%   1:  mdh base (link 0) -> mdh base link 0 (unit matrix, no information)
%   ...
%   16:  mdh base (link 0) -> mdh frame (16-1), link (16-1)
%   ...
%   21+1:  mdh base (link 0) -> mdh frame (21)
% T_c_stack [(21+1)*3 x 4]
%   stacked matrices from Tc_mdh into one 2D array, last row left out.
%   Last row only contains [0 0 0 1].

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-03 15:49
% Revision: caa0dbda1e8a16d11faaa29ba3bbef6afcd619f7 (2020-05-25)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function [Tc_mdh, Tc_stack] = KAS5m7DE2_fkine_fixb_rotmat_mdh_sym_varpar(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(24,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'KAS5m7DE2_fkine_fixb_rotmat_mdh_sym_varpar: qJ has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [24 1]), ...
  'KAS5m7DE2_fkine_fixb_rotmat_mdh_sym_varpar: pkin has to be [24x1] (double)');

%% Symbolic Calculation
% From fkine_mdh_floatb_twist_rotmat_matlab.m
% OptimizationMode: 1
% StartTime: 2020-05-25 11:47:14
% EndTime: 2020-05-25 11:48:41
% DurationCPUTime: 85.76s
% Computational Cost: add. (5446203->414), mult. (7028112->353), div. (113660->4), fcn. (2818119->56), ass. (0->481)
unknown=NaN(66,4);
t1 = sin(qJ(1));
t2 = cos(qJ(1));
t3 = (pkin(8) + 0);
t4 = sin(qJ(2));
t5 = t1 * t4;
t6 = cos(qJ(2));
t7 = t1 * t6;
t8 = t2 * pkin(16);
t10 = t2 * t4;
t11 = t2 * t6;
t12 = t1 * pkin(16);
t14 = sin(qJ(3));
t15 = cos(qJ(3));
t16 = -pkin(23) + pkin(24);
t17 = t15 * t16;
t18 = pkin(3) + qJ(3);
t19 = cos(t18);
t20 = t19 * pkin(12);
t21 = -pkin(9) + t17 + t20;
t22 = pkin(11) ^ 2;
t23 = pkin(19) ^ 2;
t24 = t19 ^ 2;
t25 = pkin(12) ^ 2;
t27 = sin(t18);
t28 = t27 ^ 2;
t31 = (-pkin(9) + t17) ^ 2;
t32 = t14 ^ 2;
t33 = t16 ^ 2;
t37 = t14 * t16;
t38 = t27 * pkin(12);
t39 = -t37 + t38;
t42 = 0.2e1 * pkin(12) * t19 * t21 + 0.2e1 * pkin(12) * t27 * t39 - t24 * t25 - t25 * t28 + t32 * t33 + t22 - t23 + t31;
t46 = 0.4e1 * t21 ^ 2 + 0.4e1 * t39 ^ 2;
t48 = t42 ^ 2;
t50 = sqrt(t22 * t46 - t48);
t53 = 0.1e1 / t46;
t54 = (0.2e1 * t21 * t42 - 0.2e1 * t39 * t50) * t53;
t55 = pkin(9) - t17 - t20 + t54;
t60 = (0.2e1 * t21 * t50 + 0.2e1 * t39 * t42) * t53;
t61 = t37 - t38 + t60;
t63 = t14 * t55 + t15 * t61;
t64 = 0.1e1 / pkin(19);
t65 = t63 * t64;
t66 = cos(pkin(7));
t67 = t66 * pkin(18);
t68 = t65 * t67;
t71 = -t14 * t61 + t15 * t55;
t72 = t71 * t64;
t73 = sin(pkin(7));
t74 = t73 * pkin(18);
t75 = t72 * t74;
t76 = pkin(17) ^ 2;
t77 = pkin(22) ^ 2;
t78 = t72 * t67;
t79 = t65 * t74;
t80 = t78 - t79;
t81 = t80 ^ 2;
t82 = t68 + t75;
t83 = t82 ^ 2;
t84 = pkin(24) ^ 2;
t85 = -pkin(24) - t78 + t79;
t88 = -0.2e1 * t80 * t85 + 0.2e1 * t82 ^ 2 + t76 - t77 - t81 - t83 + t84;
t92 = 0.4e1 * t82 ^ 2 + 0.4e1 * t85 ^ 2;
t94 = t88 ^ 2;
t96 = sqrt(t76 * t92 - t94);
t99 = 0.1e1 / t92;
t101 = -t68 - t75 - (-0.2e1 * t82 * t88 + 0.2e1 * t85 * t96) * t99;
t106 = t78 - t79 + (0.2e1 * t82 * t96 + 0.2e1 * t85 * t88) * t99 + pkin(24);
t107 = atan2(t101, t106);
t108 = t107 + pkin(6);
t109 = sin(t108);
t111 = cos(t108);
t112 = t2 * t111;
t117 = t7 * pkin(21);
t118 = t117 + t8 + 0;
t120 = t1 * t111;
t125 = t11 * pkin(21);
t126 = -t125 + t12 + 0;
t127 = t6 * t109;
t129 = t4 * pkin(21);
t130 = -t129 + pkin(8) + 0;
t131 = t107 + pkin(6) + qJ(3);
t132 = sin(t131);
t134 = cos(t131);
t140 = t109 * pkin(23);
t157 = t107 + pkin(6) + qJ(3) + qJ(4);
t158 = sin(t157);
t160 = cos(t157);
t166 = pkin(9) * t132;
t167 = t166 + t140;
t169 = pkin(9) * t134;
t170 = t111 * pkin(23);
t171 = -t169 - t170;
t173 = -t167 * t5 + t171 * t2 + t117 + t8 + 0;
t182 = t1 * t171 + t10 * t167 + t12 - t125 + 0;
t186 = -t167 * t6 + pkin(8) - t129 + 0;
t187 = 0.2e1 * qJ(4);
t188 = t107 + pkin(6) + t187 + pkin(4);
t189 = cos(t188);
t191 = sin(t188);
t193 = -t189 * t5 + t191 * t2;
t196 = t189 * t2 + t191 * t5;
t197 = pkin(10) * t158;
t198 = t197 + t166 + t140;
t199 = t5 * t198;
t200 = pkin(10) * t160;
t201 = -t200 - t169 - t170;
t202 = t2 * t201;
t206 = t1 * t191 + t10 * t189;
t209 = t1 * t189 - t10 * t191;
t210 = t10 * t198;
t211 = t1 * t201;
t213 = t6 * t189;
t214 = t6 * t191;
t215 = t6 * t198;
t217 = cos(qJ(5));
t219 = sin(qJ(5));
t243 = sin(pkin(6));
t245 = cos(pkin(6));
t246 = t2 * t245;
t252 = t1 * t245;
t257 = t6 * t243;
t259 = 0.1e1 / pkin(22);
t260 = t101 * t259;
t262 = -t106 * t259;
t264 = t243 * t260 + t245 * t262;
t268 = -t243 * t262 + t245 * t260;
t278 = atan2(-(t243 * t268 - t245 * t264) * pkin(22) + pkin(24) + t78 - t79, (t243 * t264 + t245 * t268) * pkin(22) + t68 + t75);
t279 = pkin(6) + t107 - t278;
t280 = cos(t279);
t282 = sin(t279);
t284 = t2 * t282 - t280 * t5;
t287 = t2 * t280 + t282 * t5;
t288 = t243 * pkin(22);
t294 = t1 * t282 + t10 * t280;
t297 = t1 * t280 - t10 * t282;
t301 = t6 * t280;
t302 = t6 * t282;
t305 = atan2(-t63, t71);
t306 = t107 + pkin(6) - t305;
t307 = sin(t306);
t309 = cos(t306);
t315 = t109 * pkin(24);
t346 = atan2((t14 * t64 * t71 - t15 * t63 * t64) * pkin(19) + t37 - t38, (t14 * t63 * t64 + t15 * t64 * t71) * pkin(19) - pkin(9) + t17 + t20);
t347 = t107 + pkin(6) - t346 + qJ(3);
t348 = sin(t347);
t350 = cos(t347);
t352 = t2 * t350 + t348 * t5;
t355 = -t2 * t348 + t350 * t5;
t356 = pkin(19) * t307;
t357 = t356 + t315;
t359 = pkin(19) * t309;
t360 = t111 * pkin(24);
t361 = -t359 - t360;
t366 = t1 * t350 - t10 * t348;
t369 = -t1 * t348 - t10 * t350;
t373 = t6 * t348;
t374 = t6 * t350;
t377 = 0.2e1 * qJ(3);
t378 = t107 + pkin(6) + t377;
t379 = cos(t378);
t381 = sin(t378);
t395 = t107 + pkin(6) + t377 + pkin(3);
t396 = sin(t395);
t398 = cos(t395);
t412 = qJ(4) - qJ(3) + pkin(4);
t413 = sin(t412);
t415 = pkin(3) + qJ(3) - qJ(4);
t416 = sin(t415);
t418 = cos(t412);
t420 = pkin(12) * t416 - pkin(14) * t418 + pkin(15) * t413;
t423 = cos(t415);
t425 = -pkin(12) * t423 - pkin(14) * t413 - pkin(15) * t418 - pkin(10);
t426 = atan2(t420, t425);
t427 = t107 + pkin(6) + qJ(3) - t426 + qJ(4);
t428 = cos(t427);
t430 = sin(t427);
t432 = -t2 * t430 + t428 * t5;
t435 = -t2 * t428 - t430 * t5;
t437 = -pkin(12) * t396 + t140 + t166;
t438 = t5 * t437;
t440 = pkin(12) * t398 - t169 - t170;
t441 = t2 * t440;
t442 = -t438 + t117 + t441 + t8 + 0;
t445 = -t1 * t430 - t10 * t428;
t448 = -t1 * t428 + t10 * t430;
t449 = t10 * t437;
t450 = t1 * t440;
t451 = t449 - t125 + t450 + t12 + 0;
t452 = t6 * t428;
t453 = t6 * t430;
t454 = t6 * t437;
t455 = -t454 - t129 + pkin(8) + 0;
t456 = t425 ^ 2;
t457 = t420 ^ 2;
t459 = sqrt(t456 + t457);
t461 = -t435 * t459 + t117 - t438 + t441 + t8 + 0;
t463 = -t448 * t459 + t12 - t125 + t449 + t450 + 0;
t465 = t453 * t459 + pkin(8) - t129 - t454 + 0;
t466 = t107 + pkin(6) - t305 + pkin(7);
t467 = sin(t466);
t469 = cos(t466);
t476 = pkin(18) * t467 + t315;
t479 = -pkin(18) * t469 - t360;
t495 = atan2(t60, t54);
t496 = t107 + pkin(6) + qJ(3) + t495;
t497 = sin(t496);
t499 = cos(t496);
t513 = t107 + pkin(6) + t187 + pkin(4) - pkin(5);
t514 = cos(t513);
t516 = sin(t513);
t523 = pkin(20) * t516 + t140 + t166 + t197;
t526 = -pkin(20) * t514 - t169 - t170 - t200;
t543 = pkin(17) * t280 + t288;
t547 = pkin(17) * t282 - pkin(22) * t245;
t556 = -pkin(11) * t348 + t315 + t356;
t559 = pkin(11) * t350 - t359 - t360;
unknown(1,1) = 1;
unknown(1,2) = 0;
unknown(1,3) = 0;
unknown(1,4) = 0;
unknown(2,1) = 0;
unknown(2,2) = 1;
unknown(2,3) = 0;
unknown(2,4) = 0;
unknown(3,1) = 0;
unknown(3,2) = 0;
unknown(3,3) = 1;
unknown(3,4) = 0;
unknown(4,1) = t1;
unknown(4,2) = t2;
unknown(4,3) = 0;
unknown(4,4) = 0;
unknown(5,1) = -t2;
unknown(5,2) = t1;
unknown(5,3) = 0;
unknown(5,4) = 0;
unknown(6,1) = 0;
unknown(6,2) = 0;
unknown(6,3) = 1;
unknown(6,4) = t3;
unknown(7,1) = -t5;
unknown(7,2) = -t7;
unknown(7,3) = t2;
unknown(7,4) = (t8 + 0);
unknown(8,1) = t10;
unknown(8,2) = t11;
unknown(8,3) = t1;
unknown(8,4) = (t12 + 0);
unknown(9,1) = -t6;
unknown(9,2) = t4;
unknown(9,3) = 0;
unknown(9,4) = t3;
unknown(10,1) = (-t109 * t5 - t112);
unknown(10,2) = (t109 * t2 - t111 * t5);
unknown(10,3) = t7;
unknown(10,4) = t118;
unknown(11,1) = (t10 * t109 - t120);
unknown(11,2) = (t1 * t109 + t10 * t111);
unknown(11,3) = -t11;
unknown(11,4) = t126;
unknown(12,1) = -t127;
unknown(12,2) = -(t6 * t111);
unknown(12,3) = -t4;
unknown(12,4) = t130;
unknown(13,1) = (-t132 * t5 - t134 * t2);
unknown(13,2) = (t132 * t2 - t134 * t5);
unknown(13,3) = t7;
unknown(13,4) = (-pkin(23) * t112 - t140 * t5 + t117 + t8 + 0);
unknown(14,1) = (-t1 * t134 + t10 * t132);
unknown(14,2) = (t1 * t132 + t10 * t134);
unknown(14,3) = -t11;
unknown(14,4) = (-pkin(23) * t120 + t10 * t140 + t12 - t125 + 0);
unknown(15,1) = -(t6 * t132);
unknown(15,2) = -(t6 * t134);
unknown(15,3) = -t4;
unknown(15,4) = (-pkin(23) * t127 + pkin(8) - t129 + 0);
unknown(16,1) = (-t158 * t5 - t160 * t2);
unknown(16,2) = (t158 * t2 - t160 * t5);
unknown(16,3) = t7;
unknown(16,4) = t173;
unknown(17,1) = (-t1 * t160 + t10 * t158);
unknown(17,2) = (t1 * t158 + t10 * t160);
unknown(17,3) = -t11;
unknown(17,4) = t182;
unknown(18,1) = -(t6 * t158);
unknown(18,2) = -(t6 * t160);
unknown(18,3) = -t4;
unknown(18,4) = t186;
unknown(19,1) = t193;
unknown(19,2) = t196;
unknown(19,3) = t7;
unknown(19,4) = (-t199 + t117 + t202 + t8 + 0);
unknown(20,1) = t206;
unknown(20,2) = t209;
unknown(20,3) = -t11;
unknown(20,4) = (t210 - t125 + t211 + t12 + 0);
unknown(21,1) = -t213;
unknown(21,2) = t214;
unknown(21,3) = -t4;
unknown(21,4) = (-t215 - t129 + pkin(8) + 0);
unknown(22,1) = (t193 * t217 + t219 * t7);
unknown(22,2) = (-t193 * t219 + t217 * t7);
unknown(22,3) = -t196;
unknown(22,4) = (-pkin(13) * t196 + t117 - t199 + t202 + t8 + 0);
unknown(23,1) = (-t11 * t219 + t206 * t217);
unknown(23,2) = (-t11 * t217 - t206 * t219);
unknown(23,3) = -t209;
unknown(23,4) = (-pkin(13) * t209 + t12 - t125 + t210 + t211 + 0);
unknown(24,1) = (-t213 * t217 - t219 * t4);
unknown(24,2) = (t213 * t219 - t217 * t4);
unknown(24,3) = -t214;
unknown(24,4) = (-pkin(13) * t214 + pkin(8) - t129 - t215 + 0);
unknown(25,1) = (t243 * t5 + t246);
unknown(25,2) = (-t2 * t243 + t245 * t5);
unknown(25,3) = t7;
unknown(25,4) = t118;
unknown(26,1) = (-t10 * t243 + t252);
unknown(26,2) = (-t1 * t243 - t10 * t245);
unknown(26,3) = -t11;
unknown(26,4) = t126;
unknown(27,1) = t257;
unknown(27,2) = (t6 * t245);
unknown(27,3) = -t4;
unknown(27,4) = t130;
unknown(28,1) = t284;
unknown(28,2) = t287;
unknown(28,3) = t7;
unknown(28,4) = (-pkin(22) * t246 - t288 * t5 + t117 + t8 + 0);
unknown(29,1) = t294;
unknown(29,2) = t297;
unknown(29,3) = -t11;
unknown(29,4) = (-pkin(22) * t252 + t10 * t288 + t12 - t125 + 0);
unknown(30,1) = -t301;
unknown(30,2) = t302;
unknown(30,3) = -t4;
unknown(30,4) = (-pkin(22) * t257 + pkin(8) - t129 + 0);
unknown(31,1) = (-t2 * t309 - t307 * t5);
unknown(31,2) = (t2 * t307 - t309 * t5);
unknown(31,3) = t7;
unknown(31,4) = (-pkin(24) * t112 - t315 * t5 + t117 + t8 + 0);
unknown(32,1) = (-t1 * t309 + t10 * t307);
unknown(32,2) = (t1 * t307 + t10 * t309);
unknown(32,3) = -t11;
unknown(32,4) = (-pkin(24) * t120 + t10 * t315 + t12 - t125 + 0);
unknown(33,1) = -(t6 * t307);
unknown(33,2) = -(t6 * t309);
unknown(33,3) = -t4;
unknown(33,4) = (-pkin(24) * t127 + pkin(8) - t129 + 0);
unknown(34,1) = t352;
unknown(34,2) = t355;
unknown(34,3) = t7;
unknown(34,4) = (t2 * t361 - t357 * t5 + t117 + t8 + 0);
unknown(35,1) = t366;
unknown(35,2) = t369;
unknown(35,3) = -t11;
unknown(35,4) = (t1 * t361 + t10 * t357 + t12 - t125 + 0);
unknown(36,1) = t373;
unknown(36,2) = t374;
unknown(36,3) = -t4;
unknown(36,4) = (-t357 * t6 + pkin(8) - t129 + 0);
unknown(37,1) = (-t2 * t381 + t379 * t5);
unknown(37,2) = (-t2 * t379 - t381 * t5);
unknown(37,3) = t7;
unknown(37,4) = t173;
unknown(38,1) = (-t1 * t381 - t10 * t379);
unknown(38,2) = (-t1 * t379 + t10 * t381);
unknown(38,3) = -t11;
unknown(38,4) = t182;
unknown(39,1) = (t6 * t379);
unknown(39,2) = -(t6 * t381);
unknown(39,3) = -t4;
unknown(39,4) = t186;
unknown(40,1) = (t2 * t398 + t396 * t5);
unknown(40,2) = (-t2 * t396 + t398 * t5);
unknown(40,3) = t7;
unknown(40,4) = t173;
unknown(41,1) = (t1 * t398 - t10 * t396);
unknown(41,2) = (-t1 * t396 - t10 * t398);
unknown(41,3) = -t11;
unknown(41,4) = t182;
unknown(42,1) = (t6 * t396);
unknown(42,2) = (t6 * t398);
unknown(42,3) = -t4;
unknown(42,4) = t186;
unknown(43,1) = t432;
unknown(43,2) = t435;
unknown(43,3) = t7;
unknown(43,4) = t442;
unknown(44,1) = t445;
unknown(44,2) = t448;
unknown(44,3) = -t11;
unknown(44,4) = t451;
unknown(45,1) = t452;
unknown(45,2) = -t453;
unknown(45,3) = -t4;
unknown(45,4) = t455;
unknown(46,1) = t432;
unknown(46,2) = t7;
unknown(46,3) = -t435;
unknown(46,4) = t461;
unknown(47,1) = t445;
unknown(47,2) = -t11;
unknown(47,3) = -t448;
unknown(47,4) = t463;
unknown(48,1) = t452;
unknown(48,2) = -t4;
unknown(48,3) = t453;
unknown(48,4) = t465;
unknown(49,1) = (-t2 * t469 - t467 * t5);
unknown(49,2) = (t2 * t467 - t469 * t5);
unknown(49,3) = t7;
unknown(49,4) = (t2 * t479 - t476 * t5 + t117 + t8 + 0);
unknown(50,1) = (-t1 * t469 + t10 * t467);
unknown(50,2) = (t1 * t467 + t10 * t469);
unknown(50,3) = -t11;
unknown(50,4) = (t1 * t479 + t10 * t476 + t12 - t125 + 0);
unknown(51,1) = -(t6 * t467);
unknown(51,2) = -(t6 * t469);
unknown(51,3) = -t4;
unknown(51,4) = (-t476 * t6 + pkin(8) - t129 + 0);
unknown(52,1) = (t2 * t499 + t497 * t5);
unknown(52,2) = (-t2 * t497 + t499 * t5);
unknown(52,3) = t7;
unknown(52,4) = t442;
unknown(53,1) = (t1 * t499 - t10 * t497);
unknown(53,2) = (-t1 * t497 - t10 * t499);
unknown(53,3) = -t11;
unknown(53,4) = t451;
unknown(54,1) = (t6 * t497);
unknown(54,2) = (t6 * t499);
unknown(54,3) = -t4;
unknown(54,4) = t455;
unknown(55,1) = (t2 * t516 - t5 * t514);
unknown(55,2) = (t2 * t514 + t5 * t516);
unknown(55,3) = t7;
unknown(55,4) = (t2 * t526 - t5 * t523 + t117 + t8 + 0);
unknown(56,1) = (t1 * t516 + t10 * t514);
unknown(56,2) = (t1 * t514 - t10 * t516);
unknown(56,3) = -t11;
unknown(56,4) = (t1 * t526 + t10 * t523 + t12 - t125 + 0);
unknown(57,1) = -(t6 * t514);
unknown(57,2) = (t6 * t516);
unknown(57,3) = -t4;
unknown(57,4) = (-t523 * t6 + pkin(8) - t129 + 0);
unknown(58,1) = t284;
unknown(58,2) = t287;
unknown(58,3) = t7;
unknown(58,4) = (t2 * t547 - t5 * t543 + t117 + t8 + 0);
unknown(59,1) = t294;
unknown(59,2) = t297;
unknown(59,3) = -t11;
unknown(59,4) = (t1 * t547 + t10 * t543 + t12 - t125 + 0);
unknown(60,1) = -t301;
unknown(60,2) = t302;
unknown(60,3) = -t4;
unknown(60,4) = (-t543 * t6 + pkin(8) - t129 + 0);
unknown(61,1) = t352;
unknown(61,2) = t355;
unknown(61,3) = t7;
unknown(61,4) = (t2 * t559 - t5 * t556 + t117 + t8 + 0);
unknown(62,1) = t366;
unknown(62,2) = t369;
unknown(62,3) = -t11;
unknown(62,4) = (t1 * t559 + t10 * t556 + t12 - t125 + 0);
unknown(63,1) = t373;
unknown(63,2) = t374;
unknown(63,3) = -t4;
unknown(63,4) = (-t556 * t6 + pkin(8) - t129 + 0);
unknown(64,1) = t432;
unknown(64,2) = t435;
unknown(64,3) = t7;
unknown(64,4) = t461;
unknown(65,1) = t445;
unknown(65,2) = t448;
unknown(65,3) = -t11;
unknown(65,4) = t463;
unknown(66,1) = t452;
unknown(66,2) = -t453;
unknown(66,3) = -t4;
unknown(66,4) = t465;
Tc_stack = unknown;
%% Postprocessing: Reshape Output
% Convert Maple format (2-dimensional tensor) to Matlab format (3-dimensional tensor)
% Fallunterscheidung der Initialisierung für symbolische Eingabe
if isa([qJ; pkin], 'double'), Tc_mdh = NaN(4,4,21+1);               % numerisch
else,                         Tc_mdh = sym('xx', [4,4,21+1]); end % symbolisch
for i = 1:21+1
  Tc_mdh(:,:,i) = [Tc_stack((i-1)*3+1 : 3*i, :);[0 0 0 1]];
end
