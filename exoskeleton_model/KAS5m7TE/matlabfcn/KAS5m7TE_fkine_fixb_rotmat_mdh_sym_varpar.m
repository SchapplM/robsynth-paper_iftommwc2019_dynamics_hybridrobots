% Calculate forward kinematics (homogenous transformation matrices) for fixed-base
% KAS5m7TE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% pkin [24x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[delta10,delta12,delta17,delta18,delta20,delta8,delta9,l1,l11,l12,l13,l14,l15,l17,l18,l2,l20,l21,l22,l23,l3,l4,l5,l6]';
% 
% Output:
% T_c_mdh [4x4x(21+1)]
%   homogenous transformation matrices for each (body) frame (MDH)
%   1:  mdh base (link 0) -> mdh base link 0 (unit matrix, no information)
%   ...
%   16:  mdh base (link 0) -> mdh frame (16-1), link (16-1)
%   ...
%   21+1:  mdh base (link 0) -> mdh frame (21)

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-12 08:05
% Revision: 2d0abd6fcc3afe6f578a07ad3d897ec57baa6ba1 (2020-04-13)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function T_c_mdh = KAS5m7TE_fkine_fixb_rotmat_mdh_sym_varpar(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(24,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'KAS5m7TE_fkine_fixb_rotmat_mdh_sym_varpar: qJ has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [24 1]), ...
  'KAS5m7TE_fkine_fixb_rotmat_mdh_sym_varpar: pkin has to be [24x1] (double)');

%% Symbolic Calculation
% From fkine_mdh_floatb_twist_rotmat_matlab.m
% OptimizationMode: 1
% StartTime: 2020-04-13 18:04:27
% EndTime: 2020-04-13 18:10:47
% DurationCPUTime: 374.70s
% Computational Cost: add. (25496244->401), mult. (32912323->373), div. (536368->7), fcn. (13195762->30), ass. (0->581)
unknown=NaN(88,4);
t1 = sin(qJ(1));
t2 = cos(qJ(1));
t3 = (pkin(8) + 0);
t4 = sin(qJ(2));
t5 = t1 * t4;
t6 = cos(qJ(2));
t7 = t1 * t6;
t8 = t2 * pkin(16);
t10 = t2 * t4;
t11 = t2 * t6;
t12 = t1 * pkin(16);
t14 = cos(qJ(3));
t15 = -pkin(23) + pkin(24);
t16 = t14 * t15;
t17 = pkin(3) + qJ(3);
t18 = cos(t17);
t19 = t18 * pkin(12);
t20 = -pkin(9) + t16 + t19;
t21 = pkin(11) ^ 2;
t22 = pkin(19) ^ 2;
t23 = t18 ^ 2;
t24 = pkin(12) ^ 2;
t26 = sin(t17);
t27 = t26 ^ 2;
t30 = (-pkin(9) + t16) ^ 2;
t31 = sin(qJ(3));
t32 = t31 ^ 2;
t33 = t15 ^ 2;
t37 = t31 * t15;
t38 = t26 * pkin(12);
t39 = -t37 + t38;
t42 = 0.2e1 * t20 * t18 * pkin(12) + 0.2e1 * t39 * t26 * pkin(12) - t23 * t24 - t27 * t24 + t32 * t33 + t21 - t22 + t30;
t46 = 0.4e1 * t20 ^ 2 + 0.4e1 * t39 ^ 2;
t48 = t42 ^ 2;
t50 = sqrt(t21 * t46 - t48);
t53 = 0.1e1 / t46;
t54 = (0.2e1 * t20 * t42 - 0.2e1 * t39 * t50) * t53;
t55 = pkin(9) - t16 - t19 + t54;
t60 = (0.2e1 * t20 * t50 + 0.2e1 * t42 * t39) * t53;
t61 = t37 - t38 + t60;
t63 = t14 * t55 - t31 * t61;
t64 = 0.1e1 / pkin(19);
t65 = t63 * t64;
t66 = cos(pkin(7));
t67 = t66 * pkin(18);
t68 = t65 * t67;
t71 = t14 * t61 + t31 * t55;
t72 = t71 * t64;
t73 = sin(pkin(7));
t74 = t73 * pkin(18);
t75 = t72 * t74;
t76 = -pkin(24) - t68 + t75;
t77 = pkin(17) ^ 2;
t78 = pkin(22) ^ 2;
t79 = t68 - t75;
t80 = t79 ^ 2;
t81 = t72 * t67;
t82 = t65 * t74;
t83 = t81 + t82;
t84 = t83 ^ 2;
t85 = pkin(24) ^ 2;
t88 = -0.2e1 * t76 * t79 + 0.2e1 * t83 ^ 2 + t77 - t78 - t80 - t84 + t85;
t92 = 0.4e1 * t76 ^ 2 + 0.4e1 * t83 ^ 2;
t94 = t88 ^ 2;
t96 = sqrt(t77 * t92 - t94);
t99 = 0.1e1 / t92;
t102 = 0.1e1 / pkin(22);
t103 = (-t68 + t75 - (0.2e1 * t76 * t88 + 0.2e1 * t83 * t96) * t99 - pkin(24)) * t102;
t104 = sin(pkin(6));
t111 = (-t81 - t82 - (0.2e1 * t76 * t96 - 0.2e1 * t88 * t83) * t99) * t102;
t112 = cos(pkin(6));
t114 = -t103 * t104 + t111 * t112;
t118 = t103 * t112 + t111 * t104;
t120 = -t5 * t114 + t2 * t118;
t123 = t2 * t114 + t5 * t118;
t124 = t7 * pkin(21);
t125 = t124 + t8 + 0;
t128 = t1 * t118 + t10 * t114;
t131 = t1 * t114 - t10 * t118;
t132 = t11 * pkin(21);
t133 = -t132 + t12 + 0;
t134 = t6 * t114;
t135 = -t6 * t118;
t136 = t4 * pkin(21);
t137 = -t136 + pkin(8) + 0;
t140 = t120 * t14 + t123 * t31;
t143 = -t120 * t31 + t123 * t14;
t144 = t120 * pkin(23);
t148 = t128 * t14 + t131 * t31;
t151 = -t128 * t31 + t131 * t14;
t152 = t128 * pkin(23);
t156 = -t134 * t14 - t135 * t31;
t159 = t134 * t31 - t135 * t14;
t160 = t134 * pkin(23);
t162 = cos(qJ(4));
t164 = sin(qJ(4));
t166 = t140 * t162 + t143 * t164;
t169 = -t140 * t164 + t143 * t162;
t170 = t140 * pkin(9);
t171 = t170 + t144 + t124 + t8 + 0;
t174 = t148 * t162 + t151 * t164;
t177 = -t148 * t164 + t151 * t162;
t178 = t148 * pkin(9);
t179 = t178 + t152 - t132 + t12 + 0;
t182 = t156 * t162 + t159 * t164;
t185 = -t156 * t164 + t159 * t162;
t186 = t156 * pkin(9);
t187 = t186 - t160 - t136 + pkin(8) + 0;
t188 = qJ(4) - qJ(3) + pkin(4);
t189 = sin(t188);
t191 = cos(t188);
t193 = -t166 * t189 + t169 * t191;
t196 = -t166 * t191 - t169 * t189;
t197 = t166 * pkin(10);
t201 = -t174 * t189 + t177 * t191;
t204 = -t174 * t191 - t177 * t189;
t205 = t174 * pkin(10);
t209 = -t182 * t189 + t185 * t191;
t212 = -t182 * t191 - t185 * t189;
t213 = t182 * pkin(10);
t215 = cos(qJ(5));
t217 = sin(qJ(5));
t243 = t5 * t104 + t2 * t112;
t246 = -t2 * t104 + t5 * t112;
t249 = t1 * t112 - t10 * t104;
t252 = -t1 * t104 - t10 * t112;
t253 = t6 * t104;
t254 = t6 * t112;
t257 = t118 * t104 + t114 * t112;
t259 = t257 * pkin(22) + t81 + t82;
t261 = 0.1e1 / pkin(17);
t265 = t114 * t104 - t118 * t112;
t267 = -t265 * pkin(22) + pkin(24) + t68 - t75;
t270 = t257 * t259 * t261 - t265 * t267 * t261;
t276 = -t257 * t267 * t261 - t259 * t261 * t265;
t278 = t243 * t270 + t246 * t276;
t281 = -t243 * t276 + t246 * t270;
t282 = t243 * pkin(22);
t286 = t249 * t270 + t252 * t276;
t289 = -t249 * t276 + t252 * t270;
t290 = t249 * pkin(22);
t294 = t253 * t270 + t254 * t276;
t297 = -t253 * t276 + t254 * t270;
t298 = t253 * pkin(22);
t304 = t120 * t63 * t64 + t123 * t71 * t64;
t309 = -t120 * t71 * t64 + t123 * t63 * t64;
t310 = t120 * pkin(24);
t316 = t128 * t63 * t64 + t131 * t71 * t64;
t321 = -t128 * t71 * t64 + t131 * t63 * t64;
t322 = t128 * pkin(24);
t326 = -t134 * t65 - t135 * t72;
t329 = t134 * t72 - t135 * t65;
t330 = t134 * pkin(24);
t336 = t14 * t63 * t64 + t31 * t71 * t64;
t338 = t336 * pkin(19) - pkin(9) + t16 + t19;
t340 = 0.1e1 / pkin(11);
t346 = -t14 * t71 * t64 + t31 * t63 * t64;
t348 = t346 * pkin(19) + t37 - t38;
t351 = -t336 * t338 * t340 - t346 * t348 * t340;
t357 = t336 * t348 * t340 - t338 * t340 * t346;
t359 = t304 * t351 + t309 * t357;
t362 = -t304 * t357 + t309 * t351;
t363 = t304 * pkin(19);
t367 = t316 * t351 + t321 * t357;
t370 = -t316 * t357 + t321 * t351;
t371 = t316 * pkin(19);
t375 = t326 * t351 + t329 * t357;
t378 = -t326 * t357 + t329 * t351;
t379 = t326 * pkin(19);
t383 = -t143 * t14 + t140 * t31;
t386 = t140 * t14 + t143 * t31;
t389 = -t151 * t14 + t148 * t31;
t392 = t148 * t14 + t151 * t31;
t395 = -t159 * t14 + t156 * t31;
t398 = t156 * t14 + t159 * t31;
t399 = sin(pkin(3));
t401 = cos(pkin(3));
t403 = t383 * t399 - t386 * t401;
t406 = t383 * t401 + t386 * t399;
t409 = t389 * t399 - t392 * t401;
t412 = t389 * t401 + t392 * t399;
t415 = t395 * t399 - t398 * t401;
t418 = t395 * t401 + t398 * t399;
t420 = pkin(3) + qJ(3) - qJ(4);
t421 = sin(t420);
t424 = t421 * pkin(12) - t191 * pkin(14) + t189 * pkin(15);
t427 = cos(t420);
t429 = -t427 * pkin(12) - t189 * pkin(14) - t191 * pkin(15) - pkin(10);
t430 = t429 ^ 2;
t431 = t424 ^ 2;
t433 = sqrt(t430 + t431);
t434 = 0.1e1 / t433;
t435 = t424 * t434;
t437 = t429 * t434;
t439 = t437 * t421 + t435 * t427;
t443 = -t435 * t421 + t437 * t427;
t445 = t403 * t439 + t406 * t443;
t448 = -t403 * t443 + t406 * t439;
t449 = t403 * pkin(12);
t450 = t449 + t170 + t144 + t124 + t8 + 0;
t453 = t409 * t439 + t412 * t443;
t456 = -t409 * t443 + t412 * t439;
t457 = t409 * pkin(12);
t458 = t457 + t178 + t152 - t132 + t12 + 0;
t461 = t415 * t439 + t418 * t443;
t464 = -t415 * t443 + t418 * t439;
t465 = t415 * pkin(12);
t466 = t465 + t186 - t160 - t136 + pkin(8) + 0;
t468 = -t448 * t433 + t124 + t144 + t170 + t449 + t8 + 0;
t470 = -t456 * t433 + t12 - t132 + t152 + t178 + t457 + 0;
t472 = -t464 * t433 + pkin(8) - t136 - t160 + t186 + t465 + 0;
t473 = t304 * t66;
t474 = t309 * t73;
t482 = t316 * t66;
t483 = t321 * t73;
t491 = t326 * t66;
t492 = t329 * t73;
t500 = t340 * t18;
t502 = t340 * t26;
t504 = t54 * t500 + t60 * t502;
t508 = t60 * t500 - t54 * t502;
t526 = cos(pkin(5));
t528 = sin(pkin(5));
t531 = t193 * t528;
t532 = t196 * t526;
t540 = t201 * t528;
t541 = t204 * t526;
t549 = t209 * t528;
t550 = t212 * t526;
unknown(1,1) = 1;
unknown(1,2) = 0;
unknown(1,3) = 0;
unknown(1,4) = 0;
unknown(2,1) = 0;
unknown(2,2) = 1;
unknown(2,3) = 0;
unknown(2,4) = 0;
unknown(3,1) = 0;
unknown(3,2) = 0;
unknown(3,3) = 1;
unknown(3,4) = 0;
unknown(4,1) = 0;
unknown(4,2) = 0;
unknown(4,3) = 0;
unknown(4,4) = 1;
unknown(5,1) = t1;
unknown(5,2) = t2;
unknown(5,3) = 0;
unknown(5,4) = 0;
unknown(6,1) = -t2;
unknown(6,2) = t1;
unknown(6,3) = 0;
unknown(6,4) = 0;
unknown(7,1) = 0;
unknown(7,2) = 0;
unknown(7,3) = 1;
unknown(7,4) = t3;
unknown(8,1) = 0;
unknown(8,2) = 0;
unknown(8,3) = 0;
unknown(8,4) = 1;
unknown(9,1) = -t5;
unknown(9,2) = -t7;
unknown(9,3) = t2;
unknown(9,4) = (t8 + 0);
unknown(10,1) = t10;
unknown(10,2) = t11;
unknown(10,3) = t1;
unknown(10,4) = (t12 + 0);
unknown(11,1) = -t6;
unknown(11,2) = t4;
unknown(11,3) = 0;
unknown(11,4) = t3;
unknown(12,1) = 0;
unknown(12,2) = 0;
unknown(12,3) = 0;
unknown(12,4) = 1;
unknown(13,1) = t120;
unknown(13,2) = t123;
unknown(13,3) = t7;
unknown(13,4) = t125;
unknown(14,1) = t128;
unknown(14,2) = t131;
unknown(14,3) = -t11;
unknown(14,4) = t133;
unknown(15,1) = -t134;
unknown(15,2) = -t135;
unknown(15,3) = -t4;
unknown(15,4) = t137;
unknown(16,1) = 0;
unknown(16,2) = 0;
unknown(16,3) = 0;
unknown(16,4) = 1;
unknown(17,1) = t140;
unknown(17,2) = t143;
unknown(17,3) = t7;
unknown(17,4) = (t144 + t124 + t8 + 0);
unknown(18,1) = t148;
unknown(18,2) = t151;
unknown(18,3) = -t11;
unknown(18,4) = (t152 - t132 + t12 + 0);
unknown(19,1) = t156;
unknown(19,2) = t159;
unknown(19,3) = -t4;
unknown(19,4) = (-t160 - t136 + pkin(8) + 0);
unknown(20,1) = 0;
unknown(20,2) = 0;
unknown(20,3) = 0;
unknown(20,4) = 1;
unknown(21,1) = t166;
unknown(21,2) = t169;
unknown(21,3) = t7;
unknown(21,4) = t171;
unknown(22,1) = t174;
unknown(22,2) = t177;
unknown(22,3) = -t11;
unknown(22,4) = t179;
unknown(23,1) = t182;
unknown(23,2) = t185;
unknown(23,3) = -t4;
unknown(23,4) = t187;
unknown(24,1) = 0;
unknown(24,2) = 0;
unknown(24,3) = 0;
unknown(24,4) = 1;
unknown(25,1) = t193;
unknown(25,2) = t196;
unknown(25,3) = t7;
unknown(25,4) = (t197 + t170 + t144 + t124 + t8 + 0);
unknown(26,1) = t201;
unknown(26,2) = t204;
unknown(26,3) = -t11;
unknown(26,4) = (t205 + t178 + t152 - t132 + t12 + 0);
unknown(27,1) = t209;
unknown(27,2) = t212;
unknown(27,3) = -t4;
unknown(27,4) = (t213 + t186 - t160 - t136 + pkin(8) + 0);
unknown(28,1) = 0;
unknown(28,2) = 0;
unknown(28,3) = 0;
unknown(28,4) = 1;
unknown(29,1) = (t193 * t215 + t7 * t217);
unknown(29,2) = (-t193 * t217 + t7 * t215);
unknown(29,3) = -t196;
unknown(29,4) = (-t196 * pkin(13) + t124 + t144 + t170 + t197 + t8 + 0);
unknown(30,1) = (-t11 * t217 + t201 * t215);
unknown(30,2) = (-t11 * t215 - t201 * t217);
unknown(30,3) = -t204;
unknown(30,4) = (-t204 * pkin(13) + t12 - t132 + t152 + t178 + t205 + 0);
unknown(31,1) = (t209 * t215 - t4 * t217);
unknown(31,2) = (-t209 * t217 - t4 * t215);
unknown(31,3) = -t212;
unknown(31,4) = (-t212 * pkin(13) + pkin(8) - t136 - t160 + t186 + t213 + 0);
unknown(32,1) = 0;
unknown(32,2) = 0;
unknown(32,3) = 0;
unknown(32,4) = 1;
unknown(33,1) = t243;
unknown(33,2) = t246;
unknown(33,3) = t7;
unknown(33,4) = t125;
unknown(34,1) = t249;
unknown(34,2) = t252;
unknown(34,3) = -t11;
unknown(34,4) = t133;
unknown(35,1) = t253;
unknown(35,2) = t254;
unknown(35,3) = -t4;
unknown(35,4) = t137;
unknown(36,1) = 0;
unknown(36,2) = 0;
unknown(36,3) = 0;
unknown(36,4) = 1;
unknown(37,1) = t278;
unknown(37,2) = t281;
unknown(37,3) = t7;
unknown(37,4) = (-t282 + t124 + t8 + 0);
unknown(38,1) = t286;
unknown(38,2) = t289;
unknown(38,3) = -t11;
unknown(38,4) = (-t290 - t132 + t12 + 0);
unknown(39,1) = t294;
unknown(39,2) = t297;
unknown(39,3) = -t4;
unknown(39,4) = (-t298 - t136 + pkin(8) + 0);
unknown(40,1) = 0;
unknown(40,2) = 0;
unknown(40,3) = 0;
unknown(40,4) = 1;
unknown(41,1) = t304;
unknown(41,2) = t309;
unknown(41,3) = t7;
unknown(41,4) = (t310 + t124 + t8 + 0);
unknown(42,1) = t316;
unknown(42,2) = t321;
unknown(42,3) = -t11;
unknown(42,4) = (t322 - t132 + t12 + 0);
unknown(43,1) = t326;
unknown(43,2) = t329;
unknown(43,3) = -t4;
unknown(43,4) = (-t330 - t136 + pkin(8) + 0);
unknown(44,1) = 0;
unknown(44,2) = 0;
unknown(44,3) = 0;
unknown(44,4) = 1;
unknown(45,1) = t359;
unknown(45,2) = t362;
unknown(45,3) = t7;
unknown(45,4) = (t363 + t310 + t124 + t8 + 0);
unknown(46,1) = t367;
unknown(46,2) = t370;
unknown(46,3) = -t11;
unknown(46,4) = (t371 + t322 - t132 + t12 + 0);
unknown(47,1) = t375;
unknown(47,2) = t378;
unknown(47,3) = -t4;
unknown(47,4) = (t379 - t330 - t136 + pkin(8) + 0);
unknown(48,1) = 0;
unknown(48,2) = 0;
unknown(48,3) = 0;
unknown(48,4) = 1;
unknown(49,1) = t383;
unknown(49,2) = t386;
unknown(49,3) = t7;
unknown(49,4) = t171;
unknown(50,1) = t389;
unknown(50,2) = t392;
unknown(50,3) = -t11;
unknown(50,4) = t179;
unknown(51,1) = t395;
unknown(51,2) = t398;
unknown(51,3) = -t4;
unknown(51,4) = t187;
unknown(52,1) = 0;
unknown(52,2) = 0;
unknown(52,3) = 0;
unknown(52,4) = 1;
unknown(53,1) = t403;
unknown(53,2) = t406;
unknown(53,3) = t7;
unknown(53,4) = t171;
unknown(54,1) = t409;
unknown(54,2) = t412;
unknown(54,3) = -t11;
unknown(54,4) = t179;
unknown(55,1) = t415;
unknown(55,2) = t418;
unknown(55,3) = -t4;
unknown(55,4) = t187;
unknown(56,1) = 0;
unknown(56,2) = 0;
unknown(56,3) = 0;
unknown(56,4) = 1;
unknown(57,1) = t445;
unknown(57,2) = t448;
unknown(57,3) = t7;
unknown(57,4) = t450;
unknown(58,1) = t453;
unknown(58,2) = t456;
unknown(58,3) = -t11;
unknown(58,4) = t458;
unknown(59,1) = t461;
unknown(59,2) = t464;
unknown(59,3) = -t4;
unknown(59,4) = t466;
unknown(60,1) = 0;
unknown(60,2) = 0;
unknown(60,3) = 0;
unknown(60,4) = 1;
unknown(61,1) = t445;
unknown(61,2) = t7;
unknown(61,3) = -t448;
unknown(61,4) = t468;
unknown(62,1) = t453;
unknown(62,2) = -t11;
unknown(62,3) = -t456;
unknown(62,4) = t470;
unknown(63,1) = t461;
unknown(63,2) = -t4;
unknown(63,3) = -t464;
unknown(63,4) = t472;
unknown(64,1) = 0;
unknown(64,2) = 0;
unknown(64,3) = 0;
unknown(64,4) = 1;
unknown(65,1) = (t473 + t474);
unknown(65,2) = (-t304 * t73 + t309 * t66);
unknown(65,3) = t7;
unknown(65,4) = (t473 * pkin(18) + t474 * pkin(18) + t124 + t310 + t8 + 0);
unknown(66,1) = (t482 + t483);
unknown(66,2) = (-t316 * t73 + t321 * t66);
unknown(66,3) = -t11;
unknown(66,4) = (t482 * pkin(18) + t483 * pkin(18) + t12 - t132 + t322 + 0);
unknown(67,1) = (t491 + t492);
unknown(67,2) = (-t326 * t73 + t329 * t66);
unknown(67,3) = -t4;
unknown(67,4) = (t491 * pkin(18) + t492 * pkin(18) + pkin(8) - t136 - t330 + 0);
unknown(68,1) = 0;
unknown(68,2) = 0;
unknown(68,3) = 0;
unknown(68,4) = 1;
unknown(69,1) = (t403 * t504 + t406 * t508);
unknown(69,2) = (-t403 * t508 + t406 * t504);
unknown(69,3) = t7;
unknown(69,4) = t450;
unknown(70,1) = (t409 * t504 + t412 * t508);
unknown(70,2) = (-t409 * t508 + t412 * t504);
unknown(70,3) = -t11;
unknown(70,4) = t458;
unknown(71,1) = (t415 * t504 + t418 * t508);
unknown(71,2) = (-t415 * t508 + t418 * t504);
unknown(71,3) = -t4;
unknown(71,4) = t466;
unknown(72,1) = 0;
unknown(72,2) = 0;
unknown(72,3) = 0;
unknown(72,4) = 1;
unknown(73,1) = (t193 * t526 - t196 * t528);
unknown(73,2) = (t531 + t532);
unknown(73,3) = t7;
unknown(73,4) = (-t531 * pkin(20) - t532 * pkin(20) + t124 + t144 + t170 + t197 + t8 + 0);
unknown(74,1) = (t201 * t526 - t204 * t528);
unknown(74,2) = (t540 + t541);
unknown(74,3) = -t11;
unknown(74,4) = (-t540 * pkin(20) - t541 * pkin(20) + t12 - t132 + t152 + t178 + t205 + 0);
unknown(75,1) = (t209 * t526 - t212 * t528);
unknown(75,2) = (t549 + t550);
unknown(75,3) = -t4;
unknown(75,4) = (-t549 * pkin(20) - t550 * pkin(20) + pkin(8) - t136 - t160 + t186 + t213 + 0);
unknown(76,1) = 0;
unknown(76,2) = 0;
unknown(76,3) = 0;
unknown(76,4) = 1;
unknown(77,1) = t278;
unknown(77,2) = t281;
unknown(77,3) = t7;
unknown(77,4) = (t278 * pkin(17) + t124 - t282 + t8 + 0);
unknown(78,1) = t286;
unknown(78,2) = t289;
unknown(78,3) = -t11;
unknown(78,4) = (t286 * pkin(17) + t12 - t132 - t290 + 0);
unknown(79,1) = t294;
unknown(79,2) = t297;
unknown(79,3) = -t4;
unknown(79,4) = (t294 * pkin(17) + pkin(8) - t136 - t298 + 0);
unknown(80,1) = 0;
unknown(80,2) = 0;
unknown(80,3) = 0;
unknown(80,4) = 1;
unknown(81,1) = t359;
unknown(81,2) = t362;
unknown(81,3) = t7;
unknown(81,4) = (t359 * pkin(11) + t124 + t310 + t363 + t8 + 0);
unknown(82,1) = t367;
unknown(82,2) = t370;
unknown(82,3) = -t11;
unknown(82,4) = (t367 * pkin(11) + t12 - t132 + t322 + t371 + 0);
unknown(83,1) = t375;
unknown(83,2) = t378;
unknown(83,3) = -t4;
unknown(83,4) = (t375 * pkin(11) + pkin(8) - t136 - t330 + t379 + 0);
unknown(84,1) = 0;
unknown(84,2) = 0;
unknown(84,3) = 0;
unknown(84,4) = 1;
unknown(85,1) = t445;
unknown(85,2) = t448;
unknown(85,3) = t7;
unknown(85,4) = t468;
unknown(86,1) = t453;
unknown(86,2) = t456;
unknown(86,3) = -t11;
unknown(86,4) = t470;
unknown(87,1) = t461;
unknown(87,2) = t464;
unknown(87,3) = -t4;
unknown(87,4) = t472;
unknown(88,1) = 0;
unknown(88,2) = 0;
unknown(88,3) = 0;
unknown(88,4) = 1;
T_ges = unknown;
%% Postprocessing: Reshape Output
% Convert Maple format (2-dimensional tensor) to Matlab format (3-dimensional tensor)
% Fallunterscheidung der Initialisierung für symbolische Eingabe
if isa([qJ; pkin], 'double'), T_c_mdh = NaN(4,4,21+1);               % numerisch
else,                         T_c_mdh = sym('xx', [4,4,21+1]); end % symbolisch
for i = 1:21+1
  T_c_mdh(:,:,i) = T_ges((i-1)*4+1 : 4*i, :);
end
