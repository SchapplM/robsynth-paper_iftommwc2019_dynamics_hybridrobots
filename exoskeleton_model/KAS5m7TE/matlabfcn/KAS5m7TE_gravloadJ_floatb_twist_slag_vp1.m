% Calculate Gravitation load on the joints for
% KAS5m7TE
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [24x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[delta10,delta12,delta17,delta18,delta20,delta8,delta9,l1,l11,l12,l13,l14,l15,l17,l18,l2,l20,l21,l22,l23,l3,l4,l5,l6]';
% m [16x1]
%   mass of all robot links (including the base)
% rSges [16x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (starting with base)
%   columns: x-, y-, z-coordinates
% 
% Output:
% taug [5x1]
%   joint torques required to compensate gravitation load

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-12 08:05
% Revision: 2d0abd6fcc3afe6f578a07ad3d897ec57baa6ba1 (2020-04-13)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taug = KAS5m7TE_gravloadJ_floatb_twist_slag_vp1(qJ, g, ...
  pkin, m, rSges)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(3,1),zeros(24,1),zeros(16,1),zeros(16,3)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'KAS5m7TE_gravloadJ_floatb_twist_slag_vp1: qJ has to be [5x1] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'KAS5m7TE_gravloadJ_floatb_twist_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [24 1]), ...
  'KAS5m7TE_gravloadJ_floatb_twist_slag_vp1: pkin has to be [24x1] (double)');
assert(isreal(m) && all(size(m) == [16 1]), ...
  'KAS5m7TE_gravloadJ_floatb_twist_slag_vp1: m has to be [16x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [16,3]), ...
  'KAS5m7TE_gravloadJ_floatb_twist_slag_vp1: rSges has to be [16x3] (double)');

%% Symbolic Calculation
% From gravload_joint_floatb_twist_par1_matlab.m
% OptimizationMode: 1
% StartTime: 2020-04-13 21:23:52
% EndTime: 2020-04-14 00:15:36
% DurationCPUTime: 2544.85s
% Computational Cost: add. (172150052->1103), mult. (224612156->1439), div. (2875262->13), fcn. (89870791->28), ass. (0->479)
unknown=NaN(5,1);
t1 = cos(qJ(1));
t3 = sin(qJ(1));
t13 = t3 * pkin(16);
t14 = sin(qJ(2));
t15 = t1 * t14;
t17 = cos(qJ(2));
t18 = t1 * t17;
t23 = t1 * pkin(16);
t24 = t3 * t14;
t26 = t3 * t17;
t33 = t18 * pkin(21);
t34 = cos(qJ(3));
t35 = -pkin(23) + pkin(24);
t36 = t34 * t35;
t37 = pkin(3) + qJ(3);
t38 = cos(t37);
t39 = t38 * pkin(12);
t40 = -pkin(9) + t36 + t39;
t41 = pkin(11) ^ 2;
t42 = pkin(19) ^ 2;
t43 = t38 ^ 2;
t44 = pkin(12) ^ 2;
t46 = sin(t37);
t47 = t46 ^ 2;
t49 = -pkin(9) + t36;
t50 = t49 ^ 2;
t51 = sin(qJ(3));
t52 = t51 ^ 2;
t53 = t35 ^ 2;
t57 = t51 * t35;
t58 = t46 * pkin(12);
t59 = -t57 + t58;
t62 = 0.2e1 * t40 * t38 * pkin(12) + 0.2e1 * t59 * t46 * pkin(12) - t43 * t44 - t47 * t44 + t52 * t53 + t41 - t42 + t50;
t66 = 0.4e1 * t40 ^ 2 + 0.4e1 * t59 ^ 2;
t68 = t62 ^ 2;
t70 = sqrt(t41 * t66 - t68);
t72 = 0.2e1 * t40 * t62 - 0.2e1 * t59 * t70;
t73 = 0.1e1 / t66;
t75 = t72 * t73 + pkin(9) - t36 - t39;
t76 = t34 * t75;
t79 = 0.2e1 * t40 * t70 + 0.2e1 * t62 * t59;
t81 = t79 * t73 + t57 - t58;
t82 = t51 * t81;
t83 = t76 - t82;
t84 = 0.1e1 / pkin(19);
t85 = t83 * t84;
t86 = cos(pkin(7));
t87 = t86 * pkin(18);
t88 = t85 * t87;
t89 = t51 * t75;
t90 = t34 * t81;
t91 = t89 + t90;
t92 = t91 * t84;
t93 = sin(pkin(7));
t94 = t93 * pkin(18);
t95 = t92 * t94;
t96 = -pkin(24) - t88 + t95;
t97 = pkin(17) ^ 2;
t98 = pkin(22) ^ 2;
t99 = t88 - t95;
t100 = t99 ^ 2;
t101 = t92 * t87;
t102 = t85 * t94;
t103 = t101 + t102;
t104 = t103 ^ 2;
t105 = pkin(24) ^ 2;
t108 = 0.2e1 * t103 ^ 2 - 0.2e1 * t96 * t99 - t100 - t104 + t105 + t97 - t98;
t112 = 0.4e1 * t103 ^ 2 + 0.4e1 * t96 ^ 2;
t114 = t108 ^ 2;
t116 = sqrt(t97 * t112 - t114);
t118 = 0.2e1 * t103 * t116 + 0.2e1 * t96 * t108;
t119 = 0.1e1 / t112;
t122 = 0.1e1 / pkin(22);
t123 = (-t118 * t119 - pkin(24) - t88 + t95) * t122;
t124 = sin(pkin(6));
t128 = -0.2e1 * t108 * t103 + 0.2e1 * t96 * t116;
t131 = (-t128 * t119 - t101 - t102) * t122;
t132 = cos(pkin(6));
t134 = -t123 * t124 + t131 * t132;
t138 = t123 * t132 + t131 * t124;
t140 = -t15 * t134 - t3 * t138;
t144 = -t3 * t134 + t15 * t138;
t149 = t26 * pkin(21);
t152 = t1 * t138 - t24 * t134;
t156 = t1 * t134 + t24 * t138;
t163 = t140 * pkin(23);
t166 = t140 * t34 + t144 * t51;
t170 = -t140 * t51 + t144 * t34;
t175 = t152 * pkin(23);
t176 = t152 * t34;
t177 = t156 * t51;
t178 = t176 + t177;
t180 = t152 * t51;
t181 = t156 * t34;
t182 = -t180 + t181;
t189 = t166 * pkin(9);
t190 = cos(qJ(4));
t192 = sin(qJ(4));
t194 = t166 * t190 + t170 * t192;
t198 = -t166 * t192 + t170 * t190;
t203 = t178 * pkin(9);
t206 = t178 * t190 + t182 * t192;
t210 = -t178 * t192 + t182 * t190;
t217 = t194 * pkin(10);
t218 = qJ(4) - qJ(3) + pkin(4);
t219 = sin(t218);
t221 = cos(t218);
t223 = -t194 * t219 + t198 * t221;
t227 = -t194 * t221 - t198 * t219;
t232 = t206 * pkin(10);
t233 = t206 * t219;
t234 = t210 * t221;
t235 = -t233 + t234;
t237 = t206 * t221;
t238 = t210 * t219;
t239 = -t237 - t238;
t247 = cos(qJ(5));
t249 = sin(qJ(5));
t250 = t18 * t249;
t254 = t18 * t247;
t263 = t235 * t247 + t26 * t249;
t267 = -t235 * t249 + t26 * t247;
t276 = t15 * t124 - t3 * t132;
t280 = t3 * t124 + t15 * t132;
t287 = t1 * t132 + t24 * t124;
t291 = -t1 * t124 + t24 * t132;
t301 = t138 * t124 + t134 * t132;
t303 = t301 * pkin(22) + t101 + t102;
t305 = 0.1e1 / pkin(17);
t309 = t134 * t124 - t138 * t132;
t311 = -t309 * pkin(22) + pkin(24) + t88 - t95;
t314 = t301 * t303 * t305 - t309 * t311 * t305;
t318 = t303 * t305;
t320 = -t301 * t311 * t305 - t318 * t309;
t345 = t140 * pkin(24);
t350 = t140 * t83 * t84 + t144 * t91 * t84;
t356 = -t140 * t91 * t84 + t144 * t83 * t84;
t361 = t152 * pkin(24);
t366 = t152 * t83 * t84 + t156 * t91 * t84;
t372 = -t152 * t91 * t84 + t156 * t83 * t84;
t381 = t34 * t83 * t84;
t383 = t51 * t91 * t84;
t384 = t381 + t383;
t386 = t384 * pkin(19) - pkin(9) + t36 + t39;
t388 = 0.1e1 / pkin(11);
t391 = t51 * t83 * t84;
t393 = t34 * t91 * t84;
t394 = t391 - t393;
t396 = t394 * pkin(19) + t57 - t58;
t399 = -t384 * t386 * t388 - t394 * t396 * t388;
t403 = t386 * t388;
t405 = t384 * t396 * t388 - t403 * t394;
t432 = t166 * t51 - t170 * t34;
t436 = t166 * t34 + t170 * t51;
t441 = t178 * t51;
t442 = t182 * t34;
t443 = t441 - t442;
t445 = t178 * t34;
t446 = t182 * t51;
t447 = t445 + t446;
t454 = sin(pkin(3));
t456 = cos(pkin(3));
t458 = t432 * t454 - t436 * t456;
t462 = t432 * t456 + t436 * t454;
t469 = t443 * t454 - t447 * t456;
t473 = t443 * t456 + t447 * t454;
t480 = t458 * pkin(12);
t481 = t219 * pkin(15);
t482 = pkin(3) + qJ(3) - qJ(4);
t483 = sin(t482);
t484 = t483 * pkin(12);
t485 = t221 * pkin(14);
t486 = t481 + t484 - t485;
t487 = t219 * pkin(14);
t488 = t221 * pkin(15);
t489 = cos(t482);
t490 = t489 * pkin(12);
t491 = -t487 - pkin(10) - t488 - t490;
t492 = t491 ^ 2;
t493 = t486 ^ 2;
t494 = t492 + t493;
t495 = sqrt(t494);
t496 = 0.1e1 / t495;
t497 = t486 * t496;
t498 = t497 * t489;
t499 = t491 * t496;
t500 = t499 * t483;
t501 = t498 + t500;
t503 = t499 * t489;
t504 = t497 * t483;
t505 = t503 - t504;
t507 = t458 * t501 + t462 * t505;
t511 = -t458 * t505 + t462 * t501;
t516 = t469 * pkin(12);
t519 = t469 * t501 + t473 * t505;
t523 = -t469 * t505 + t473 * t501;
t544 = -m(2) * (g(1) * (t1 * rSges(2,1) - t3 * rSges(2,2)) + g(2) * (t3 * rSges(2,1) + t1 * rSges(2,2))) - m(3) * (g(1) * (-t15 * rSges(3,1) - t18 * rSges(3,2) - t3 * rSges(3,3) - t13) + g(2) * (-t24 * rSges(3,1) - t26 * rSges(3,2) + t1 * rSges(3,3) + t23)) - m(4) * (g(1) * (t140 * rSges(4,1) + t144 * rSges(4,2) + t18 * rSges(4,3) - t13 + t33) + g(2) * (t152 * rSges(4,1) + t156 * rSges(4,2) + t26 * rSges(4,3) + t149 + t23)) - m(5) * (g(1) * (t166 * rSges(5,1) + t170 * rSges(5,2) + t18 * rSges(5,3) - t13 + t163 + t33) + g(2) * (t178 * rSges(5,1) + t182 * rSges(5,2) + t26 * rSges(5,3) + t149 + t175 + t23)) - m(6) * (g(1) * (t194 * rSges(6,1) + t198 * rSges(6,2) + t18 * rSges(6,3) - t13 + t163 + t189 + t33) + g(2) * (t206 * rSges(6,1) + t210 * rSges(6,2) + t26 * rSges(6,3) + t149 + t175 + t203 + t23)) - m(7) * (g(1) * (t223 * rSges(7,1) + t227 * rSges(7,2) + t18 * rSges(7,3) - t13 + t163 + t189 + t217 + t33) + g(2) * (t235 * rSges(7,1) + t239 * rSges(7,2) + t26 * rSges(7,3) + t149 + t175 + t203 + t23 + t232)) - m(8) * (g(1) * (-t227 * pkin(13) + t217 + t189 + t163 + t33 - t13 + (t223 * t247 + t250) * rSges(8,1) + (-t223 * t249 + t254) * rSges(8,2) - t227 * rSges(8,3)) + g(2) * (t263 * rSges(8,1) + t267 * rSges(8,2) - t239 * rSges(8,3) - t239 * pkin(13) + t149 + t175 + t203 + t23 + t232)) - m(9) * (g(1) * (t276 * rSges(9,1) + t280 * rSges(9,2) + t18 * rSges(9,3) - t13 + t33) + g(2) * (t287 * rSges(9,1) + t291 * rSges(9,2) + t26 * rSges(9,3) + t149 + t23)) - m(10) * (g(1) * (-t276 * pkin(22) + t33 - t13 + (t276 * t314 + t280 * t320) * rSges(10,1) + (-t276 * t320 + t280 * t314) * rSges(10,2) + t18 * rSges(10,3)) + g(2) * (t23 + t149 - t287 * pkin(22) + (t287 * t314 + t291 * t320) * rSges(10,1) + (-t287 * t320 + t291 * t314) * rSges(10,2) + t26 * rSges(10,3))) - m(11) * (g(1) * (t350 * rSges(11,1) + t356 * rSges(11,2) + t18 * rSges(11,3) - t13 + t33 + t345) + g(2) * (t366 * rSges(11,1) + t372 * rSges(11,2) + t26 * rSges(11,3) + t149 + t23 + t361)) - m(12) * (g(1) * (t350 * pkin(19) + t345 + t33 - t13 + (t350 * t399 + t356 * t405) * rSges(12,1) + (-t350 * t405 + t356 * t399) * rSges(12,2) + t18 * rSges(12,3)) + g(2) * (t23 + t149 + t361 + t366 * pkin(19) + (t366 * t399 + t372 * t405) * rSges(12,1) + (-t366 * t405 + t372 * t399) * rSges(12,2) + t26 * rSges(12,3))) - m(13) * (g(1) * (t432 * rSges(13,1) + t436 * rSges(13,2) + t18 * rSges(13,3) - t13 + t163 + t189 + t33) + g(2) * (t443 * rSges(13,1) + t447 * rSges(13,2) + t26 * rSges(13,3) + t149 + t175 + t203 + t23)) - m(14) * (g(1) * (t458 * rSges(14,1) + t462 * rSges(14,2) + t18 * rSges(14,3) - t13 + t163 + t189 + t33) + g(2) * (t469 * rSges(14,1) + t473 * rSges(14,2) + t26 * rSges(14,3) + t149 + t175 + t203 + t23)) - m(15) * (g(1) * (t507 * rSges(15,1) + t511 * rSges(15,2) + t18 * rSges(15,3) - t13 + t163 + t189 + t33 + t480) + g(2) * (t519 * rSges(15,1) + t523 * rSges(15,2) + t26 * rSges(15,3) + t149 + t175 + t203 + t23 + t516)) - m(16) * (g(1) * (t507 * rSges(16,1) + t18 * rSges(16,2) - t511 * rSges(16,3) - t511 * t495 - t13 + t163 + t189 + t33 + t480) + g(2) * (t519 * rSges(16,1) + t26 * rSges(16,2) - t523 * rSges(16,3) - t523 * t495 + t149 + t175 + t203 + t23 + t516));
t559 = t24 * pkin(21);
t560 = t134 * rSges(4,1);
t562 = -t138 * rSges(4,2);
t567 = t15 * pkin(21);
t573 = t17 * pkin(21);
t574 = t14 * t134;
t576 = -t14 * t138;
t583 = t134 * pkin(23);
t584 = t26 * t583;
t585 = t134 * t34;
t587 = -t138 * t51;
t589 = -t26 * t585 - t26 * t587;
t591 = t134 * t51;
t593 = -t138 * t34;
t595 = t26 * t591 - t26 * t593;
t600 = t18 * t583;
t603 = t18 * t585 + t18 * t587;
t607 = -t18 * t591 + t18 * t593;
t612 = t574 * pkin(23);
t615 = t574 * t34 + t576 * t51;
t619 = t576 * t34 - t574 * t51;
t626 = t589 * pkin(9);
t629 = t589 * t190 + t595 * t192;
t633 = t595 * t190 - t589 * t192;
t638 = t603 * pkin(9);
t641 = t603 * t190 + t607 * t192;
t645 = t607 * t190 - t603 * t192;
t650 = t615 * pkin(9);
t653 = t615 * t190 + t619 * t192;
t657 = t619 * t190 - t615 * t192;
t664 = t629 * pkin(10);
t667 = -t629 * t219 + t633 * t221;
t671 = -t633 * t219 - t629 * t221;
t676 = t641 * pkin(10);
t679 = -t641 * t219 + t645 * t221;
t683 = -t645 * t219 - t641 * t221;
t688 = t653 * pkin(10);
t691 = -t653 * t219 + t657 * t221;
t695 = -t657 * t219 - t653 * t221;
t740 = t124 * rSges(9,1);
t742 = t132 * rSges(9,2);
t752 = t14 * t124;
t754 = t14 * t132;
t761 = t124 * pkin(22);
t763 = t124 * t314;
t765 = t132 * t320;
t769 = -t124 * t320;
t771 = t132 * t314;
t804 = t134 * pkin(24);
t805 = t26 * t804;
t807 = t134 * t83 * t84;
t810 = -t138 * t91 * t84;
t812 = -t26 * t807 - t26 * t810;
t815 = t134 * t91 * t84;
t818 = -t138 * t83 * t84;
t820 = t26 * t815 - t26 * t818;
t825 = t18 * t804;
t828 = t18 * t807 + t18 * t810;
t832 = -t18 * t815 + t18 * t818;
t837 = t574 * pkin(24);
t840 = t574 * t85 + t576 * t92;
t844 = -t574 * t92 + t576 * t85;
t891 = -t595 * t34 + t589 * t51;
t895 = t589 * t34 + t595 * t51;
t902 = -t607 * t34 + t603 * t51;
t906 = t603 * t34 + t607 * t51;
t913 = -t619 * t34 + t615 * t51;
t917 = t615 * t34 + t619 * t51;
t926 = t891 * t454 - t895 * t456;
t930 = t895 * t454 + t891 * t456;
t937 = t902 * t454 - t906 * t456;
t941 = t906 * t454 + t902 * t456;
t948 = t913 * t454 - t917 * t456;
t952 = t917 * t454 + t913 * t456;
t959 = t926 * pkin(12);
t962 = t926 * t501 + t930 * t505;
t966 = t930 * t501 - t926 * t505;
t971 = t937 * pkin(12);
t974 = t937 * t501 + t941 * t505;
t978 = t941 * t501 - t937 * t505;
t983 = t948 * pkin(12);
t986 = t948 * t501 + t952 * t505;
t990 = t952 * t501 - t948 * t505;
t1017 = -m(3) * (g(1) * (-t26 * rSges(3,1) + t24 * rSges(3,2)) + g(2) * (t18 * rSges(3,1) - t15 * rSges(3,2)) + g(3) * (t14 * rSges(3,1) + t17 * rSges(3,2))) - m(4) * (g(1) * (-t24 * rSges(4,3) - t26 * t560 - t26 * t562 - t559) + g(2) * (t15 * rSges(4,3) + t18 * t560 + t18 * t562 + t567) + g(3) * (t574 * rSges(4,1) + t576 * rSges(4,2) - t17 * rSges(4,3) - t573)) - m(5) * (g(1) * (t589 * rSges(5,1) + t595 * rSges(5,2) - t24 * rSges(5,3) - t559 - t584) + g(2) * (t603 * rSges(5,1) + t607 * rSges(5,2) + t15 * rSges(5,3) + t567 + t600) + g(3) * (t615 * rSges(5,1) + t619 * rSges(5,2) - t17 * rSges(5,3) - t573 + t612)) - m(6) * (g(1) * (t629 * rSges(6,1) + t633 * rSges(6,2) - t24 * rSges(6,3) - t559 - t584 + t626) + g(2) * (t641 * rSges(6,1) + t645 * rSges(6,2) + t15 * rSges(6,3) + t567 + t600 + t638) + g(3) * (t653 * rSges(6,1) + t657 * rSges(6,2) - t17 * rSges(6,3) - t573 + t612 + t650)) - m(7) * (g(1) * (t667 * rSges(7,1) + t671 * rSges(7,2) - t24 * rSges(7,3) - t559 - t584 + t626 + t664) + g(2) * (t679 * rSges(7,1) + t683 * rSges(7,2) + t15 * rSges(7,3) + t567 + t600 + t638 + t676) + g(3) * (t691 * rSges(7,1) + t695 * rSges(7,2) - t17 * rSges(7,3) - t573 + t612 + t650 + t688)) - m(8) * (g(1) * (-t671 * pkin(13) + t664 + t626 - t584 - t559 + (-t24 * t249 + t667 * t247) * rSges(8,1) + (-t24 * t247 - t667 * t249) * rSges(8,2) - t671 * rSges(8,3)) + g(2) * (-t683 * pkin(13) + t676 + t638 + t600 + t567 + (t15 * t249 + t679 * t247) * rSges(8,1) + (t15 * t247 - t679 * t249) * rSges(8,2) - t683 * rSges(8,3)) + g(3) * (-t695 * pkin(13) + t688 + t650 + t612 - t573 + (-t17 * t249 + t691 * t247) * rSges(8,1) + (-t17 * t247 - t691 * t249) * rSges(8,2) - t695 * rSges(8,3))) - m(9) * (g(1) * (-t24 * rSges(9,3) + t26 * t740 + t26 * t742 - t559) + g(2) * (t15 * rSges(9,3) - t18 * t740 - t18 * t742 + t567) + g(3) * (-t752 * rSges(9,1) - t754 * rSges(9,2) - t17 * rSges(9,3) - t573)) - m(10) * (g(1) * (-t26 * t761 - t559 + (t26 * t763 + t26 * t765) * rSges(10,1) + (t26 * t769 + t26 * t771) * rSges(10,2) - t24 * rSges(10,3)) + g(2) * (t18 * t761 + t567 + (-t18 * t763 - t18 * t765) * rSges(10,1) + (-t18 * t769 - t18 * t771) * rSges(10,2) + t15 * rSges(10,3)) + g(3) * (t752 * pkin(22) - t573 + (-t752 * t314 - t754 * t320) * rSges(10,1) + (-t754 * t314 + t752 * t320) * rSges(10,2) - t17 * rSges(10,3))) - m(11) * (g(1) * (t812 * rSges(11,1) + t820 * rSges(11,2) - t24 * rSges(11,3) - t559 - t805) + g(2) * (t828 * rSges(11,1) + t832 * rSges(11,2) + t15 * rSges(11,3) + t567 + t825) + g(3) * (t840 * rSges(11,1) + t844 * rSges(11,2) - t17 * rSges(11,3) - t573 + t837)) - m(12) * (g(1) * (t812 * pkin(19) - t805 - t559 + (t812 * t399 + t820 * t405) * rSges(12,1) + (t820 * t399 - t812 * t405) * rSges(12,2) - t24 * rSges(12,3)) + g(2) * (t828 * pkin(19) + t825 + t567 + (t828 * t399 + t832 * t405) * rSges(12,1) + (t832 * t399 - t828 * t405) * rSges(12,2) + t15 * rSges(12,3)) + g(3) * (t840 * pkin(19) + t837 - t573 + (t840 * t399 + t844 * t405) * rSges(12,1) + (t844 * t399 - t840 * t405) * rSges(12,2) - t17 * rSges(12,3))) - m(13) * (g(1) * (t891 * rSges(13,1) + t895 * rSges(13,2) - t24 * rSges(13,3) - t559 - t584 + t626) + g(2) * (t902 * rSges(13,1) + t906 * rSges(13,2) + t15 * rSges(13,3) + t567 + t600 + t638) + g(3) * (t913 * rSges(13,1) + t917 * rSges(13,2) - t17 * rSges(13,3) - t573 + t612 + t650)) - m(14) * (g(1) * (t926 * rSges(14,1) + t930 * rSges(14,2) - t24 * rSges(14,3) - t559 - t584 + t626) + g(2) * (t937 * rSges(14,1) + t941 * rSges(14,2) + t15 * rSges(14,3) + t567 + t600 + t638) + g(3) * (t948 * rSges(14,1) + t952 * rSges(14,2) - t17 * rSges(14,3) - t573 + t612 + t650)) - m(15) * (g(1) * (t962 * rSges(15,1) + t966 * rSges(15,2) - t24 * rSges(15,3) - t559 - t584 + t626 + t959) + g(2) * (t974 * rSges(15,1) + t978 * rSges(15,2) + t15 * rSges(15,3) + t567 + t600 + t638 + t971) + g(3) * (t986 * rSges(15,1) + t990 * rSges(15,2) - t17 * rSges(15,3) - t573 + t612 + t650 + t983)) - m(16) * (g(1) * (t962 * rSges(16,1) - t24 * rSges(16,2) - t966 * rSges(16,3) - t966 * t495 - t559 - t584 + t626 + t959) + g(2) * (t974 * rSges(16,1) + t15 * rSges(16,2) - t978 * rSges(16,3) - t978 * t495 + t567 + t600 + t638 + t971) + g(3) * (t986 * rSges(16,1) - t17 * rSges(16,2) - t990 * rSges(16,3) - t990 * t495 - t573 + t612 + t650 + t983));
t1018 = -t57 - t58;
t1030 = -t36 + t39;
t1035 = 0.2e1 * t1018 * t38 * pkin(12) + 0.2e1 * t1030 * t46 * pkin(12) + 0.2e1 * t59 * t38 * pkin(12) - 0.2e1 * t40 * t46 * pkin(12) + 0.2e1 * t51 * t53 * t34 - 0.2e1 * t49 * t51 * t35;
t1038 = 0.1e1 / t70;
t1042 = 0.4e1 * t40 * t1018 + 0.4e1 * t59 * t1030;
t1046 = -0.2e1 * t62 * t1035 + 0.2e1 * t41 * t1042;
t1051 = t66 ^ 2;
t1052 = 0.1e1 / t1051;
t1055 = t57 + t58 + (-t59 * t1038 * t1046 + 0.2e1 * t1018 * t62 - 0.2e1 * t1030 * t70 + 0.2e1 * t40 * t1035) * t73 - 0.2e1 * t72 * t1052 * t1042;
t1067 = t36 - t39 + (t40 * t1038 * t1046 + 0.2e1 * t1018 * t70 + 0.2e1 * t62 * t1030 + 0.2e1 * t1035 * t59) * t73 - 0.2e1 * t79 * t1052 * t1042;
t1069 = t34 * t1055 - t51 * t1067 - t89 - t90;
t1070 = t1069 * t84;
t1071 = t1070 * t87;
t1074 = t51 * t1055 + t34 * t1067 + t76 - t82;
t1075 = t1074 * t84;
t1076 = t1075 * t94;
t1077 = -t1071 + t1076;
t1081 = t1075 * t87;
t1082 = t1070 * t94;
t1083 = t1081 + t1082;
t1089 = 0.2e1 * t103 * t1083 + 0.2e1 * t96 * t1077;
t1092 = 0.1e1 / t116;
t1096 = 0.4e1 * t103 * t1083 + 0.4e1 * t96 * t1077;
t1100 = -0.2e1 * t108 * t1089 + 0.2e1 * t97 * t1096;
t1105 = t112 ^ 2;
t1106 = 0.1e1 / t1105;
t1110 = (-t1071 + t1076 - (t103 * t1092 * t1100 + 0.2e1 * t1077 * t108 + 0.2e1 * t1083 * t116 + 0.2e1 * t96 * t1089) * t119 + 0.2e1 * t118 * t1106 * t1096) * t122;
t1123 = (-t1081 - t1082 - (t96 * t1092 * t1100 - 0.2e1 * t1089 * t103 + 0.2e1 * t1077 * t116 - 0.2e1 * t108 * t1083) * t119 + 0.2e1 * t128 * t1106 * t1096) * t122;
t1125 = -t1110 * t124 + t1123 * t132;
t1129 = t1110 * t132 + t1123 * t124;
t1131 = t1 * t1129 - t24 * t1125;
t1135 = t1 * t1125 + t24 * t1129;
t1141 = t15 * t1125 + t3 * t1129;
t1145 = t3 * t1125 - t15 * t1129;
t1149 = t17 * t1125;
t1151 = -t17 * t1129;
t1157 = t1131 * pkin(23);
t1160 = t1131 * t34 + t1135 * t51 - t180 + t181;
t1164 = -t1131 * t51 + t1135 * t34 - t176 - t177;
t1168 = t1141 * pkin(23);
t1170 = -t140 * t51;
t1172 = -t144 * t34;
t1173 = t1141 * t34 + t1145 * t51 - t1170 + t1172;
t1176 = -t140 * t34;
t1178 = -t144 * t51;
t1179 = -t1141 * t51 + t1145 * t34 - t1176 - t1178;
t1183 = t1149 * pkin(23);
t1185 = t17 * t134;
t1186 = t1185 * t51;
t1188 = -t17 * t138;
t1189 = t1188 * t34;
t1190 = -t1149 * t34 - t1151 * t51 + t1186 - t1189;
t1193 = t1185 * t34;
t1195 = t1188 * t51;
t1196 = t1149 * t51 - t1151 * t34 + t1193 + t1195;
t1202 = t1160 * pkin(9);
t1205 = t1160 * t190 + t1164 * t192;
t1209 = -t1160 * t192 + t1164 * t190;
t1213 = t1173 * pkin(9);
t1216 = t1173 * t190 + t1179 * t192;
t1220 = -t1173 * t192 + t1179 * t190;
t1224 = t1190 * pkin(9);
t1227 = t1190 * t190 + t1196 * t192;
t1231 = -t1190 * t192 + t1196 * t190;
t1237 = t1205 * pkin(10);
t1240 = -t1205 * t219 + t1209 * t221 + t237 + t238;
t1244 = -t1205 * t221 - t1209 * t219 - t233 + t234;
t1248 = t1216 * pkin(10);
t1250 = t1176 + t1178;
t1252 = -t1170 + t1172;
t1254 = t1250 * t190 + t1252 * t192;
t1255 = t1254 * t221;
t1259 = -t1250 * t192 + t1252 * t190;
t1260 = t1259 * t219;
t1261 = -t1216 * t219 + t1220 * t221 + t1255 + t1260;
t1264 = t1254 * t219;
t1266 = t1259 * t221;
t1267 = -t1216 * t221 - t1220 * t219 - t1264 + t1266;
t1271 = t1227 * pkin(10);
t1273 = -t1193 - t1195;
t1275 = t1186 - t1189;
t1277 = t1273 * t190 + t1275 * t192;
t1278 = t1277 * t221;
t1282 = -t1273 * t192 + t1275 * t190;
t1283 = t1282 * t219;
t1284 = -t1227 * t219 + t1231 * t221 + t1278 + t1283;
t1287 = t1277 * t219;
t1289 = t1282 * t221;
t1290 = -t1227 * t221 - t1231 * t219 - t1287 + t1289;
t1324 = t1125 * t132 + t1129 * t124;
t1328 = t1324 * pkin(22) + t1081 + t1082;
t1333 = t1125 * t124 - t1129 * t132;
t1337 = -t1333 * pkin(22) + t1071 - t1076;
t1340 = t1324 * t303 * t305 + t301 * t1328 * t305 - t1333 * t311 * t305 - t309 * t1337 * t305;
t1349 = -t1324 * t311 * t305 - t1328 * t305 * t309 - t301 * t1337 * t305 - t318 * t1333;
t1369 = t17 * t124;
t1371 = t17 * t132;
t1383 = t1131 * pkin(24);
t1392 = t152 * t1069 * t84 + t156 * t1074 * t84 + t1131 * t83 * t84 + t1135 * t91 * t84;
t1402 = t156 * t1069 * t84 - t152 * t1074 * t84 - t1131 * t91 * t84 + t1135 * t83 * t84;
t1406 = t1141 * pkin(24);
t1415 = -t140 * t1069 * t84 - t144 * t1074 * t84 + t1141 * t83 * t84 + t1145 * t91 * t84;
t1425 = -t144 * t1069 * t84 + t140 * t1074 * t84 - t1141 * t91 * t84 + t1145 * t83 * t84;
t1429 = t1149 * pkin(24);
t1434 = -t1185 * t1070 - t1188 * t1075 - t1149 * t85 - t1151 * t92;
t1440 = -t1188 * t1070 + t1185 * t1075 + t1149 * t92 - t1151 * t85;
t1452 = t34 * t1069 * t84 + t51 * t1074 * t84 - t391 + t393;
t1456 = t1452 * pkin(19) - t57 - t58;
t1463 = t51 * t1069 * t84 - t34 * t1074 * t84 + t381 + t383;
t1467 = t1463 * pkin(19) + t36 - t39;
t1470 = -t1452 * t386 * t388 - t384 * t1456 * t388 - t1463 * t396 * t388 - t394 * t1467 * t388;
t1480 = t1452 * t396 * t388 - t1456 * t388 * t394 + t384 * t1467 * t388 - t403 * t1463;
t1498 = -t140 * t83 * t84 - t144 * t91 * t84;
t1505 = t140 * t91 * t84 - t144 * t83 * t84;
t1521 = -t1185 * t85 - t1188 * t92;
t1526 = t1185 * t92 - t1188 * t85;
t1542 = t1160 * t51 - t1164 * t34 + t445 + t446;
t1546 = t1160 * t34 + t1164 * t51 - t441 + t442;
t1551 = t1250 * t34;
t1553 = t1252 * t51;
t1554 = t1173 * t51 - t1179 * t34 + t1551 + t1553;
t1557 = t1250 * t51;
t1559 = t1252 * t34;
t1560 = t1173 * t34 + t1179 * t51 - t1557 + t1559;
t1565 = t1273 * t34;
t1567 = t1275 * t51;
t1568 = t1190 * t51 - t1196 * t34 + t1565 + t1567;
t1571 = t1273 * t51;
t1573 = t1275 * t34;
t1574 = t1190 * t34 + t1196 * t51 - t1571 + t1573;
t1582 = t1542 * t454 - t1546 * t456;
t1586 = t1542 * t456 + t1546 * t454;
t1592 = t1554 * t454 - t1560 * t456;
t1596 = t1554 * t456 + t1560 * t454;
t1602 = t1568 * t454 - t1574 * t456;
t1606 = t1568 * t456 + t1574 * t454;
t1612 = t1582 * pkin(12);
t1614 = -t488 + t490 - t487;
t1615 = t1614 * t496;
t1618 = 0.1e1 / t495 / t494;
t1619 = t486 * t1618;
t1620 = t485 - t481 + t484;
t1623 = t486 * t1614 + t491 * t1620;
t1624 = 0.2e1 * t489 * t1623;
t1627 = t1620 * t496;
t1629 = t491 * t1618;
t1630 = 0.2e1 * t483 * t1623;
t1633 = t1615 * t489 - t1619 * t1624 / 0.2e1 - t504 + t1627 * t483 - t1629 * t1630 / 0.2e1 + t503;
t1642 = t1627 * t489 - t1629 * t1624 / 0.2e1 - t500 - t1615 * t483 + t1619 * t1630 / 0.2e1 - t498;
t1644 = t1582 * t501 + t1586 * t505 + t469 * t1633 + t473 * t1642;
t1650 = -t1582 * t505 + t1586 * t501 + t473 * t1633 - t469 * t1642;
t1654 = t1592 * pkin(12);
t1656 = t1557 - t1559;
t1658 = t1551 + t1553;
t1660 = t1656 * t454 - t1658 * t456;
t1665 = t1656 * t456 + t1658 * t454;
t1667 = t1592 * t501 + t1596 * t505 + t1660 * t1633 + t1665 * t1642;
t1673 = -t1592 * t505 + t1596 * t501 + t1665 * t1633 - t1660 * t1642;
t1677 = t1602 * pkin(12);
t1679 = t1571 - t1573;
t1681 = t1565 + t1567;
t1683 = t1679 * t454 - t1681 * t456;
t1688 = t1679 * t456 + t1681 * t454;
t1690 = t1602 * t501 + t1606 * t505 + t1683 * t1633 + t1688 * t1642;
t1696 = -t1602 * t505 + t1606 * t501 + t1688 * t1633 - t1683 * t1642;
t1703 = t523 * t496;
t1714 = (-t1660 * t505 + t1665 * t501) * t496;
t1725 = (-t1683 * t505 + t1688 * t501) * t496;
t1734 = -m(4) * (g(1) * (t1131 * rSges(4,1) + t1135 * rSges(4,2)) + g(2) * (t1141 * rSges(4,1) + t1145 * rSges(4,2)) + g(3) * (-t1149 * rSges(4,1) - t1151 * rSges(4,2))) - m(5) * (g(1) * (t1160 * rSges(5,1) + t1164 * rSges(5,2) + t1157) + g(2) * (t1173 * rSges(5,1) + t1179 * rSges(5,2) + t1168) + g(3) * (t1190 * rSges(5,1) + t1196 * rSges(5,2) - t1183)) - m(6) * (g(1) * (t1205 * rSges(6,1) + t1209 * rSges(6,2) + t1157 + t1202) + g(2) * (t1216 * rSges(6,1) + t1220 * rSges(6,2) + t1168 + t1213) + g(3) * (t1227 * rSges(6,1) + t1231 * rSges(6,2) - t1183 + t1224)) - m(7) * (g(1) * (t1240 * rSges(7,1) + t1244 * rSges(7,2) + t1157 + t1202 + t1237) + g(2) * (t1261 * rSges(7,1) + t1267 * rSges(7,2) + t1168 + t1213 + t1248) + g(3) * (t1284 * rSges(7,1) + t1290 * rSges(7,2) - t1183 + t1224 + t1271)) - m(8) * (g(1) * (t1240 * t247 * rSges(8,1) - t1240 * t249 * rSges(8,2) - t1244 * rSges(8,3) - t1244 * pkin(13) + t1157 + t1202 + t1237) + g(2) * (t1261 * t247 * rSges(8,1) - t1261 * t249 * rSges(8,2) - t1267 * rSges(8,3) - t1267 * pkin(13) + t1168 + t1213 + t1248) + g(3) * (t1284 * t247 * rSges(8,1) - t1284 * t249 * rSges(8,2) - t1290 * rSges(8,3) - t1290 * pkin(13) - t1183 + t1224 + t1271)) - m(10) * (g(1) * ((t287 * t1340 + t291 * t1349) * rSges(10,1) + (t291 * t1340 - t287 * t1349) * rSges(10,2)) + g(2) * ((-t276 * t1340 - t280 * t1349) * rSges(10,1) + (-t280 * t1340 + t276 * t1349) * rSges(10,2)) + g(3) * ((t1369 * t1340 + t1371 * t1349) * rSges(10,1) + (t1371 * t1340 - t1369 * t1349) * rSges(10,2))) - m(11) * (g(1) * (t1392 * rSges(11,1) + t1402 * rSges(11,2) + t1383) + g(2) * (t1415 * rSges(11,1) + t1425 * rSges(11,2) + t1406) + g(3) * (t1434 * rSges(11,1) + t1440 * rSges(11,2) - t1429)) - m(12) * (g(1) * (t1392 * pkin(19) + t1383 + (t1392 * t399 + t1402 * t405 + t366 * t1470 + t372 * t1480) * rSges(12,1) + (-t1392 * t405 + t1402 * t399 + t372 * t1470 - t366 * t1480) * rSges(12,2)) + g(2) * (t1415 * pkin(19) + t1406 + (t1415 * t399 + t1425 * t405 + t1498 * t1470 + t1505 * t1480) * rSges(12,1) + (-t1415 * t405 + t1425 * t399 + t1505 * t1470 - t1498 * t1480) * rSges(12,2)) + g(3) * (t1434 * pkin(19) - t1429 + (t1434 * t399 + t1440 * t405 + t1521 * t1470 + t1526 * t1480) * rSges(12,1) + (-t1434 * t405 + t1440 * t399 + t1526 * t1470 - t1521 * t1480) * rSges(12,2))) - m(13) * (g(1) * (t1542 * rSges(13,1) + t1546 * rSges(13,2) + t1157 + t1202) + g(2) * (t1554 * rSges(13,1) + t1560 * rSges(13,2) + t1168 + t1213) + g(3) * (t1568 * rSges(13,1) + t1574 * rSges(13,2) - t1183 + t1224)) - m(14) * (g(1) * (t1582 * rSges(14,1) + t1586 * rSges(14,2) + t1157 + t1202) + g(2) * (t1592 * rSges(14,1) + t1596 * rSges(14,2) + t1168 + t1213) + g(3) * (t1602 * rSges(14,1) + t1606 * rSges(14,2) - t1183 + t1224)) - m(15) * (g(1) * (t1644 * rSges(15,1) + t1650 * rSges(15,2) + t1157 + t1202 + t1612) + g(2) * (t1667 * rSges(15,1) + t1673 * rSges(15,2) + t1168 + t1213 + t1654) + g(3) * (t1690 * rSges(15,1) + t1696 * rSges(15,2) - t1183 + t1224 + t1677)) - m(16) * (g(1) * (t1644 * rSges(16,1) - t1650 * rSges(16,3) - t1703 * t1623 - t1650 * t495 + t1157 + t1202 + t1612) + g(2) * (t1667 * rSges(16,1) - t1673 * rSges(16,3) - t1714 * t1623 - t1673 * t495 + t1168 + t1213 + t1654) + g(3) * (t1690 * rSges(16,1) - t1696 * rSges(16,3) - t1725 * t1623 - t1696 * t495 - t1183 + t1224 + t1677));
t1749 = t210 * pkin(10);
t1752 = -t206 * t221 - t237 - 0.2e1 * t238;
t1756 = t206 * t219 + t233 - 0.2e1 * t234;
t1760 = t1259 * pkin(10);
t1763 = -t1254 * t221 - t1255 - 0.2e1 * t1260;
t1767 = t1254 * t219 + t1264 - 0.2e1 * t1266;
t1771 = t1282 * pkin(10);
t1774 = -t1277 * t221 - t1278 - 0.2e1 * t1283;
t1778 = t1277 * t219 + t1287 - 0.2e1 * t1289;
t1810 = -t1614 * t496;
t1814 = -t486 * t1614 - t491 * t1620;
t1815 = 0.2e1 * t489 * t1814;
t1818 = -t1620 * t496;
t1820 = 0.2e1 * t483 * t1814;
t1823 = t1810 * t489 - t1619 * t1815 / 0.2e1 + t504 + t1818 * t483 - t1629 * t1820 / 0.2e1 - t503;
t1831 = t1818 * t489 - t1629 * t1815 / 0.2e1 + t500 - t1810 * t483 + t1619 * t1820 / 0.2e1 + t498;
t1833 = t469 * t1823 + t473 * t1831;
t1837 = t473 * t1823 - t469 * t1831;
t1843 = t1660 * t1823 + t1665 * t1831;
t1847 = -t1660 * t1831 + t1665 * t1823;
t1853 = t1683 * t1823 + t1688 * t1831;
t1857 = -t1683 * t1831 + t1688 * t1823;
t1891 = -t1264 + t1266;
t1900 = -t1287 + t1289;
unknown(1) = t544;
unknown(2) = t1017;
unknown(3) = t1734;
unknown(4) = -m(6) * (g(1) * (t210 * rSges(6,1) - t206 * rSges(6,2)) + g(2) * (t1259 * rSges(6,1) - t1254 * rSges(6,2)) + g(3) * (t1282 * rSges(6,1) - t1277 * rSges(6,2))) - m(7) * (g(1) * (t1752 * rSges(7,1) + t1756 * rSges(7,2) + t1749) + g(2) * (t1763 * rSges(7,1) + t1767 * rSges(7,2) + t1760) + g(3) * (t1774 * rSges(7,1) + t1778 * rSges(7,2) + t1771)) - m(8) * (g(1) * (t1752 * t247 * rSges(8,1) - t1752 * t249 * rSges(8,2) - t1756 * rSges(8,3) - t1756 * pkin(13) + t1749) + g(2) * (t1763 * t247 * rSges(8,1) - t1763 * t249 * rSges(8,2) - t1767 * rSges(8,3) - t1767 * pkin(13) + t1760) + g(3) * (t1774 * t247 * rSges(8,1) - t1774 * t249 * rSges(8,2) - t1778 * rSges(8,3) - t1778 * pkin(13) + t1771)) - m(15) * (g(1) * (t1833 * rSges(15,1) + t1837 * rSges(15,2)) + g(2) * (t1843 * rSges(15,1) + t1847 * rSges(15,2)) + g(3) * (t1853 * rSges(15,1) + t1857 * rSges(15,2))) - m(16) * (g(1) * (t1833 * rSges(16,1) - t1837 * rSges(16,3) - t1703 * t1814 - t1837 * t495) + g(2) * (t1843 * rSges(16,1) - t1847 * rSges(16,3) - t1714 * t1814 - t1847 * t495) + g(3) * (t1853 * rSges(16,1) - t1857 * rSges(16,3) - t1725 * t1814 - t1857 * t495));
unknown(5) = -m(8) * (g(1) * (t267 * rSges(8,1) - t263 * rSges(8,2)) + g(2) * ((-t1891 * t249 - t254) * rSges(8,1) + (-t1891 * t247 + t250) * rSges(8,2)) + g(3) * ((-t14 * t247 - t1900 * t249) * rSges(8,1) + (t14 * t249 - t1900 * t247) * rSges(8,2)));
taug = unknown(:);
