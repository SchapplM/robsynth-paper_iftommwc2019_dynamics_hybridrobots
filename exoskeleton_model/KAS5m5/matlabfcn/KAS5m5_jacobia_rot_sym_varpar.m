% Rotatorische Teilmatrix der analytischen Jacobi-Matrix für beliebiges Segment von
% KAS5m5
% Use Code from Maple symbolic Code Generation
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorposition und verallgemeinerten Koordinaten.
% Zeitableitung der Winkeldarstellung des Endeffektors in Basis-Koordinaten
% 
% Winkeldarstellung: Euler-XYZ-Winkel, rotx(alpha)*roty(beta)*rotz(gamma)
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt.
%   Wie in KAS5m5_fkine_fixb_rotmat_mdh_sym_varpar.m (1=Basis).
% pkin [30x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a10,a11,a12,a4,a5,a6,a9,d1,d2,d3,d7,d8,delta8s,delta9s,l11,l12,l13,l14,l17,l18,l20,l21,l22,l4,l5,l6,delta10s,delta12s,delta17s,delta18s]';
% 
% Output:
% Ja_rot [3x5]
%   Rotatorische Teilmatrix der analytischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-27 19:16
% Revision: bc59515823ab4a8d0fec19bf3bf92c32c39a66b0 (2020-06-27)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Ja_rot = KAS5m5_jacobia_rot_sym_varpar(qJ, link_index, ...
  pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),uint8(0),zeros(30,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'KAS5m5_jacobia_rot_sym_varpar: qJ has to be [5x1] (double)');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'KAS5m5_jacobia_rot_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [30 1]), ...
  'KAS5m5_jacobia_rot_sym_varpar: pkin has to be [30x1] (double)');
Ja_rot=NaN(3,5);
if link_index == 0
	%% Symbolic Calculation
	% From jacobia_rot_0_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:24
	% EndTime: 2020-06-27 18:29:24
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->15)
	unknown=NaN(3,5);
	unknown(1,1) = 0;
	unknown(1,2) = 0;
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = 0;
	unknown(2,1) = 0;
	unknown(2,2) = 0;
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = 0;
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	Ja_rot = unknown;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobia_rot_1_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:24
	% EndTime: 2020-06-27 18:29:24
	% DurationCPUTime: 0.02s
	% Computational Cost: add. (3->2), mult. (6->3), div. (5->2), fcn. (6->2), ass. (0->21)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t2 = t1 ^ 2;
	t3 = sin(qJ(1));
	t4 = t3 ^ 2;
	t6 = t2 / t4;
	t8 = 0.1e1 / (0.1e1 + t6);
	unknown(1,1) = 0;
	unknown(1,2) = 0;
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = 0;
	unknown(2,1) = 0;
	unknown(2,2) = 0;
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = 0;
	unknown(3,1) = (t6 * t8 + t8);
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	Ja_rot = unknown;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobia_rot_2_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:24
	% EndTime: 2020-06-27 18:29:24
	% DurationCPUTime: 0.01s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->15)
	unknown=NaN(3,5);
	unknown(1,1) = NaN;
	unknown(1,2) = NaN;
	unknown(1,3) = NaN;
	unknown(1,4) = NaN;
	unknown(1,5) = NaN;
	unknown(2,1) = NaN;
	unknown(2,2) = NaN;
	unknown(2,3) = NaN;
	unknown(2,4) = NaN;
	unknown(2,5) = NaN;
	unknown(3,1) = NaN;
	unknown(3,2) = NaN;
	unknown(3,3) = NaN;
	unknown(3,4) = NaN;
	unknown(3,5) = NaN;
	Ja_rot = unknown;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobia_rot_3_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:31:16
	% EndTime: 2020-06-27 18:32:53
	% DurationCPUTime: 14.14s
	% Computational Cost: add. (896836->113), mult. (1165574->262), div. (16509->17), fcn. (466826->19), ass. (0->144)
	unknown=NaN(3,5);
	t1 = sin(qJ(1));
	t2 = cos(qJ(2));
	t3 = t1 * t2;
	t4 = sin(qJ(2));
	t5 = 0.1e1 / t4;
	t6 = cos(qJ(1));
	t7 = t6 ^ 2;
	t8 = t2 ^ 2;
	t10 = t4 ^ 2;
	t11 = 0.1e1 / t10;
	t14 = 0.1e1 / (t11 * t7 * t8 + 0.1e1);
	t21 = t11 * t14 * t6 * t8 + t14 * t6;
	t22 = t6 * t2;
	t23 = atan2(t22, -t4);
	t24 = cos(t23);
	t26 = sin(t23);
	t27 = t26 * t6;
	t29 = t2 * t27 - t24 * t4;
	t31 = t1 ^ 2;
	t33 = t29 ^ 2;
	t34 = 0.1e1 / t33;
	t37 = 0.1e1 / (t31 * t34 * t8 + 0.1e1);
	t38 = 0.1e1 / t29 * t37;
	t52 = t2 * t34 * t37;
	t55 = t1 * t4;
	t67 = t6 * t4;
	t68 = sin(qJ(3));
	t69 = cos(qJ(3));
	t70 = -pkin(25) + pkin(26);
	t71 = t69 * t70;
	t72 = pkin(29) + qJ(3);
	t73 = cos(t72);
	t74 = t73 * pkin(18);
	t75 = -pkin(15) + t71 + t74;
	t76 = pkin(17) ^ 2;
	t77 = pkin(23) ^ 2;
	t78 = t73 ^ 2;
	t79 = pkin(18) ^ 2;
	t81 = sin(t72);
	t82 = t81 ^ 2;
	t84 = -pkin(15) + t71;
	t85 = t84 ^ 2;
	t86 = t68 ^ 2;
	t87 = t70 ^ 2;
	t91 = t68 * t70;
	t92 = t81 * pkin(18);
	t93 = -t91 + t92;
	t96 = 0.2e1 * pkin(18) * t73 * t75 + 0.2e1 * pkin(18) * t81 * t93 - t78 * t79 - t79 * t82 + t86 * t87 + t76 - t77 + t85;
	t100 = 0.4e1 * t75 ^ 2 + 0.4e1 * t93 ^ 2;
	t102 = t96 ^ 2;
	t104 = sqrt(t100 * t76 - t102);
	t106 = -0.2e1 * t104 * t93 + 0.2e1 * t75 * t96;
	t107 = 0.1e1 / t100;
	t109 = t106 * t107 + pkin(15) - t71 - t74;
	t110 = t68 * t109;
	t113 = 0.2e1 * t104 * t75 + 0.2e1 * t93 * t96;
	t115 = t107 * t113 + t91 - t92;
	t116 = t69 * t115;
	t118 = 0.1e1 / pkin(23);
	t119 = (t110 + t116) * t118;
	t120 = cos(pkin(14));
	t121 = t120 * pkin(22);
	t122 = t119 * t121;
	t123 = t69 * t109;
	t124 = t68 * t115;
	t126 = (t123 - t124) * t118;
	t127 = sin(pkin(14));
	t128 = t127 * pkin(22);
	t129 = t126 * t128;
	t130 = pkin(21) ^ 2;
	t131 = pkin(24) ^ 2;
	t132 = t126 * t121;
	t133 = t119 * t128;
	t134 = t132 - t133;
	t135 = t134 ^ 2;
	t136 = t122 + t129;
	t137 = t136 ^ 2;
	t138 = pkin(26) ^ 2;
	t139 = -pkin(26) - t132 + t133;
	t142 = -0.2e1 * t134 * t139 + 0.2e1 * t136 ^ 2 + t130 - t131 - t135 - t137 + t138;
	t146 = 0.4e1 * t136 ^ 2 + 0.4e1 * t139 ^ 2;
	t148 = t142 ^ 2;
	t150 = sqrt(t130 * t146 - t148);
	t152 = -0.2e1 * t136 * t142 + 0.2e1 * t139 * t150;
	t153 = 0.1e1 / t146;
	t156 = 0.1e1 / pkin(24);
	t157 = (-t152 * t153 - t122 - t129) * t156;
	t158 = sin(pkin(13));
	t162 = 0.2e1 * t136 * t150 + 0.2e1 * t139 * t142;
	t165 = (-t153 * t162 - pkin(26) - t132 + t133) * t156;
	t166 = cos(pkin(13));
	t168 = -t157 * t158 - t165 * t166;
	t172 = t157 * t166 - t158 * t165;
	t177 = -t168 * t6 - t172 * t55;
	t178 = 0.1e1 / t177;
	t182 = t168 * t55 - t172 * t6;
	t183 = t182 ^ 2;
	t184 = t177 ^ 2;
	t185 = 0.1e1 / t184;
	t188 = 0.1e1 / (t183 * t185 + 0.1e1);
	t194 = t185 * t188;
	t205 = -t91 - t92;
	t217 = -t71 + t74;
	t222 = 0.2e1 * pkin(18) * t205 * t73 + 0.2e1 * pkin(18) * t217 * t81 + 0.2e1 * pkin(18) * t73 * t93 - 0.2e1 * pkin(18) * t75 * t81 + 0.2e1 * t68 * t69 * t87 - 0.2e1 * t68 * t70 * t84;
	t225 = 0.1e1 / t104;
	t229 = 0.4e1 * t205 * t75 + 0.4e1 * t217 * t93;
	t233 = -0.2e1 * t222 * t96 + 0.2e1 * t229 * t76;
	t238 = t100 ^ 2;
	t239 = 0.1e1 / t238;
	t242 = t91 + t92 + (-t225 * t233 * t93 - 0.2e1 * t217 * t104 + 0.2e1 * t205 * t96 + 0.2e1 * t222 * t75) * t107 - 0.2e1 * t106 * t239 * t229;
	t254 = t71 - t74 + (t225 * t233 * t75 + 0.2e1 * t104 * t205 + 0.2e1 * t96 * t217 + 0.2e1 * t222 * t93) * t107 - 0.2e1 * t113 * t239 * t229;
	t257 = (t242 * t68 + t254 * t69 + t123 - t124) * t118;
	t258 = t257 * t121;
	t262 = (t242 * t69 - t254 * t68 - t110 - t116) * t118;
	t263 = t262 * t128;
	t264 = t262 * t121;
	t265 = t257 * t128;
	t266 = t264 - t265;
	t269 = t258 + t263;
	t275 = 0.2e1 * t136 * t269 - 0.2e1 * t139 * t266;
	t279 = 0.1e1 / t150;
	t283 = 0.4e1 * t136 * t269 - 0.4e1 * t139 * t266;
	t287 = 0.2e1 * t130 * t283 - 0.2e1 * t142 * t275;
	t292 = t146 ^ 2;
	t293 = 0.1e1 / t292;
	t297 = (-t258 - t263 - (t139 * t279 * t287 - 0.2e1 * t136 * t275 - 0.2e1 * t142 * t269 - 0.2e1 * t150 * t266) * t153 + 0.2e1 * t152 * t293 * t283) * t156;
	t310 = (-t264 + t265 - (t136 * t279 * t287 + 0.2e1 * t139 * t275 - 0.2e1 * t266 * t142 + 0.2e1 * t269 * t150) * t153 + 0.2e1 * t162 * t293 * t283) * t156;
	t312 = -t158 * t297 - t166 * t310;
	t316 = -t158 * t310 + t166 * t297;
	unknown(1,1) = t3 * t5 * t14;
	unknown(1,2) = t21;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = t22 * t38 - (t1 * t14 * t24 * t5 * t6 * t8 - t1 * t2 * t26 + t14 * t26 * t3) * t1 * t52;
	unknown(2,2) = -t55 * t38 - (t21 * t22 * t24 + t21 * t26 * t4 - t2 * t24 - t27 * t4) * t1 * t52;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = (t1 * t172 + t168 * t67) * t178 * t188 - (t1 * t168 - t172 * t67) * t182 * t194;
	unknown(3,2) = t172 * t182 * t185 * t188 * t3 + t168 * t178 * t188 * t3;
	unknown(3,3) = (t312 * t55 - t316 * t6) * t178 * t188 - (-t6 * t312 - t55 * t316) * t182 * t194;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_rot = unknown;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobia_rot_4_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:34:12
	% EndTime: 2020-06-27 18:37:12
	% DurationCPUTime: 29.47s
	% Computational Cost: add. (1881868->125), mult. (2444955->279), div. (34821->17), fcn. (979159->19), ass. (0->154)
	unknown=NaN(3,5);
	t1 = sin(qJ(1));
	t2 = cos(qJ(2));
	t3 = t1 * t2;
	t4 = sin(qJ(2));
	t5 = 0.1e1 / t4;
	t6 = cos(qJ(1));
	t7 = t6 ^ 2;
	t8 = t2 ^ 2;
	t10 = t4 ^ 2;
	t11 = 0.1e1 / t10;
	t14 = 0.1e1 / (t11 * t7 * t8 + 0.1e1);
	t21 = t11 * t14 * t6 * t8 + t14 * t6;
	t22 = t6 * t2;
	t23 = atan2(t22, -t4);
	t24 = cos(t23);
	t26 = sin(t23);
	t27 = t26 * t6;
	t29 = t2 * t27 - t24 * t4;
	t31 = t1 ^ 2;
	t33 = t29 ^ 2;
	t34 = 0.1e1 / t33;
	t37 = 0.1e1 / (t31 * t34 * t8 + 0.1e1);
	t38 = 0.1e1 / t29 * t37;
	t52 = t2 * t34 * t37;
	t55 = t1 * t4;
	t67 = t6 * t4;
	t68 = cos(qJ(3));
	t69 = -pkin(25) + pkin(26);
	t70 = t68 * t69;
	t71 = pkin(29) + qJ(3);
	t72 = cos(t71);
	t73 = t72 * pkin(18);
	t74 = -pkin(15) + t70 + t73;
	t75 = pkin(17) ^ 2;
	t76 = pkin(23) ^ 2;
	t77 = t72 ^ 2;
	t78 = pkin(18) ^ 2;
	t80 = sin(t71);
	t81 = t80 ^ 2;
	t83 = -pkin(15) + t70;
	t84 = t83 ^ 2;
	t85 = sin(qJ(3));
	t86 = t85 ^ 2;
	t87 = t69 ^ 2;
	t91 = t85 * t69;
	t92 = t80 * pkin(18);
	t93 = -t91 + t92;
	t96 = 0.2e1 * pkin(18) * t72 * t74 + 0.2e1 * pkin(18) * t80 * t93 - t77 * t78 - t78 * t81 + t86 * t87 + t75 - t76 + t84;
	t100 = 0.4e1 * t74 ^ 2 + 0.4e1 * t93 ^ 2;
	t102 = t96 ^ 2;
	t104 = sqrt(t100 * t75 - t102);
	t106 = -0.2e1 * t104 * t93 + 0.2e1 * t74 * t96;
	t107 = 0.1e1 / t100;
	t109 = t106 * t107 + pkin(15) - t70 - t73;
	t110 = t68 * t109;
	t113 = 0.2e1 * t104 * t74 + 0.2e1 * t93 * t96;
	t115 = t107 * t113 + t91 - t92;
	t116 = t85 * t115;
	t118 = 0.1e1 / pkin(23);
	t119 = (t110 - t116) * t118;
	t120 = cos(pkin(14));
	t121 = t120 * pkin(22);
	t122 = t119 * t121;
	t123 = t85 * t109;
	t124 = t68 * t115;
	t126 = (t123 + t124) * t118;
	t127 = sin(pkin(14));
	t128 = t127 * pkin(22);
	t129 = t126 * t128;
	t130 = -pkin(26) - t122 + t129;
	t131 = pkin(21) ^ 2;
	t132 = pkin(24) ^ 2;
	t133 = t122 - t129;
	t134 = t133 ^ 2;
	t135 = t126 * t121;
	t136 = t119 * t128;
	t137 = t135 + t136;
	t138 = t137 ^ 2;
	t139 = pkin(26) ^ 2;
	t142 = -0.2e1 * t130 * t133 + 0.2e1 * t137 ^ 2 + t131 - t132 - t134 - t138 + t139;
	t146 = 0.4e1 * t130 ^ 2 + 0.4e1 * t137 ^ 2;
	t148 = t142 ^ 2;
	t150 = sqrt(t131 * t146 - t148);
	t152 = 0.2e1 * t130 * t142 + 0.2e1 * t137 * t150;
	t153 = 0.1e1 / t146;
	t156 = 0.1e1 / pkin(24);
	t157 = (-t152 * t153 - pkin(26) - t122 + t129) * t156;
	t158 = sin(pkin(13));
	t162 = 0.2e1 * t130 * t150 - 0.2e1 * t137 * t142;
	t165 = (-t153 * t162 - t135 - t136) * t156;
	t166 = cos(pkin(13));
	t168 = -t157 * t158 + t165 * t166;
	t172 = t157 * t166 + t158 * t165;
	t174 = -t1 * t172 - t168 * t67;
	t178 = -t1 * t168 + t172 * t67;
	t183 = -t168 * t55 + t172 * t6;
	t184 = t183 * t68;
	t187 = t168 * t6 + t172 * t55;
	t188 = t187 * t85;
	t189 = t184 + t188;
	t190 = 0.1e1 / t189;
	t192 = t183 * t85;
	t193 = t187 * t68;
	t194 = t192 - t193;
	t195 = t194 ^ 2;
	t196 = t189 ^ 2;
	t197 = 0.1e1 / t196;
	t200 = 0.1e1 / (t195 * t197 + 0.1e1);
	t206 = t197 * t200;
	t224 = -t91 - t92;
	t236 = -t70 + t73;
	t241 = 0.2e1 * pkin(18) * t224 * t72 + 0.2e1 * pkin(18) * t236 * t80 + 0.2e1 * pkin(18) * t72 * t93 - 0.2e1 * pkin(18) * t74 * t80 + 0.2e1 * t68 * t85 * t87 - 0.2e1 * t69 * t83 * t85;
	t244 = 0.1e1 / t104;
	t248 = 0.4e1 * t224 * t74 + 0.4e1 * t236 * t93;
	t252 = -0.2e1 * t241 * t96 + 0.2e1 * t248 * t75;
	t257 = t100 ^ 2;
	t258 = 0.1e1 / t257;
	t261 = t91 + t92 + (-t244 * t252 * t93 - 0.2e1 * t104 * t236 + 0.2e1 * t224 * t96 + 0.2e1 * t241 * t74) * t107 - 0.2e1 * t106 * t258 * t248;
	t273 = t70 - t73 + (t244 * t252 * t74 + 0.2e1 * t104 * t224 + 0.2e1 * t236 * t96 + 0.2e1 * t241 * t93) * t107 - 0.2e1 * t113 * t258 * t248;
	t276 = (t261 * t68 - t273 * t85 - t123 - t124) * t118;
	t277 = t276 * t121;
	t281 = (t261 * t85 + t273 * t68 + t110 - t116) * t118;
	t282 = t281 * t128;
	t283 = -t277 + t282;
	t287 = t281 * t121;
	t288 = t276 * t128;
	t289 = t287 + t288;
	t295 = 0.2e1 * t130 * t283 + 0.2e1 * t137 * t289;
	t298 = 0.1e1 / t150;
	t302 = 0.4e1 * t130 * t283 + 0.4e1 * t137 * t289;
	t306 = 0.2e1 * t131 * t302 - 0.2e1 * t142 * t295;
	t311 = t146 ^ 2;
	t312 = 0.1e1 / t311;
	t316 = (-t277 + t282 - (t137 * t298 * t306 + 0.2e1 * t130 * t295 + 0.2e1 * t142 * t283 + 0.2e1 * t150 * t289) * t153 + 0.2e1 * t152 * t312 * t302) * t156;
	t329 = (-t287 - t288 - (t130 * t298 * t306 - 0.2e1 * t137 * t295 - 0.2e1 * t142 * t289 + 0.2e1 * t150 * t283) * t153 + 0.2e1 * t162 * t312 * t302) * t156;
	t331 = -t158 * t316 + t166 * t329;
	t335 = t158 * t329 + t166 * t316;
	t337 = -t331 * t55 + t335 * t6;
	t341 = t331 * t6 + t335 * t55;
	unknown(1,1) = t3 * t5 * t14;
	unknown(1,2) = t21;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = t22 * t38 - (t1 * t14 * t24 * t5 * t6 * t8 - t1 * t2 * t26 + t14 * t26 * t3) * t1 * t52;
	unknown(2,2) = -t55 * t38 - (t21 * t22 * t24 + t21 * t26 * t4 - t2 * t24 - t27 * t4) * t1 * t52;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = (t174 * t85 - t178 * t68) * t190 * t200 - (t174 * t68 + t178 * t85) * t194 * t206;
	unknown(3,2) = (-t168 * t3 * t85 - t172 * t3 * t68) * t190 * t200 - (-t168 * t3 * t68 + t172 * t3 * t85) * t194 * t206;
	unknown(3,3) = (t337 * t85 - t341 * t68 + t184 + t188) * t190 * t200 - (t337 * t68 + t341 * t85 - t192 + t193) * t194 * t206;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_rot = unknown;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobia_rot_5_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:39:52
	% EndTime: 2020-06-27 18:45:24
	% DurationCPUTime: 69.04s
	% Computational Cost: add. (4381320->134), mult. (5687161->297), div. (82586->17), fcn. (2277823->21), ass. (0->164)
	unknown=NaN(3,5);
	t1 = sin(qJ(1));
	t2 = cos(qJ(2));
	t3 = t1 * t2;
	t4 = sin(qJ(2));
	t5 = 0.1e1 / t4;
	t6 = cos(qJ(1));
	t7 = t6 ^ 2;
	t8 = t2 ^ 2;
	t10 = t4 ^ 2;
	t11 = 0.1e1 / t10;
	t14 = 0.1e1 / (t7 * t8 * t11 + 0.1e1);
	t21 = t8 * t6 * t11 * t14 + t6 * t14;
	t22 = t6 * t2;
	t23 = atan2(t22, -t4);
	t24 = cos(t23);
	t26 = sin(t23);
	t27 = t26 * t6;
	t29 = t27 * t2 - t24 * t4;
	t31 = t1 ^ 2;
	t33 = t29 ^ 2;
	t34 = 0.1e1 / t33;
	t37 = 0.1e1 / (t31 * t8 * t34 + 0.1e1);
	t38 = 0.1e1 / t29 * t37;
	t52 = t2 * t34 * t37;
	t55 = t1 * t4;
	t67 = t6 * t4;
	t68 = cos(qJ(3));
	t69 = -pkin(25) + pkin(26);
	t70 = t68 * t69;
	t71 = pkin(29) + qJ(3);
	t72 = cos(t71);
	t73 = t72 * pkin(18);
	t74 = -pkin(15) + t70 + t73;
	t75 = pkin(17) ^ 2;
	t76 = pkin(23) ^ 2;
	t77 = t72 ^ 2;
	t78 = pkin(18) ^ 2;
	t80 = sin(t71);
	t81 = t80 ^ 2;
	t83 = -pkin(15) + t70;
	t84 = t83 ^ 2;
	t85 = sin(qJ(3));
	t86 = t85 ^ 2;
	t87 = t69 ^ 2;
	t91 = t85 * t69;
	t92 = t80 * pkin(18);
	t93 = -t91 + t92;
	t96 = 0.2e1 * t74 * t72 * pkin(18) + 0.2e1 * t93 * t80 * pkin(18) - t77 * t78 - t81 * t78 + t86 * t87 + t75 - t76 + t84;
	t100 = 0.4e1 * t74 ^ 2 + 0.4e1 * t93 ^ 2;
	t102 = t96 ^ 2;
	t104 = sqrt(t75 * t100 - t102);
	t106 = -0.2e1 * t93 * t104 + 0.2e1 * t74 * t96;
	t107 = 0.1e1 / t100;
	t109 = t106 * t107 + pkin(15) - t70 - t73;
	t110 = t68 * t109;
	t113 = 0.2e1 * t74 * t104 + 0.2e1 * t96 * t93;
	t115 = t113 * t107 + t91 - t92;
	t116 = t85 * t115;
	t118 = 0.1e1 / pkin(23);
	t119 = (t110 - t116) * t118;
	t120 = cos(pkin(14));
	t121 = t120 * pkin(22);
	t122 = t119 * t121;
	t123 = t85 * t109;
	t124 = t68 * t115;
	t126 = (t123 + t124) * t118;
	t127 = sin(pkin(14));
	t128 = t127 * pkin(22);
	t129 = t126 * t128;
	t130 = -pkin(26) - t122 + t129;
	t131 = pkin(21) ^ 2;
	t132 = pkin(24) ^ 2;
	t133 = t122 - t129;
	t134 = t133 ^ 2;
	t135 = t126 * t121;
	t136 = t119 * t128;
	t137 = t135 + t136;
	t138 = t137 ^ 2;
	t139 = pkin(26) ^ 2;
	t142 = -0.2e1 * t130 * t133 + 0.2e1 * t137 ^ 2 + t131 - t132 - t134 - t138 + t139;
	t146 = 0.4e1 * t130 ^ 2 + 0.4e1 * t137 ^ 2;
	t148 = t142 ^ 2;
	t150 = sqrt(t131 * t146 - t148);
	t152 = 0.2e1 * t130 * t142 + 0.2e1 * t137 * t150;
	t153 = 0.1e1 / t146;
	t156 = 0.1e1 / pkin(24);
	t157 = (-t152 * t153 - pkin(26) - t122 + t129) * t156;
	t158 = sin(pkin(13));
	t162 = 0.2e1 * t130 * t150 - 0.2e1 * t142 * t137;
	t165 = (-t162 * t153 - t135 - t136) * t156;
	t166 = cos(pkin(13));
	t168 = -t157 * t158 + t165 * t166;
	t172 = t157 * t166 + t165 * t158;
	t174 = -t1 * t172 - t67 * t168;
	t178 = -t1 * t168 + t67 * t172;
	t180 = t174 * t68 + t178 * t85;
	t181 = sin(qJ(4));
	t185 = -t174 * t85 + t178 * t68;
	t186 = cos(qJ(4));
	t191 = -t55 * t168 + t6 * t172;
	t192 = t191 * t68;
	t195 = t6 * t168 + t55 * t172;
	t196 = t195 * t85;
	t197 = t192 + t196;
	t199 = t191 * t85;
	t200 = t195 * t68;
	t201 = -t199 + t200;
	t203 = t201 * t181 + t197 * t186;
	t204 = 0.1e1 / t203;
	t208 = t197 * t181 - t201 * t186;
	t209 = t208 ^ 2;
	t210 = t203 ^ 2;
	t211 = 0.1e1 / t210;
	t214 = 0.1e1 / (t209 * t211 + 0.1e1);
	t220 = t211 * t214;
	t227 = -t3 * t168 * t68 + t3 * t172 * t85;
	t233 = t3 * t168 * t85 + t3 * t172 * t68;
	t244 = -t91 - t92;
	t256 = -t70 + t73;
	t261 = 0.2e1 * t244 * t72 * pkin(18) + 0.2e1 * t256 * t80 * pkin(18) + 0.2e1 * t93 * t72 * pkin(18) - 0.2e1 * t74 * t80 * pkin(18) + 0.2e1 * t85 * t87 * t68 - 0.2e1 * t83 * t85 * t69;
	t264 = 0.1e1 / t104;
	t268 = 0.4e1 * t74 * t244 + 0.4e1 * t93 * t256;
	t272 = -0.2e1 * t96 * t261 + 0.2e1 * t75 * t268;
	t277 = t100 ^ 2;
	t278 = 0.1e1 / t277;
	t281 = t91 + t92 + (-t93 * t264 * t272 - 0.2e1 * t256 * t104 + 0.2e1 * t244 * t96 + 0.2e1 * t74 * t261) * t107 - 0.2e1 * t106 * t278 * t268;
	t293 = t70 - t73 + (t74 * t264 * t272 + 0.2e1 * t244 * t104 + 0.2e1 * t96 * t256 + 0.2e1 * t261 * t93) * t107 - 0.2e1 * t113 * t278 * t268;
	t296 = (t68 * t281 - t85 * t293 - t123 - t124) * t118;
	t297 = t296 * t121;
	t301 = (t85 * t281 + t68 * t293 + t110 - t116) * t118;
	t302 = t301 * t128;
	t303 = -t297 + t302;
	t307 = t301 * t121;
	t308 = t296 * t128;
	t309 = t307 + t308;
	t315 = 0.2e1 * t130 * t303 + 0.2e1 * t137 * t309;
	t318 = 0.1e1 / t150;
	t322 = 0.4e1 * t130 * t303 + 0.4e1 * t137 * t309;
	t326 = 0.2e1 * t131 * t322 - 0.2e1 * t142 * t315;
	t331 = t146 ^ 2;
	t332 = 0.1e1 / t331;
	t336 = (-t297 + t302 - (t137 * t318 * t326 + 0.2e1 * t130 * t315 + 0.2e1 * t303 * t142 + 0.2e1 * t309 * t150) * t153 + 0.2e1 * t152 * t332 * t322) * t156;
	t349 = (-t307 - t308 - (t130 * t318 * t326 - 0.2e1 * t315 * t137 - 0.2e1 * t142 * t309 + 0.2e1 * t303 * t150) * t153 + 0.2e1 * t162 * t332 * t322) * t156;
	t351 = -t336 * t158 + t349 * t166;
	t355 = t349 * t158 + t336 * t166;
	t357 = -t55 * t351 + t6 * t355;
	t361 = t6 * t351 + t55 * t355;
	t363 = t357 * t68 + t361 * t85 - t199 + t200;
	t367 = -t357 * t85 + t361 * t68 - t192 - t196;
	unknown(1,1) = t3 * t5 * t14;
	unknown(1,2) = t21;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = t22 * t38 - (t1 * t8 * t5 * t14 * t24 * t6 - t26 * t1 * t2 + t3 * t14 * t26) * t1 * t52;
	unknown(2,2) = -t55 * t38 - (t21 * t24 * t22 + t21 * t26 * t4 - t24 * t2 - t27 * t4) * t1 * t52;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = (t180 * t181 - t185 * t186) * t204 * t214 - (t180 * t186 + t185 * t181) * t208 * t220;
	unknown(3,2) = (t227 * t181 - t233 * t186) * t204 * t214 - (t233 * t181 + t227 * t186) * t208 * t220;
	unknown(3,3) = (t363 * t181 - t367 * t186) * t204 * t214 - (t367 * t181 + t363 * t186) * t208 * t220;
	unknown(3,4) = t208 ^ 2 * t220 + t214;
	unknown(3,5) = 0.0e0;
	Ja_rot = unknown;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobia_rot_6_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:49:24
	% EndTime: 2020-06-27 18:57:21
	% DurationCPUTime: 151.43s
	% Computational Cost: add. (9645082->152), mult. (12513305->319), div. (183675->17), fcn. (5012173->23), ass. (0->179)
	unknown=NaN(3,5);
	t1 = sin(qJ(1));
	t2 = cos(qJ(2));
	t3 = t1 * t2;
	t4 = sin(qJ(2));
	t5 = 0.1e1 / t4;
	t6 = cos(qJ(1));
	t7 = t6 ^ 2;
	t8 = t2 ^ 2;
	t10 = t4 ^ 2;
	t11 = 0.1e1 / t10;
	t14 = 0.1e1 / (t7 * t8 * t11 + 0.1e1);
	t21 = t8 * t6 * t11 * t14 + t6 * t14;
	t22 = t6 * t2;
	t23 = atan2(t22, -t4);
	t24 = cos(t23);
	t26 = sin(t23);
	t27 = t26 * t6;
	t29 = t27 * t2 - t24 * t4;
	t31 = t1 ^ 2;
	t33 = t29 ^ 2;
	t34 = 0.1e1 / t33;
	t37 = 0.1e1 / (t31 * t8 * t34 + 0.1e1);
	t38 = 0.1e1 / t29 * t37;
	t52 = t2 * t34 * t37;
	t55 = t1 * t4;
	t67 = t6 * t4;
	t68 = cos(qJ(3));
	t69 = -pkin(25) + pkin(26);
	t70 = t68 * t69;
	t71 = pkin(29) + qJ(3);
	t72 = cos(t71);
	t73 = t72 * pkin(18);
	t74 = -pkin(15) + t70 + t73;
	t75 = pkin(17) ^ 2;
	t76 = pkin(23) ^ 2;
	t77 = t72 ^ 2;
	t78 = pkin(18) ^ 2;
	t80 = sin(t71);
	t81 = t80 ^ 2;
	t83 = -pkin(15) + t70;
	t84 = t83 ^ 2;
	t85 = sin(qJ(3));
	t86 = t85 ^ 2;
	t87 = t69 ^ 2;
	t91 = t85 * t69;
	t92 = t80 * pkin(18);
	t93 = -t91 + t92;
	t96 = 0.2e1 * t74 * t72 * pkin(18) + 0.2e1 * t93 * t80 * pkin(18) - t77 * t78 - t81 * t78 + t86 * t87 + t75 - t76 + t84;
	t100 = 0.4e1 * t74 ^ 2 + 0.4e1 * t93 ^ 2;
	t102 = t96 ^ 2;
	t104 = sqrt(t75 * t100 - t102);
	t106 = -0.2e1 * t93 * t104 + 0.2e1 * t74 * t96;
	t107 = 0.1e1 / t100;
	t109 = t106 * t107 + pkin(15) - t70 - t73;
	t110 = t68 * t109;
	t113 = 0.2e1 * t74 * t104 + 0.2e1 * t96 * t93;
	t115 = t113 * t107 + t91 - t92;
	t116 = t85 * t115;
	t118 = 0.1e1 / pkin(23);
	t119 = (t110 - t116) * t118;
	t120 = cos(pkin(14));
	t121 = t120 * pkin(22);
	t122 = t119 * t121;
	t123 = t85 * t109;
	t124 = t68 * t115;
	t126 = (t123 + t124) * t118;
	t127 = sin(pkin(14));
	t128 = t127 * pkin(22);
	t129 = t126 * t128;
	t130 = -pkin(26) - t122 + t129;
	t131 = pkin(21) ^ 2;
	t132 = pkin(24) ^ 2;
	t133 = t122 - t129;
	t134 = t133 ^ 2;
	t135 = t126 * t121;
	t136 = t119 * t128;
	t137 = t135 + t136;
	t138 = t137 ^ 2;
	t139 = pkin(26) ^ 2;
	t142 = -0.2e1 * t130 * t133 + 0.2e1 * t137 ^ 2 + t131 - t132 - t134 - t138 + t139;
	t146 = 0.4e1 * t130 ^ 2 + 0.4e1 * t137 ^ 2;
	t148 = t142 ^ 2;
	t150 = sqrt(t131 * t146 - t148);
	t152 = 0.2e1 * t130 * t142 + 0.2e1 * t137 * t150;
	t153 = 0.1e1 / t146;
	t156 = 0.1e1 / pkin(24);
	t157 = (-t152 * t153 - pkin(26) - t122 + t129) * t156;
	t158 = sin(pkin(13));
	t162 = 0.2e1 * t130 * t150 - 0.2e1 * t142 * t137;
	t165 = (-t162 * t153 - t135 - t136) * t156;
	t166 = cos(pkin(13));
	t168 = -t157 * t158 + t165 * t166;
	t172 = t157 * t166 + t165 * t158;
	t174 = -t1 * t172 - t67 * t168;
	t178 = -t1 * t168 + t67 * t172;
	t180 = t174 * t68 + t178 * t85;
	t181 = cos(qJ(4));
	t185 = -t174 * t85 + t178 * t68;
	t186 = sin(qJ(4));
	t188 = t180 * t181 + t185 * t186;
	t189 = -qJ(4) + qJ(3) - pkin(30);
	t190 = cos(t189);
	t194 = -t180 * t186 + t185 * t181;
	t195 = sin(t189);
	t200 = -t55 * t168 + t6 * t172;
	t201 = t200 * t68;
	t204 = t6 * t168 + t55 * t172;
	t205 = t204 * t85;
	t206 = t201 + t205;
	t208 = t200 * t85;
	t209 = t204 * t68;
	t210 = -t208 + t209;
	t212 = t206 * t181 + t210 * t186;
	t213 = t212 * t195;
	t216 = t210 * t181 - t206 * t186;
	t217 = t216 * t190;
	t218 = t213 + t217;
	t219 = 0.1e1 / t218;
	t221 = t212 * t190;
	t222 = t216 * t195;
	t223 = t221 - t222;
	t224 = t223 ^ 2;
	t225 = t218 ^ 2;
	t226 = 0.1e1 / t225;
	t229 = 0.1e1 / (t224 * t226 + 0.1e1);
	t235 = t226 * t229;
	t242 = -t3 * t168 * t68 + t3 * t172 * t85;
	t248 = t3 * t168 * t85 + t3 * t172 * t68;
	t250 = t242 * t181 + t248 * t186;
	t254 = t248 * t181 - t242 * t186;
	t265 = -t91 - t92;
	t277 = -t70 + t73;
	t282 = 0.2e1 * t265 * t72 * pkin(18) + 0.2e1 * t277 * t80 * pkin(18) + 0.2e1 * t93 * t72 * pkin(18) - 0.2e1 * t74 * t80 * pkin(18) + 0.2e1 * t85 * t87 * t68 - 0.2e1 * t83 * t85 * t69;
	t285 = 0.1e1 / t104;
	t289 = 0.4e1 * t74 * t265 + 0.4e1 * t93 * t277;
	t293 = -0.2e1 * t96 * t282 + 0.2e1 * t75 * t289;
	t298 = t100 ^ 2;
	t299 = 0.1e1 / t298;
	t302 = t91 + t92 + (-t93 * t285 * t293 - 0.2e1 * t277 * t104 + 0.2e1 * t265 * t96 + 0.2e1 * t74 * t282) * t107 - 0.2e1 * t106 * t299 * t289;
	t314 = t70 - t73 + (t74 * t285 * t293 + 0.2e1 * t265 * t104 + 0.2e1 * t96 * t277 + 0.2e1 * t282 * t93) * t107 - 0.2e1 * t113 * t299 * t289;
	t317 = (t68 * t302 - t85 * t314 - t123 - t124) * t118;
	t318 = t317 * t121;
	t322 = (t85 * t302 + t68 * t314 + t110 - t116) * t118;
	t323 = t322 * t128;
	t324 = -t318 + t323;
	t328 = t322 * t121;
	t329 = t317 * t128;
	t330 = t328 + t329;
	t336 = 0.2e1 * t130 * t324 + 0.2e1 * t137 * t330;
	t339 = 0.1e1 / t150;
	t343 = 0.4e1 * t130 * t324 + 0.4e1 * t137 * t330;
	t347 = 0.2e1 * t131 * t343 - 0.2e1 * t142 * t336;
	t352 = t146 ^ 2;
	t353 = 0.1e1 / t352;
	t357 = (-t318 + t323 - (t137 * t339 * t347 + 0.2e1 * t130 * t336 + 0.2e1 * t324 * t142 + 0.2e1 * t330 * t150) * t153 + 0.2e1 * t152 * t353 * t343) * t156;
	t370 = (-t328 - t329 - (t130 * t339 * t347 - 0.2e1 * t336 * t137 - 0.2e1 * t142 * t330 + 0.2e1 * t324 * t150) * t153 + 0.2e1 * t162 * t353 * t343) * t156;
	t372 = -t357 * t158 + t370 * t166;
	t376 = t370 * t158 + t357 * t166;
	t378 = -t55 * t372 + t6 * t376;
	t382 = t6 * t372 + t55 * t376;
	t384 = t378 * t68 + t382 * t85 - t208 + t209;
	t388 = -t378 * t85 + t382 * t68 - t201 - t205;
	t390 = t384 * t181 + t388 * t186;
	t394 = t388 * t181 - t384 * t186;
	unknown(1,1) = t3 * t5 * t14;
	unknown(1,2) = t21;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = t22 * t38 - (t1 * t8 * t5 * t14 * t24 * t6 - t26 * t1 * t2 + t3 * t14 * t26) * t1 * t52;
	unknown(2,2) = -t55 * t38 - (t21 * t24 * t22 + t21 * t26 * t4 - t24 * t2 - t27 * t4) * t1 * t52;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = (t188 * t190 - t194 * t195) * t219 * t229 - (t188 * t195 + t194 * t190) * t223 * t235;
	unknown(3,2) = (t250 * t190 - t254 * t195) * t219 * t229 - (t254 * t190 + t250 * t195) * t223 * t235;
	unknown(3,3) = (t390 * t190 - t394 * t195 - t213 - t217) * t219 * t229 - (t394 * t190 + t390 * t195 + t221 - t222) * t223 * t235;
	unknown(3,4) = (t212 * t195 + t213 + 0.2e1 * t217) * t219 * t229 - (-t212 * t190 - t221 + 0.2e1 * t222) * t223 * t235;
	unknown(3,5) = 0.0e0;
	Ja_rot = unknown;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobia_rot_7_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:58:20
	% EndTime: 2020-06-27 19:15:27
	% DurationCPUTime: 858.20s
	% Computational Cost: add. (55843806->221), mult. (72370697->437), div. (1088083->17), fcn. (28993483->25), ass. (0->239)
	unknown=NaN(3,5);
	t1 = sin(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t45 = t42 * t43 + pkin(15) - t6 - t9;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t51 = t49 * t43 + t27 - t28;
	t52 = t21 * t51;
	t54 = 0.1e1 / pkin(23);
	t55 = (t46 - t52) * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t62 = (t59 + t60) * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = cos(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 + t106 * t109;
	t112 = t111 * t4;
	t115 = t106 * t104 + t3 * t109;
	t116 = t115 * t21;
	t117 = t112 + t116;
	t118 = cos(qJ(4));
	t120 = t111 * t21;
	t121 = t115 * t4;
	t122 = -t120 + t121;
	t123 = sin(qJ(4));
	t125 = t117 * t118 + t122 * t123;
	t126 = -qJ(4) + qJ(3) - pkin(30);
	t127 = cos(t126);
	t128 = t125 * t127;
	t131 = -t117 * t123 + t122 * t118;
	t132 = sin(t126);
	t133 = t131 * t132;
	t134 = -t128 + t133;
	t135 = cos(qJ(2));
	t136 = t135 * t104;
	t137 = t136 * t4;
	t138 = -t135 * t109;
	t139 = t138 * t21;
	t140 = -t137 - t139;
	t142 = t136 * t21;
	t143 = t138 * t4;
	t144 = t142 - t143;
	t146 = t140 * t118 + t144 * t123;
	t150 = t144 * t118 - t140 * t123;
	t152 = t146 * t127 - t150 * t132;
	t153 = 0.1e1 / t152;
	t154 = t134 * t153;
	t155 = t106 * t2;
	t158 = t1 * t109 + t155 * t104;
	t159 = t158 * t4;
	t162 = t1 * t104 - t155 * t109;
	t163 = t162 * t21;
	t164 = t159 + t163;
	t166 = t158 * t21;
	t167 = t162 * t4;
	t168 = -t166 + t167;
	t170 = t164 * t118 + t168 * t123;
	t174 = t168 * t118 - t164 * t123;
	t176 = -t170 * t127 + t174 * t132;
	t177 = t176 ^ 2;
	t178 = t152 ^ 2;
	t179 = 0.1e1 / t178;
	t182 = 0.1e1 / (t177 * t179 + 0.1e1);
	t184 = t106 * t135;
	t185 = t104 * t4;
	t187 = -t109 * t21;
	t189 = t184 * t185 + t184 * t187;
	t191 = t104 * t21;
	t193 = -t109 * t4;
	t195 = -t184 * t191 + t184 * t193;
	t203 = -(t189 * t118 + t195 * t123) * t127 + (t195 * t118 - t189 * t123) * t132;
	t206 = t2 * t104;
	t208 = -t2 * t109;
	t210 = t206 * t4 + t208 * t21;
	t214 = -t206 * t21 + t208 * t4;
	t222 = (t210 * t118 + t214 * t123) * t127 - (t214 * t118 - t210 * t123) * t132;
	t224 = t179 * t182;
	t226 = t203 * t153 * t182 - t222 * t176 * t224;
	t227 = -t27 - t28;
	t239 = -t6 + t9;
	t244 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t239 * t16 * pkin(18) + 0.2e1 * t227 * t8 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t247 = 0.1e1 / t40;
	t251 = 0.4e1 * t10 * t227 + 0.4e1 * t29 * t239;
	t255 = 0.2e1 * t11 * t251 - 0.2e1 * t32 * t244;
	t260 = t36 ^ 2;
	t261 = 0.1e1 / t260;
	t264 = t27 + t28 + (-t29 * t247 * t255 + 0.2e1 * t10 * t244 + 0.2e1 * t227 * t32 - 0.2e1 * t239 * t40) * t43 - 0.2e1 * t42 * t261 * t251;
	t276 = t6 - t9 + (t10 * t247 * t255 + 0.2e1 * t227 * t40 + 0.2e1 * t32 * t239 + 0.2e1 * t244 * t29) * t43 - 0.2e1 * t49 * t261 * t251;
	t279 = (-t21 * t276 + t4 * t264 - t59 - t60) * t54;
	t280 = t279 * t57;
	t284 = (t21 * t264 + t4 * t276 + t46 - t52) * t54;
	t285 = t284 * t64;
	t286 = -t280 + t285;
	t290 = t284 * t57;
	t291 = t279 * t64;
	t292 = t290 + t291;
	t298 = 0.2e1 * t66 * t286 + 0.2e1 * t73 * t292;
	t301 = 0.1e1 / t86;
	t305 = 0.4e1 * t66 * t286 + 0.4e1 * t73 * t292;
	t309 = -0.2e1 * t78 * t298 + 0.2e1 * t67 * t305;
	t314 = t82 ^ 2;
	t315 = 0.1e1 / t314;
	t319 = (-t280 + t285 - (t73 * t301 * t309 + 0.2e1 * t286 * t78 + 0.2e1 * t292 * t86 + 0.2e1 * t66 * t298) * t89 + 0.2e1 * t88 * t315 * t305) * t92;
	t332 = (-t290 - t291 - (t66 * t301 * t309 + 0.2e1 * t286 * t86 - 0.2e1 * t78 * t292 - 0.2e1 * t298 * t73) * t89 + 0.2e1 * t98 * t315 * t305) * t92;
	t334 = t332 * t102 - t319 * t94;
	t338 = t319 * t102 + t332 * t94;
	t340 = t1 * t338 + t155 * t334;
	t344 = t1 * t334 - t155 * t338;
	t346 = t344 * t21 + t340 * t4 - t166 + t167;
	t350 = -t340 * t21 + t344 * t4 - t159 - t163;
	t354 = t170 * t132;
	t359 = t174 * t127;
	t360 = -(t346 * t118 + t350 * t123) * t127 + t354 + (t350 * t118 - t346 * t123) * t132 + t359;
	t363 = t135 * t334;
	t365 = -t135 * t338;
	t367 = -t365 * t21 - t363 * t4 + t142 - t143;
	t371 = t363 * t21 - t365 * t4 + t137 + t139;
	t375 = t146 * t132;
	t380 = t150 * t127;
	t381 = (t367 * t118 + t371 * t123) * t127 - t375 - (t371 * t118 - t367 * t123) * t132 - t380;
	t384 = t360 * t153 * t182 - t381 * t176 * t224;
	t387 = -t170 * t132 - t354 - 0.2e1 * t359;
	t392 = t146 * t132 + t375 + 0.2e1 * t380;
	t395 = t387 * t153 * t182 - t392 * t176 * t224;
	t398 = -t158 * t4 - t162 * t21;
	t402 = t158 * t21 - t162 * t4;
	t404 = t398 * t118 + t402 * t123;
	t408 = t402 * t118 - t398 * t123;
	t411 = atan2(t176, t152);
	t412 = cos(t411);
	t414 = sin(t411);
	t416 = t412 * t152 + t414 * t176;
	t417 = 0.1e1 / t416;
	t419 = t134 ^ 2;
	t420 = t416 ^ 2;
	t421 = 0.1e1 / t420;
	t424 = 0.1e1 / (t419 * t421 + 0.1e1);
	t434 = t421 * t424;
	t437 = t1 * t135;
	t440 = -t437 * t185 - t437 * t187;
	t444 = t437 * t191 - t437 * t193;
	t446 = t440 * t118 + t444 * t123;
	t450 = t444 * t118 - t440 * t123;
	t467 = t106 * t338 - t3 * t334;
	t471 = t106 * t334 + t3 * t338;
	t473 = t471 * t21 + t467 * t4 - t120 + t121;
	t477 = -t467 * t21 + t471 * t4 - t112 - t116;
	t479 = t473 * t118 + t477 * t123;
	t481 = t125 * t132;
	t484 = t477 * t118 - t473 * t123;
	t486 = t131 * t127;
	t517 = t408 * t127 + t404 * t132;
	t518 = sin(qJ(5));
	t520 = cos(qJ(5));
	t523 = t481 + t486;
	t526 = t437 * t518 + t523 * t520;
	t527 = 0.1e1 / t526;
	t531 = -t437 * t520 + t523 * t518;
	t532 = t531 ^ 2;
	t533 = t526 ^ 2;
	t534 = 0.1e1 / t533;
	t537 = 0.1e1 / (t532 * t534 + 0.1e1);
	t543 = t534 * t537;
	t548 = t450 * t127 + t446 * t132;
	t562 = t484 * t127 + t479 * t132 + t128 - t133;
	t564 = t527 * t537;
	t568 = t531 * t534 * t537;
	t573 = -t125 * t127 - t128 + 0.2e1 * t133;
	unknown(1,1) = t154 * t182;
	unknown(1,2) = t226;
	unknown(1,3) = t384;
	unknown(1,4) = t395;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = (t404 * t127 - t408 * t132) * t417 * t424 + (t154 * t182 * t412 * t176 - t134 * t182 * t414 + t414 * t134) * t134 * t434;
	unknown(2,2) = (t446 * t127 - t450 * t132) * t417 * t424 + (-t226 * t414 * t152 + t226 * t412 * t176 + t414 * t203 + t412 * t222) * t134 * t434;
	unknown(2,3) = (t479 * t127 - t484 * t132 - t481 - t486) * t417 * t424 + (-t384 * t414 * t152 + t384 * t412 * t176 + t414 * t360 + t412 * t381) * t134 * t434;
	unknown(2,4) = (t125 * t132 + t481 + 0.2e1 * t486) * t417 * t424 + (-t395 * t414 * t152 + t395 * t412 * t176 + t414 * t387 + t412 * t392) * t134 * t434;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = (-t184 * t520 + t517 * t518) * t527 * t537 - (t184 * t518 + t517 * t520) * t531 * t543;
	unknown(3,2) = (t3 * t520 + t548 * t518) * t527 * t537 - (-t3 * t518 + t548 * t520) * t531 * t543;
	unknown(3,3) = t562 * t518 * t564 - t562 * t520 * t568;
	unknown(3,4) = t573 * t518 * t564 - t573 * t520 * t568;
	unknown(3,5) = t531 ^ 2 * t543 + t537;
	Ja_rot = unknown;
elseif link_index == 8
	%% Symbolic Calculation
	% From jacobia_rot_8_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:24
	% EndTime: 2020-06-27 18:29:25
	% DurationCPUTime: 0.04s
	% Computational Cost: add. (76->19), mult. (197->68), div. (47->9), fcn. (297->9), ass. (0->50)
	unknown=NaN(3,5);
	t1 = sin(qJ(1));
	t2 = cos(qJ(2));
	t3 = t1 * t2;
	t4 = sin(qJ(2));
	t5 = 0.1e1 / t4;
	t6 = cos(qJ(1));
	t7 = t6 ^ 2;
	t8 = t2 ^ 2;
	t10 = t4 ^ 2;
	t11 = 0.1e1 / t10;
	t14 = 0.1e1 / (t7 * t8 * t11 + 0.1e1);
	t21 = t8 * t6 * t11 * t14 + t6 * t14;
	t22 = t6 * t2;
	t23 = atan2(t22, -t4);
	t24 = cos(t23);
	t26 = sin(t23);
	t27 = t26 * t6;
	t29 = t27 * t2 - t24 * t4;
	t31 = t1 ^ 2;
	t33 = t29 ^ 2;
	t34 = 0.1e1 / t33;
	t37 = 0.1e1 / (t31 * t8 * t34 + 0.1e1);
	t38 = 0.1e1 / t29 * t37;
	t52 = t2 * t34 * t37;
	t55 = t1 * t4;
	t67 = t6 * t4;
	t68 = cos(pkin(13));
	t70 = sin(pkin(13));
	t75 = t55 * t70 + t6 * t68;
	t76 = 0.1e1 / t75;
	t80 = -t55 * t68 + t6 * t70;
	t81 = t80 ^ 2;
	t82 = t75 ^ 2;
	t83 = 0.1e1 / t82;
	t86 = 0.1e1 / (t81 * t83 + 0.1e1);
	unknown(1,1) = t3 * t5 * t14;
	unknown(1,2) = t21;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = t22 * t38 - (t1 * t8 * t5 * t14 * t24 * t6 - t26 * t1 * t2 + t3 * t14 * t26) * t1 * t52;
	unknown(2,2) = -t55 * t38 - (t21 * t24 * t22 + t21 * t26 * t4 - t24 * t2 - t27 * t4) * t1 * t52;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = (-t1 * t70 - t67 * t68) * t76 * t86 - (-t1 * t68 + t67 * t70) * t80 * t83 * t86;
	unknown(3,2) = -t3 * t70 * t80 * t83 * t86 - t3 * t68 * t76 * t86;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_rot = unknown;
elseif link_index == 9
	%% Symbolic Calculation
	% From jacobia_rot_9_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:45:40
	% EndTime: 2020-06-27 18:52:44
	% DurationCPUTime: 122.09s
	% Computational Cost: add. (7746416->140), mult. (10062259->310), div. (143713->18), fcn. (4029281->19), ass. (0->162)
	unknown=NaN(3,5);
	t1 = sin(qJ(1));
	t2 = cos(qJ(2));
	t3 = t1 * t2;
	t4 = sin(qJ(2));
	t5 = 0.1e1 / t4;
	t6 = cos(qJ(1));
	t7 = t6 ^ 2;
	t8 = t2 ^ 2;
	t10 = t4 ^ 2;
	t11 = 0.1e1 / t10;
	t14 = 0.1e1 / (t7 * t8 * t11 + 0.1e1);
	t21 = t8 * t6 * t11 * t14 + t6 * t14;
	t22 = t6 * t2;
	t23 = atan2(t22, -t4);
	t24 = cos(t23);
	t26 = sin(t23);
	t27 = t26 * t6;
	t29 = t27 * t2 - t24 * t4;
	t31 = t1 ^ 2;
	t33 = t29 ^ 2;
	t34 = 0.1e1 / t33;
	t37 = 0.1e1 / (t31 * t8 * t34 + 0.1e1);
	t38 = 0.1e1 / t29 * t37;
	t52 = t2 * t34 * t37;
	t55 = t1 * t4;
	t67 = t6 * t4;
	t68 = sin(pkin(13));
	t70 = cos(pkin(13));
	t72 = -t1 * t70 + t67 * t68;
	t73 = cos(qJ(3));
	t74 = -pkin(25) + pkin(26);
	t75 = t73 * t74;
	t76 = pkin(29) + qJ(3);
	t77 = cos(t76);
	t78 = t77 * pkin(18);
	t79 = -pkin(15) + t75 + t78;
	t80 = pkin(17) ^ 2;
	t81 = pkin(23) ^ 2;
	t82 = t77 ^ 2;
	t83 = pkin(18) ^ 2;
	t85 = sin(t76);
	t86 = t85 ^ 2;
	t88 = -pkin(15) + t75;
	t89 = t88 ^ 2;
	t90 = sin(qJ(3));
	t91 = t90 ^ 2;
	t92 = t74 ^ 2;
	t96 = t90 * t74;
	t97 = t85 * pkin(18);
	t98 = -t96 + t97;
	t101 = 0.2e1 * t79 * t77 * pkin(18) + 0.2e1 * t98 * t85 * pkin(18) - t82 * t83 - t86 * t83 + t91 * t92 + t80 - t81 + t89;
	t105 = 0.4e1 * t79 ^ 2 + 0.4e1 * t98 ^ 2;
	t107 = t101 ^ 2;
	t109 = sqrt(t80 * t105 - t107);
	t111 = 0.2e1 * t79 * t101 - 0.2e1 * t98 * t109;
	t112 = 0.1e1 / t105;
	t114 = t111 * t112 + pkin(15) - t75 - t78;
	t115 = t73 * t114;
	t118 = 0.2e1 * t101 * t98 + 0.2e1 * t79 * t109;
	t120 = t118 * t112 + t96 - t97;
	t121 = t90 * t120;
	t123 = 0.1e1 / pkin(23);
	t124 = (t115 - t121) * t123;
	t125 = cos(pkin(14));
	t126 = t125 * pkin(22);
	t127 = t124 * t126;
	t128 = t90 * t114;
	t129 = t73 * t120;
	t131 = (t128 + t129) * t123;
	t132 = sin(pkin(14));
	t133 = t132 * pkin(22);
	t134 = t131 * t133;
	t135 = -pkin(26) - t127 + t134;
	t136 = pkin(21) ^ 2;
	t137 = pkin(24) ^ 2;
	t138 = t127 - t134;
	t139 = t138 ^ 2;
	t140 = t131 * t126;
	t141 = t124 * t133;
	t142 = t140 + t141;
	t143 = t142 ^ 2;
	t144 = pkin(26) ^ 2;
	t147 = -0.2e1 * t135 * t138 + 0.2e1 * t142 ^ 2 + t136 - t137 - t139 - t143 + t144;
	t151 = 0.4e1 * t135 ^ 2 + 0.4e1 * t142 ^ 2;
	t153 = t147 ^ 2;
	t155 = sqrt(t136 * t151 - t153);
	t157 = 0.2e1 * t135 * t147 + 0.2e1 * t142 * t155;
	t158 = 0.1e1 / t151;
	t161 = 0.1e1 / pkin(24);
	t162 = (-t157 * t158 - pkin(26) - t127 + t134) * t161;
	t166 = 0.2e1 * t135 * t155 - 0.2e1 * t147 * t142;
	t169 = (-t166 * t158 - t140 - t141) * t161;
	t171 = -t162 * t68 + t169 * t70;
	t175 = t162 * t70 + t169 * t68;
	t177 = t171 * t70 + t175 * t68;
	t180 = t171 * t68 - t175 * t70;
	t182 = -t180 * pkin(24) + pkin(26) + t127 - t134;
	t184 = 0.1e1 / pkin(21);
	t187 = t177 * pkin(24) + t140 + t141;
	t188 = t187 * t184;
	t190 = t177 * t182 * t184 + t188 * t180;
	t194 = t1 * t68 + t67 * t70;
	t199 = t177 * t187 * t184 - t180 * t182 * t184;
	t204 = t55 * t68 + t6 * t70;
	t208 = t55 * t70 - t6 * t68;
	t210 = -t208 * t190 + t204 * t199;
	t211 = 0.1e1 / t210;
	t215 = -t204 * t190 - t208 * t199;
	t216 = t215 ^ 2;
	t217 = t210 ^ 2;
	t218 = 0.1e1 / t217;
	t221 = 0.1e1 / (t216 * t218 + 0.1e1);
	t227 = t218 * t221;
	t245 = -t96 - t97;
	t257 = -t75 + t78;
	t262 = 0.2e1 * t245 * t77 * pkin(18) + 0.2e1 * t257 * t85 * pkin(18) + 0.2e1 * t98 * t77 * pkin(18) - 0.2e1 * t79 * t85 * pkin(18) + 0.2e1 * t90 * t92 * t73 - 0.2e1 * t88 * t90 * t74;
	t265 = 0.1e1 / t109;
	t269 = 0.4e1 * t79 * t245 + 0.4e1 * t98 * t257;
	t273 = -0.2e1 * t101 * t262 + 0.2e1 * t80 * t269;
	t278 = t105 ^ 2;
	t279 = 0.1e1 / t278;
	t282 = t96 + t97 + (-t98 * t265 * t273 + 0.2e1 * t245 * t101 - 0.2e1 * t257 * t109 + 0.2e1 * t79 * t262) * t112 - 0.2e1 * t111 * t279 * t269;
	t294 = t75 - t78 + (t79 * t265 * t273 + 0.2e1 * t101 * t257 + 0.2e1 * t245 * t109 + 0.2e1 * t262 * t98) * t112 - 0.2e1 * t118 * t279 * t269;
	t297 = (t73 * t282 - t90 * t294 - t128 - t129) * t123;
	t298 = t297 * t126;
	t302 = (t90 * t282 + t73 * t294 + t115 - t121) * t123;
	t303 = t302 * t133;
	t304 = -t298 + t303;
	t308 = t302 * t126;
	t309 = t297 * t133;
	t310 = t308 + t309;
	t316 = 0.2e1 * t135 * t304 + 0.2e1 * t142 * t310;
	t319 = 0.1e1 / t155;
	t323 = 0.4e1 * t135 * t304 + 0.4e1 * t142 * t310;
	t327 = 0.2e1 * t136 * t323 - 0.2e1 * t147 * t316;
	t332 = t151 ^ 2;
	t333 = 0.1e1 / t332;
	t337 = (-t298 + t303 - (t142 * t319 * t327 + 0.2e1 * t135 * t316 + 0.2e1 * t304 * t147 + 0.2e1 * t310 * t155) * t158 + 0.2e1 * t157 * t333 * t323) * t161;
	t350 = (-t308 - t309 - (t135 * t319 * t327 - 0.2e1 * t316 * t142 - 0.2e1 * t147 * t310 + 0.2e1 * t304 * t155) * t158 + 0.2e1 * t166 * t333 * t323) * t161;
	t352 = -t337 * t68 + t350 * t70;
	t356 = t337 * t70 + t350 * t68;
	t358 = t352 * t70 + t356 * t68;
	t363 = t352 * t68 - t356 * t70;
	t365 = -t363 * pkin(24) + t298 - t303;
	t369 = t358 * pkin(24) + t308 + t309;
	t373 = t177 * t365 * t184 + t369 * t184 * t180 + t358 * t182 * t184 + t188 * t363;
	t383 = t177 * t369 * t184 - t180 * t365 * t184 - t363 * t182 * t184 + t358 * t187 * t184;
	unknown(1,1) = t3 * t5 * t14;
	unknown(1,2) = t21;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = t22 * t38 - (t1 * t8 * t5 * t14 * t24 * t6 - t26 * t1 * t2 + t3 * t14 * t26) * t1 * t52;
	unknown(2,2) = -t55 * t38 - (t21 * t24 * t22 + t21 * t26 * t4 - t24 * t2 - t27 * t4) * t1 * t52;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = (-t72 * t190 - t194 * t199) * t211 * t221 - (-t194 * t190 + t72 * t199) * t215 * t227;
	unknown(3,2) = (-t3 * t68 * t190 - t3 * t70 * t199) * t211 * t221 - (-t3 * t70 * t190 + t3 * t68 * t199) * t215 * t227;
	unknown(3,3) = (-t204 * t373 - t208 * t383) * t211 * t221 - (t204 * t383 - t208 * t373) * t215 * t227;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_rot = unknown;
elseif link_index == 10
	%% Symbolic Calculation
	% From jacobia_rot_10_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:34:19
	% EndTime: 2020-06-27 18:37:24
	% DurationCPUTime: 29.94s
	% Computational Cost: add. (1892460->125), mult. (2458619->303), div. (35011->17), fcn. (984585->19), ass. (0->154)
	unknown=NaN(3,5);
	t1 = sin(qJ(1));
	t2 = cos(qJ(2));
	t3 = t1 * t2;
	t4 = sin(qJ(2));
	t5 = 0.1e1 / t4;
	t6 = cos(qJ(1));
	t7 = t6 ^ 2;
	t8 = t2 ^ 2;
	t10 = t4 ^ 2;
	t11 = 0.1e1 / t10;
	t14 = 0.1e1 / (t11 * t7 * t8 + 0.1e1);
	t21 = t11 * t14 * t6 * t8 + t14 * t6;
	t22 = t6 * t2;
	t23 = atan2(t22, -t4);
	t24 = cos(t23);
	t26 = sin(t23);
	t27 = t26 * t6;
	t29 = t2 * t27 - t24 * t4;
	t31 = t1 ^ 2;
	t33 = t29 ^ 2;
	t34 = 0.1e1 / t33;
	t37 = 0.1e1 / (t31 * t34 * t8 + 0.1e1);
	t38 = 0.1e1 / t29 * t37;
	t52 = t2 * t34 * t37;
	t55 = t1 * t4;
	t67 = t6 * t4;
	t68 = cos(qJ(3));
	t69 = -pkin(25) + pkin(26);
	t70 = t68 * t69;
	t71 = pkin(29) + qJ(3);
	t72 = cos(t71);
	t73 = t72 * pkin(18);
	t74 = -pkin(15) + t70 + t73;
	t75 = pkin(17) ^ 2;
	t76 = pkin(23) ^ 2;
	t77 = t72 ^ 2;
	t78 = pkin(18) ^ 2;
	t80 = sin(t71);
	t81 = t80 ^ 2;
	t83 = -pkin(15) + t70;
	t84 = t83 ^ 2;
	t85 = sin(qJ(3));
	t86 = t85 ^ 2;
	t87 = t69 ^ 2;
	t91 = t85 * t69;
	t92 = t80 * pkin(18);
	t93 = -t91 + t92;
	t96 = 0.2e1 * pkin(18) * t72 * t74 + 0.2e1 * pkin(18) * t80 * t93 - t77 * t78 - t78 * t81 + t86 * t87 + t75 - t76 + t84;
	t100 = 0.4e1 * t74 ^ 2 + 0.4e1 * t93 ^ 2;
	t102 = t96 ^ 2;
	t104 = sqrt(t100 * t75 - t102);
	t106 = -0.2e1 * t104 * t93 + 0.2e1 * t74 * t96;
	t107 = 0.1e1 / t100;
	t109 = t106 * t107 + pkin(15) - t70 - t73;
	t110 = t68 * t109;
	t113 = 0.2e1 * t104 * t74 + 0.2e1 * t93 * t96;
	t115 = t107 * t113 + t91 - t92;
	t116 = t85 * t115;
	t117 = t110 - t116;
	t118 = 0.1e1 / pkin(23);
	t119 = t117 * t118;
	t120 = cos(pkin(14));
	t121 = t120 * pkin(22);
	t122 = t119 * t121;
	t123 = t85 * t109;
	t124 = t68 * t115;
	t125 = t123 + t124;
	t126 = t125 * t118;
	t127 = sin(pkin(14));
	t128 = t127 * pkin(22);
	t129 = t126 * t128;
	t130 = -pkin(26) - t122 + t129;
	t131 = pkin(21) ^ 2;
	t132 = pkin(24) ^ 2;
	t133 = t122 - t129;
	t134 = t133 ^ 2;
	t135 = t126 * t121;
	t136 = t119 * t128;
	t137 = t135 + t136;
	t138 = t137 ^ 2;
	t139 = pkin(26) ^ 2;
	t142 = -0.2e1 * t130 * t133 + 0.2e1 * t137 ^ 2 + t131 - t132 - t134 - t138 + t139;
	t146 = 0.4e1 * t130 ^ 2 + 0.4e1 * t137 ^ 2;
	t148 = t142 ^ 2;
	t150 = sqrt(t131 * t146 - t148);
	t152 = 0.2e1 * t130 * t142 + 0.2e1 * t137 * t150;
	t153 = 0.1e1 / t146;
	t156 = 0.1e1 / pkin(24);
	t157 = (-t152 * t153 - pkin(26) - t122 + t129) * t156;
	t158 = sin(pkin(13));
	t162 = 0.2e1 * t130 * t150 - 0.2e1 * t137 * t142;
	t165 = (-t153 * t162 - t135 - t136) * t156;
	t166 = cos(pkin(13));
	t168 = -t157 * t158 + t165 * t166;
	t172 = t157 * t166 + t158 * t165;
	t174 = -t1 * t172 - t168 * t67;
	t179 = -t1 * t168 + t172 * t67;
	t185 = -t168 * t55 + t172 * t6;
	t190 = t168 * t6 + t172 * t55;
	t193 = t117 * t118 * t185 + t118 * t125 * t190;
	t194 = 0.1e1 / t193;
	t200 = -t117 * t118 * t190 + t118 * t125 * t185;
	t201 = t200 ^ 2;
	t202 = t193 ^ 2;
	t203 = 0.1e1 / t202;
	t206 = 0.1e1 / (t201 * t203 + 0.1e1);
	t214 = t203 * t206;
	t236 = -t91 - t92;
	t248 = -t70 + t73;
	t253 = 0.2e1 * pkin(18) * t236 * t72 + 0.2e1 * pkin(18) * t248 * t80 + 0.2e1 * pkin(18) * t72 * t93 - 0.2e1 * pkin(18) * t74 * t80 + 0.2e1 * t68 * t85 * t87 - 0.2e1 * t69 * t83 * t85;
	t256 = 0.1e1 / t104;
	t260 = 0.4e1 * t236 * t74 + 0.4e1 * t248 * t93;
	t264 = -0.2e1 * t253 * t96 + 0.2e1 * t260 * t75;
	t269 = t100 ^ 2;
	t270 = 0.1e1 / t269;
	t273 = t91 + t92 + (-t256 * t264 * t93 - 0.2e1 * t104 * t248 + 0.2e1 * t236 * t96 + 0.2e1 * t253 * t74) * t107 - 0.2e1 * t106 * t270 * t260;
	t285 = t70 - t73 + (t256 * t264 * t74 + 0.2e1 * t104 * t236 + 0.2e1 * t248 * t96 + 0.2e1 * t253 * t93) * t107 - 0.2e1 * t113 * t270 * t260;
	t287 = t273 * t68 - t285 * t85 - t123 - t124;
	t288 = t287 * t118;
	t289 = t288 * t121;
	t292 = t273 * t85 + t285 * t68 + t110 - t116;
	t293 = t292 * t118;
	t294 = t293 * t128;
	t295 = -t289 + t294;
	t299 = t293 * t121;
	t300 = t288 * t128;
	t301 = t299 + t300;
	t307 = 0.2e1 * t130 * t295 + 0.2e1 * t137 * t301;
	t310 = 0.1e1 / t150;
	t314 = 0.4e1 * t130 * t295 + 0.4e1 * t137 * t301;
	t318 = 0.2e1 * t131 * t314 - 0.2e1 * t142 * t307;
	t323 = t146 ^ 2;
	t324 = 0.1e1 / t323;
	t328 = (-t289 + t294 - (t137 * t310 * t318 + 0.2e1 * t130 * t307 + 0.2e1 * t142 * t295 + 0.2e1 * t150 * t301) * t153 + 0.2e1 * t152 * t324 * t314) * t156;
	t341 = (-t299 - t300 - (t130 * t310 * t318 - 0.2e1 * t137 * t307 - 0.2e1 * t142 * t301 + 0.2e1 * t150 * t295) * t153 + 0.2e1 * t162 * t324 * t314) * t156;
	t343 = -t158 * t328 + t166 * t341;
	t347 = t158 * t341 + t166 * t328;
	t349 = -t343 * t55 + t347 * t6;
	t356 = t343 * t6 + t347 * t55;
	unknown(1,1) = t3 * t5 * t14;
	unknown(1,2) = t21;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = t22 * t38 - (t1 * t14 * t24 * t5 * t6 * t8 - t1 * t2 * t26 + t14 * t26 * t3) * t1 * t52;
	unknown(2,2) = -t55 * t38 - (t21 * t22 * t24 + t21 * t26 * t4 - t2 * t24 - t27 * t4) * t1 * t52;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = (-t117 * t118 * t179 + t118 * t125 * t174) * t194 * t206 - (t117 * t118 * t174 + t118 * t125 * t179) * t200 * t214;
	unknown(3,2) = (-t117 * t118 * t172 * t3 - t118 * t125 * t168 * t3) * t194 * t206 - (-t117 * t118 * t168 * t3 + t118 * t125 * t172 * t3) * t200 * t214;
	unknown(3,3) = (-t117 * t118 * t356 + t118 * t125 * t349 + t118 * t185 * t292 - t118 * t190 * t287) * t194 * t206 - (t117 * t118 * t349 + t118 * t125 * t356 + t118 * t185 * t287 + t118 * t190 * t292) * t200 * t214;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_rot = unknown;
elseif link_index == 11
	%% Symbolic Calculation
	% From jacobia_rot_11_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:40:19
	% EndTime: 2020-06-27 18:45:28
	% DurationCPUTime: 63.89s
	% Computational Cost: add. (4057352->162), mult. (5268537->366), div. (75541->18), fcn. (2110255->19), ass. (0->180)
	unknown=NaN(3,5);
	t1 = sin(qJ(1));
	t2 = cos(qJ(2));
	t3 = t1 * t2;
	t4 = sin(qJ(2));
	t5 = 0.1e1 / t4;
	t6 = cos(qJ(1));
	t7 = t6 ^ 2;
	t8 = t2 ^ 2;
	t10 = t4 ^ 2;
	t11 = 0.1e1 / t10;
	t14 = 0.1e1 / (t7 * t8 * t11 + 0.1e1);
	t21 = t8 * t6 * t11 * t14 + t6 * t14;
	t22 = t6 * t2;
	t23 = atan2(t22, -t4);
	t24 = cos(t23);
	t26 = sin(t23);
	t27 = t26 * t6;
	t29 = t27 * t2 - t24 * t4;
	t31 = t1 ^ 2;
	t33 = t29 ^ 2;
	t34 = 0.1e1 / t33;
	t37 = 0.1e1 / (t31 * t8 * t34 + 0.1e1);
	t38 = 0.1e1 / t29 * t37;
	t52 = t2 * t34 * t37;
	t55 = t1 * t4;
	t67 = t6 * t4;
	t68 = cos(qJ(3));
	t69 = -pkin(25) + pkin(26);
	t70 = t68 * t69;
	t71 = pkin(29) + qJ(3);
	t72 = cos(t71);
	t73 = t72 * pkin(18);
	t74 = -pkin(15) + t70 + t73;
	t75 = pkin(17) ^ 2;
	t76 = pkin(23) ^ 2;
	t77 = t72 ^ 2;
	t78 = pkin(18) ^ 2;
	t80 = sin(t71);
	t81 = t80 ^ 2;
	t83 = -pkin(15) + t70;
	t84 = t83 ^ 2;
	t85 = sin(qJ(3));
	t86 = t85 ^ 2;
	t87 = t69 ^ 2;
	t91 = t85 * t69;
	t92 = t80 * pkin(18);
	t93 = -t91 + t92;
	t96 = 0.2e1 * t74 * t72 * pkin(18) + 0.2e1 * t93 * t80 * pkin(18) - t77 * t78 - t81 * t78 + t86 * t87 + t75 - t76 + t84;
	t100 = 0.4e1 * t74 ^ 2 + 0.4e1 * t93 ^ 2;
	t102 = t96 ^ 2;
	t104 = sqrt(t75 * t100 - t102);
	t106 = -0.2e1 * t93 * t104 + 0.2e1 * t74 * t96;
	t107 = 0.1e1 / t100;
	t109 = t106 * t107 + pkin(15) - t70 - t73;
	t110 = t68 * t109;
	t113 = 0.2e1 * t74 * t104 + 0.2e1 * t96 * t93;
	t115 = t113 * t107 + t91 - t92;
	t116 = t85 * t115;
	t117 = t110 - t116;
	t118 = 0.1e1 / pkin(23);
	t119 = t117 * t118;
	t120 = cos(pkin(14));
	t121 = t120 * pkin(22);
	t122 = t119 * t121;
	t123 = t85 * t109;
	t124 = t68 * t115;
	t125 = t123 + t124;
	t126 = t125 * t118;
	t127 = sin(pkin(14));
	t128 = t127 * pkin(22);
	t129 = t126 * t128;
	t130 = -pkin(26) - t122 + t129;
	t131 = pkin(21) ^ 2;
	t132 = pkin(24) ^ 2;
	t133 = t122 - t129;
	t134 = t133 ^ 2;
	t135 = t126 * t121;
	t136 = t119 * t128;
	t137 = t135 + t136;
	t138 = t137 ^ 2;
	t139 = pkin(26) ^ 2;
	t142 = -0.2e1 * t130 * t133 + 0.2e1 * t137 ^ 2 + t131 - t132 - t134 - t138 + t139;
	t146 = 0.4e1 * t130 ^ 2 + 0.4e1 * t137 ^ 2;
	t148 = t142 ^ 2;
	t150 = sqrt(t131 * t146 - t148);
	t152 = 0.2e1 * t130 * t142 + 0.2e1 * t137 * t150;
	t153 = 0.1e1 / t146;
	t156 = 0.1e1 / pkin(24);
	t157 = (-t152 * t153 - pkin(26) - t122 + t129) * t156;
	t158 = sin(pkin(13));
	t162 = 0.2e1 * t130 * t150 - 0.2e1 * t142 * t137;
	t165 = (-t162 * t153 - t135 - t136) * t156;
	t166 = cos(pkin(13));
	t168 = -t157 * t158 + t165 * t166;
	t172 = t157 * t166 + t165 * t158;
	t174 = -t1 * t172 - t67 * t168;
	t179 = -t1 * t168 + t67 * t172;
	t182 = t174 * t117 * t118 + t179 * t125 * t118;
	t184 = t68 * t117 * t118;
	t186 = t85 * t125 * t118;
	t187 = t184 + t186;
	t189 = t85 * t117 * t118;
	t191 = t68 * t125 * t118;
	t192 = t189 - t191;
	t194 = t192 * pkin(23) + t91 - t92;
	t196 = 0.1e1 / pkin(17);
	t199 = t187 * pkin(23) - pkin(15) + t70 + t73;
	t200 = t199 * t196;
	t202 = -t187 * t194 * t196 + t200 * t192;
	t208 = t179 * t117 * t118 - t174 * t125 * t118;
	t213 = -t187 * t199 * t196 - t192 * t194 * t196;
	t218 = -t55 * t168 + t6 * t172;
	t223 = t6 * t168 + t55 * t172;
	t226 = t218 * t117 * t118 + t223 * t125 * t118;
	t232 = t223 * t117 * t118 - t218 * t125 * t118;
	t234 = -t232 * t202 + t226 * t213;
	t235 = 0.1e1 / t234;
	t239 = -t226 * t202 - t232 * t213;
	t240 = t239 ^ 2;
	t241 = t234 ^ 2;
	t242 = 0.1e1 / t241;
	t245 = 0.1e1 / (t240 * t242 + 0.1e1);
	t251 = t242 * t245;
	t260 = -t3 * t168 * t117 * t118 + t3 * t172 * t125 * t118;
	t268 = t3 * t172 * t117 * t118 + t3 * t168 * t125 * t118;
	t279 = -t91 - t92;
	t291 = -t70 + t73;
	t296 = 0.2e1 * t279 * t72 * pkin(18) + 0.2e1 * t291 * t80 * pkin(18) + 0.2e1 * t93 * t72 * pkin(18) - 0.2e1 * t74 * t80 * pkin(18) + 0.2e1 * t85 * t87 * t68 - 0.2e1 * t83 * t85 * t69;
	t299 = 0.1e1 / t104;
	t303 = 0.4e1 * t74 * t279 + 0.4e1 * t93 * t291;
	t307 = -0.2e1 * t96 * t296 + 0.2e1 * t75 * t303;
	t312 = t100 ^ 2;
	t313 = 0.1e1 / t312;
	t316 = t91 + t92 + (-t93 * t299 * t307 - 0.2e1 * t291 * t104 + 0.2e1 * t279 * t96 + 0.2e1 * t74 * t296) * t107 - 0.2e1 * t106 * t313 * t303;
	t328 = t70 - t73 + (t74 * t299 * t307 + 0.2e1 * t279 * t104 + 0.2e1 * t96 * t291 + 0.2e1 * t296 * t93) * t107 - 0.2e1 * t113 * t313 * t303;
	t330 = t68 * t316 - t85 * t328 - t123 - t124;
	t331 = t330 * t118;
	t332 = t331 * t121;
	t335 = t85 * t316 + t68 * t328 + t110 - t116;
	t336 = t335 * t118;
	t337 = t336 * t128;
	t338 = -t332 + t337;
	t342 = t336 * t121;
	t343 = t331 * t128;
	t344 = t342 + t343;
	t350 = 0.2e1 * t130 * t338 + 0.2e1 * t137 * t344;
	t353 = 0.1e1 / t150;
	t357 = 0.4e1 * t130 * t338 + 0.4e1 * t137 * t344;
	t361 = 0.2e1 * t131 * t357 - 0.2e1 * t142 * t350;
	t366 = t146 ^ 2;
	t367 = 0.1e1 / t366;
	t371 = (-t332 + t337 - (t137 * t353 * t361 + 0.2e1 * t130 * t350 + 0.2e1 * t338 * t142 + 0.2e1 * t344 * t150) * t153 + 0.2e1 * t152 * t367 * t357) * t156;
	t384 = (-t342 - t343 - (t130 * t353 * t361 - 0.2e1 * t350 * t137 - 0.2e1 * t142 * t344 + 0.2e1 * t338 * t150) * t153 + 0.2e1 * t162 * t367 * t357) * t156;
	t386 = -t371 * t158 + t384 * t166;
	t390 = t384 * t158 + t371 * t166;
	t392 = -t55 * t386 + t6 * t390;
	t399 = t6 * t386 + t55 * t390;
	t404 = t392 * t117 * t118 + t399 * t125 * t118 + t218 * t330 * t118 + t223 * t335 * t118;
	t410 = t68 * t330 * t118 + t85 * t335 * t118 - t189 + t191;
	t417 = t85 * t330 * t118 - t68 * t335 * t118 + t184 + t186;
	t419 = t417 * pkin(23) + t70 - t73;
	t423 = t410 * pkin(23) - t91 - t92;
	t427 = -t187 * t419 * t196 + t423 * t196 * t192 - t410 * t194 * t196 + t200 * t417;
	t437 = t399 * t117 * t118 - t392 * t125 * t118 - t218 * t335 * t118 + t223 * t330 * t118;
	t447 = -t187 * t423 * t196 - t192 * t419 * t196 - t417 * t194 * t196 - t410 * t199 * t196;
	unknown(1,1) = t3 * t5 * t14;
	unknown(1,2) = t21;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = t22 * t38 - (t1 * t8 * t5 * t14 * t24 * t6 - t26 * t1 * t2 + t3 * t14 * t26) * t1 * t52;
	unknown(2,2) = -t55 * t38 - (t21 * t24 * t22 + t21 * t26 * t4 - t24 * t2 - t27 * t4) * t1 * t52;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = (-t182 * t202 - t208 * t213) * t235 * t245 - (t182 * t213 - t208 * t202) * t239 * t251;
	unknown(3,2) = (-t260 * t202 - t268 * t213) * t235 * t245 - (-t268 * t202 + t260 * t213) * t239 * t251;
	unknown(3,3) = (-t404 * t202 - t437 * t213 - t226 * t427 - t232 * t447) * t235 * t245 - (-t437 * t202 + t404 * t213 + t226 * t447 - t232 * t427) * t239 * t251;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_rot = unknown;
elseif link_index == 12
	%% Symbolic Calculation
	% From jacobia_rot_12_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:49:22
	% EndTime: 2020-06-27 18:56:36
	% DurationCPUTime: 132.52s
	% Computational Cost: add. (8489398->186), mult. (11020877->404), div. (158973->18), fcn. (4414199->19), ass. (0->206)
	unknown=NaN(3,5);
	t1 = sin(qJ(1));
	t2 = cos(qJ(2));
	t3 = t1 * t2;
	t4 = sin(qJ(2));
	t5 = 0.1e1 / t4;
	t6 = cos(qJ(1));
	t7 = t6 ^ 2;
	t8 = t2 ^ 2;
	t10 = t4 ^ 2;
	t11 = 0.1e1 / t10;
	t14 = 0.1e1 / (t7 * t8 * t11 + 0.1e1);
	t21 = t8 * t6 * t11 * t14 + t6 * t14;
	t22 = t6 * t2;
	t23 = atan2(t22, -t4);
	t24 = cos(t23);
	t26 = sin(t23);
	t27 = t26 * t6;
	t29 = t27 * t2 - t24 * t4;
	t31 = t1 ^ 2;
	t33 = t29 ^ 2;
	t34 = 0.1e1 / t33;
	t37 = 0.1e1 / (t31 * t8 * t34 + 0.1e1);
	t38 = 0.1e1 / t29 * t37;
	t52 = t2 * t34 * t37;
	t55 = t1 * t4;
	t67 = t6 * t4;
	t68 = cos(qJ(3));
	t69 = -pkin(25) + pkin(26);
	t70 = t68 * t69;
	t71 = pkin(29) + qJ(3);
	t72 = cos(t71);
	t73 = t72 * pkin(18);
	t74 = -pkin(15) + t70 + t73;
	t75 = pkin(17) ^ 2;
	t76 = pkin(23) ^ 2;
	t77 = t72 ^ 2;
	t78 = pkin(18) ^ 2;
	t80 = sin(t71);
	t81 = t80 ^ 2;
	t83 = -pkin(15) + t70;
	t84 = t83 ^ 2;
	t85 = sin(qJ(3));
	t86 = t85 ^ 2;
	t87 = t69 ^ 2;
	t91 = t85 * t69;
	t92 = t80 * pkin(18);
	t93 = -t91 + t92;
	t96 = 0.2e1 * t74 * t72 * pkin(18) + 0.2e1 * t93 * t80 * pkin(18) - t77 * t78 - t81 * t78 + t86 * t87 + t75 - t76 + t84;
	t100 = 0.4e1 * t74 ^ 2 + 0.4e1 * t93 ^ 2;
	t102 = t96 ^ 2;
	t104 = sqrt(t75 * t100 - t102);
	t106 = -0.2e1 * t93 * t104 + 0.2e1 * t74 * t96;
	t107 = 0.1e1 / t100;
	t108 = t106 * t107;
	t109 = pkin(15) - t70 - t73 + t108;
	t110 = t68 * t109;
	t113 = 0.2e1 * t74 * t104 + 0.2e1 * t96 * t93;
	t114 = t113 * t107;
	t115 = t91 - t92 + t114;
	t116 = t85 * t115;
	t117 = t110 - t116;
	t118 = 0.1e1 / pkin(23);
	t119 = t117 * t118;
	t120 = cos(pkin(14));
	t121 = t120 * pkin(22);
	t122 = t119 * t121;
	t123 = t85 * t109;
	t124 = t68 * t115;
	t125 = t123 + t124;
	t126 = t125 * t118;
	t127 = sin(pkin(14));
	t128 = t127 * pkin(22);
	t129 = t126 * t128;
	t130 = -pkin(26) - t122 + t129;
	t131 = pkin(21) ^ 2;
	t132 = pkin(24) ^ 2;
	t133 = t122 - t129;
	t134 = t133 ^ 2;
	t135 = t126 * t121;
	t136 = t119 * t128;
	t137 = t135 + t136;
	t138 = t137 ^ 2;
	t139 = pkin(26) ^ 2;
	t142 = -0.2e1 * t130 * t133 + 0.2e1 * t137 ^ 2 + t131 - t132 - t134 - t138 + t139;
	t146 = 0.4e1 * t130 ^ 2 + 0.4e1 * t137 ^ 2;
	t148 = t142 ^ 2;
	t150 = sqrt(t131 * t146 - t148);
	t152 = 0.2e1 * t130 * t142 + 0.2e1 * t137 * t150;
	t153 = 0.1e1 / t146;
	t156 = 0.1e1 / pkin(24);
	t157 = (-t152 * t153 - pkin(26) - t122 + t129) * t156;
	t158 = sin(pkin(13));
	t162 = 0.2e1 * t130 * t150 - 0.2e1 * t142 * t137;
	t165 = (-t162 * t153 - t135 - t136) * t156;
	t166 = cos(pkin(13));
	t168 = -t157 * t158 + t165 * t166;
	t172 = t157 * t166 + t165 * t158;
	t174 = -t1 * t172 - t67 * t168;
	t179 = -t1 * t168 + t67 * t172;
	t182 = t174 * t117 * t118 + t179 * t125 * t118;
	t184 = t68 * t117 * t118;
	t186 = t85 * t125 * t118;
	t187 = t184 + t186;
	t189 = t187 * pkin(23) - pkin(15) + t70 + t73;
	t191 = 0.1e1 / pkin(17);
	t194 = t85 * t117 * t118;
	t196 = t68 * t125 * t118;
	t197 = t194 - t196;
	t199 = t197 * pkin(23) + t91 - t92;
	t202 = -t187 * t189 * t191 - t197 * t199 * t191;
	t208 = t179 * t117 * t118 - t174 * t125 * t118;
	t211 = t189 * t191;
	t213 = t187 * t199 * t191 - t211 * t197;
	t215 = t182 * t202 + t208 * t213;
	t216 = t191 * t72;
	t217 = t114 * t216;
	t218 = t191 * t80;
	t219 = t108 * t218;
	t220 = t217 - t219;
	t224 = -t182 * t213 + t208 * t202;
	t225 = t108 * t216;
	t226 = t114 * t218;
	t227 = t225 + t226;
	t232 = -t55 * t168 + t6 * t172;
	t237 = t6 * t168 + t55 * t172;
	t240 = t232 * t117 * t118 + t237 * t125 * t118;
	t246 = t237 * t117 * t118 - t232 * t125 * t118;
	t248 = t240 * t202 + t246 * t213;
	t252 = t246 * t202 - t240 * t213;
	t254 = -t252 * t220 + t248 * t227;
	t255 = 0.1e1 / t254;
	t259 = -t248 * t220 - t252 * t227;
	t260 = t259 ^ 2;
	t261 = t254 ^ 2;
	t262 = 0.1e1 / t261;
	t265 = 0.1e1 / (t260 * t262 + 0.1e1);
	t271 = t262 * t265;
	t280 = -t3 * t168 * t117 * t118 + t3 * t172 * t125 * t118;
	t288 = t3 * t172 * t117 * t118 + t3 * t168 * t125 * t118;
	t290 = t280 * t202 + t288 * t213;
	t294 = t288 * t202 - t280 * t213;
	t305 = -t91 - t92;
	t317 = -t70 + t73;
	t322 = 0.2e1 * t305 * t72 * pkin(18) + 0.2e1 * t317 * t80 * pkin(18) + 0.2e1 * t93 * t72 * pkin(18) - 0.2e1 * t74 * t80 * pkin(18) + 0.2e1 * t85 * t87 * t68 - 0.2e1 * t83 * t85 * t69;
	t325 = 0.1e1 / t104;
	t329 = 0.4e1 * t74 * t305 + 0.4e1 * t93 * t317;
	t333 = -0.2e1 * t96 * t322 + 0.2e1 * t75 * t329;
	t337 = (-t93 * t325 * t333 - 0.2e1 * t317 * t104 + 0.2e1 * t305 * t96 + 0.2e1 * t74 * t322) * t107;
	t338 = t100 ^ 2;
	t339 = 0.1e1 / t338;
	t340 = t106 * t339;
	t342 = -0.2e1 * t340 * t329 + t337 + t91 + t92;
	t351 = (t74 * t325 * t333 + 0.2e1 * t305 * t104 + 0.2e1 * t96 * t317 + 0.2e1 * t322 * t93) * t107;
	t352 = t113 * t339;
	t354 = -0.2e1 * t352 * t329 + t351 + t70 - t73;
	t356 = t68 * t342 - t85 * t354 - t123 - t124;
	t357 = t356 * t118;
	t358 = t357 * t121;
	t361 = t85 * t342 + t68 * t354 + t110 - t116;
	t362 = t361 * t118;
	t363 = t362 * t128;
	t364 = -t358 + t363;
	t368 = t362 * t121;
	t369 = t357 * t128;
	t370 = t368 + t369;
	t376 = 0.2e1 * t130 * t364 + 0.2e1 * t137 * t370;
	t379 = 0.1e1 / t150;
	t383 = 0.4e1 * t130 * t364 + 0.4e1 * t137 * t370;
	t387 = 0.2e1 * t131 * t383 - 0.2e1 * t142 * t376;
	t392 = t146 ^ 2;
	t393 = 0.1e1 / t392;
	t397 = (-t358 + t363 - (t137 * t379 * t387 + 0.2e1 * t130 * t376 + 0.2e1 * t364 * t142 + 0.2e1 * t370 * t150) * t153 + 0.2e1 * t152 * t393 * t383) * t156;
	t410 = (-t368 - t369 - (t130 * t379 * t387 - 0.2e1 * t376 * t137 - 0.2e1 * t142 * t370 + 0.2e1 * t364 * t150) * t153 + 0.2e1 * t162 * t393 * t383) * t156;
	t412 = -t397 * t158 + t410 * t166;
	t416 = t410 * t158 + t397 * t166;
	t418 = -t55 * t412 + t6 * t416;
	t425 = t6 * t412 + t55 * t416;
	t430 = t418 * t117 * t118 + t425 * t125 * t118 + t232 * t356 * t118 + t237 * t361 * t118;
	t436 = t68 * t356 * t118 + t85 * t361 * t118 - t194 + t196;
	t440 = t436 * pkin(23) - t91 - t92;
	t447 = t85 * t356 * t118 - t68 * t361 * t118 + t184 + t186;
	t451 = t447 * pkin(23) + t70 - t73;
	t454 = -t187 * t440 * t191 - t436 * t189 * t191 - t197 * t451 * t191 - t447 * t199 * t191;
	t464 = t425 * t117 * t118 - t418 * t125 * t118 - t232 * t361 * t118 + t237 * t356 * t118;
	t473 = t187 * t451 * t191 - t440 * t191 * t197 + t436 * t199 * t191 - t211 * t447;
	t475 = t430 * t202 + t464 * t213 + t240 * t454 + t246 * t473;
	t478 = 0.2e1 * t216 * t329;
	t481 = 0.2e1 * t218 * t329;
	t483 = t351 * t216 - t337 * t218 + t340 * t481 - t352 * t478 - t225 - t226;
	t489 = t464 * t202 - t430 * t213 - t240 * t473 + t246 * t454;
	t495 = t337 * t216 + t351 * t218 - t340 * t478 - t352 * t481 + t217 - t219;
	unknown(1,1) = t3 * t5 * t14;
	unknown(1,2) = t21;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = t22 * t38 - (t1 * t8 * t5 * t14 * t24 * t6 - t26 * t1 * t2 + t3 * t14 * t26) * t1 * t52;
	unknown(2,2) = -t55 * t38 - (t21 * t24 * t22 + t21 * t26 * t4 - t24 * t2 - t27 * t4) * t1 * t52;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = (-t215 * t220 - t224 * t227) * t255 * t265 - (t215 * t227 - t224 * t220) * t259 * t271;
	unknown(3,2) = (-t290 * t220 - t294 * t227) * t255 * t265 - (-t294 * t220 + t290 * t227) * t259 * t271;
	unknown(3,3) = (-t475 * t220 - t489 * t227 - t248 * t483 - t252 * t495) * t255 * t265 - (-t489 * t220 + t475 * t227 + t248 * t495 - t252 * t483) * t259 * t271;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_rot = unknown;
elseif link_index == 13
	%% Symbolic Calculation
	% From jacobia_rot_13_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:59:11
	% EndTime: 2020-06-27 19:07:06
	% DurationCPUTime: 324.14s
	% Computational Cost: add. (21000830->241), mult. (27227705->488), div. (402555->21), fcn. (10908883->25), ass. (0->260)
	unknown=NaN(3,5);
	t1 = sin(qJ(1));
	t2 = cos(qJ(2));
	t3 = t1 * t2;
	t4 = sin(qJ(2));
	t5 = 0.1e1 / t4;
	t6 = cos(qJ(1));
	t7 = t6 ^ 2;
	t8 = t2 ^ 2;
	t10 = t4 ^ 2;
	t11 = 0.1e1 / t10;
	t14 = 0.1e1 / (t7 * t8 * t11 + 0.1e1);
	t21 = t8 * t6 * t11 * t14 + t6 * t14;
	t22 = t6 * t2;
	t23 = atan2(t22, -t4);
	t24 = cos(t23);
	t26 = sin(t23);
	t27 = t26 * t6;
	t29 = t27 * t2 - t24 * t4;
	t31 = t1 ^ 2;
	t33 = t29 ^ 2;
	t34 = 0.1e1 / t33;
	t37 = 0.1e1 / (t31 * t8 * t34 + 0.1e1);
	t38 = 0.1e1 / t29 * t37;
	t52 = t2 * t34 * t37;
	t55 = t1 * t4;
	t67 = t6 * t4;
	t68 = cos(qJ(3));
	t69 = -pkin(25) + pkin(26);
	t70 = t68 * t69;
	t71 = pkin(29) + qJ(3);
	t72 = cos(t71);
	t73 = t72 * pkin(18);
	t74 = -pkin(15) + t70 + t73;
	t75 = pkin(17) ^ 2;
	t76 = pkin(23) ^ 2;
	t77 = t72 ^ 2;
	t78 = pkin(18) ^ 2;
	t80 = sin(t71);
	t81 = t80 ^ 2;
	t83 = -pkin(15) + t70;
	t84 = t83 ^ 2;
	t85 = sin(qJ(3));
	t86 = t85 ^ 2;
	t87 = t69 ^ 2;
	t91 = t85 * t69;
	t92 = t80 * pkin(18);
	t93 = -t91 + t92;
	t96 = 0.2e1 * t74 * t72 * pkin(18) + 0.2e1 * t93 * t80 * pkin(18) - t77 * t78 - t81 * t78 + t86 * t87 + t75 - t76 + t84;
	t100 = 0.4e1 * t74 ^ 2 + 0.4e1 * t93 ^ 2;
	t102 = t96 ^ 2;
	t104 = sqrt(t75 * t100 - t102);
	t106 = -0.2e1 * t93 * t104 + 0.2e1 * t74 * t96;
	t107 = 0.1e1 / t100;
	t108 = t106 * t107;
	t109 = pkin(15) - t70 - t73 + t108;
	t110 = t68 * t109;
	t113 = 0.2e1 * t74 * t104 + 0.2e1 * t96 * t93;
	t114 = t113 * t107;
	t115 = t91 - t92 + t114;
	t116 = t85 * t115;
	t117 = t110 - t116;
	t118 = 0.1e1 / pkin(23);
	t119 = t117 * t118;
	t120 = cos(pkin(14));
	t121 = t120 * pkin(22);
	t122 = t119 * t121;
	t123 = t85 * t109;
	t124 = t68 * t115;
	t125 = t123 + t124;
	t126 = t125 * t118;
	t127 = sin(pkin(14));
	t128 = t127 * pkin(22);
	t129 = t126 * t128;
	t130 = -pkin(26) - t122 + t129;
	t131 = pkin(21) ^ 2;
	t132 = pkin(24) ^ 2;
	t133 = t122 - t129;
	t134 = t133 ^ 2;
	t135 = t126 * t121;
	t136 = t119 * t128;
	t137 = t135 + t136;
	t138 = t137 ^ 2;
	t139 = pkin(26) ^ 2;
	t142 = -0.2e1 * t130 * t133 + 0.2e1 * t137 ^ 2 + t131 - t132 - t134 - t138 + t139;
	t146 = 0.4e1 * t130 ^ 2 + 0.4e1 * t137 ^ 2;
	t148 = t142 ^ 2;
	t150 = sqrt(t131 * t146 - t148);
	t152 = 0.2e1 * t130 * t142 + 0.2e1 * t137 * t150;
	t153 = 0.1e1 / t146;
	t156 = 0.1e1 / pkin(24);
	t157 = (-t152 * t153 - pkin(26) - t122 + t129) * t156;
	t158 = sin(pkin(13));
	t162 = 0.2e1 * t130 * t150 - 0.2e1 * t142 * t137;
	t165 = (-t162 * t153 - t135 - t136) * t156;
	t166 = cos(pkin(13));
	t168 = -t157 * t158 + t165 * t166;
	t172 = t157 * t166 + t165 * t158;
	t174 = -t1 * t172 - t67 * t168;
	t179 = -t1 * t168 + t67 * t172;
	t182 = t174 * t117 * t118 + t179 * t125 * t118;
	t184 = t68 * t117 * t118;
	t186 = t85 * t125 * t118;
	t187 = t184 + t186;
	t189 = t187 * pkin(23) - pkin(15) + t70 + t73;
	t191 = 0.1e1 / pkin(17);
	t194 = t85 * t117 * t118;
	t196 = t68 * t125 * t118;
	t197 = t194 - t196;
	t199 = t197 * pkin(23) + t91 - t92;
	t202 = -t187 * t189 * t191 - t197 * t199 * t191;
	t208 = t179 * t117 * t118 - t174 * t125 * t118;
	t211 = t189 * t191;
	t213 = t187 * t199 * t191 - t211 * t197;
	t215 = t182 * t202 + t208 * t213;
	t216 = t191 * t72;
	t217 = t108 * t216;
	t218 = t191 * t80;
	t219 = t114 * t218;
	t220 = t217 + t219;
	t224 = -t182 * t213 + t208 * t202;
	t225 = t114 * t216;
	t226 = t108 * t218;
	t227 = -t225 + t226;
	t229 = t215 * t220 + t224 * t227;
	t230 = -qJ(4) + qJ(3) - pkin(30);
	t231 = sin(t230);
	t232 = t231 * pkin(20);
	t233 = pkin(29) + qJ(3) - qJ(4);
	t234 = sin(t233);
	t235 = t234 * pkin(18);
	t236 = cos(t230);
	t237 = t236 * pkin(19);
	t238 = -t232 + t235 - t237;
	t239 = t231 * pkin(19);
	t240 = t236 * pkin(20);
	t241 = cos(t233);
	t242 = t241 * pkin(18);
	t243 = t239 - pkin(16) - t240 - t242;
	t244 = t243 ^ 2;
	t245 = t238 ^ 2;
	t246 = t244 + t245;
	t247 = sqrt(t246);
	t248 = 0.1e1 / t247;
	t249 = t238 * t248;
	t250 = t249 * t241;
	t251 = t243 * t248;
	t252 = t251 * t234;
	t253 = t250 + t252;
	t257 = -t215 * t227 + t224 * t220;
	t258 = t251 * t241;
	t259 = t249 * t234;
	t260 = t258 - t259;
	t265 = -t55 * t168 + t6 * t172;
	t270 = t6 * t168 + t55 * t172;
	t273 = t265 * t117 * t118 + t270 * t125 * t118;
	t279 = t270 * t117 * t118 - t265 * t125 * t118;
	t281 = t273 * t202 + t279 * t213;
	t285 = t279 * t202 - t273 * t213;
	t287 = t281 * t220 + t285 * t227;
	t291 = t285 * t220 - t281 * t227;
	t293 = -t291 * t253 + t287 * t260;
	t294 = 0.1e1 / t293;
	t298 = -t287 * t253 - t291 * t260;
	t299 = t298 ^ 2;
	t300 = t293 ^ 2;
	t301 = 0.1e1 / t300;
	t304 = 0.1e1 / (t299 * t301 + 0.1e1);
	t310 = t301 * t304;
	t319 = -t3 * t168 * t117 * t118 + t3 * t172 * t125 * t118;
	t327 = t3 * t172 * t117 * t118 + t3 * t168 * t125 * t118;
	t329 = t319 * t202 + t327 * t213;
	t333 = t327 * t202 - t319 * t213;
	t335 = t329 * t220 + t333 * t227;
	t339 = t333 * t220 - t329 * t227;
	t350 = -t91 - t92;
	t362 = -t70 + t73;
	t367 = 0.2e1 * t350 * t72 * pkin(18) + 0.2e1 * t362 * t80 * pkin(18) + 0.2e1 * t93 * t72 * pkin(18) - 0.2e1 * t74 * t80 * pkin(18) + 0.2e1 * t85 * t87 * t68 - 0.2e1 * t83 * t85 * t69;
	t370 = 0.1e1 / t104;
	t374 = 0.4e1 * t74 * t350 + 0.4e1 * t93 * t362;
	t378 = -0.2e1 * t96 * t367 + 0.2e1 * t75 * t374;
	t382 = (-t93 * t370 * t378 - 0.2e1 * t362 * t104 + 0.2e1 * t350 * t96 + 0.2e1 * t74 * t367) * t107;
	t383 = t100 ^ 2;
	t384 = 0.1e1 / t383;
	t385 = t106 * t384;
	t387 = -0.2e1 * t385 * t374 + t382 + t91 + t92;
	t396 = (t74 * t370 * t378 + 0.2e1 * t350 * t104 + 0.2e1 * t96 * t362 + 0.2e1 * t367 * t93) * t107;
	t397 = t113 * t384;
	t399 = -0.2e1 * t397 * t374 + t396 + t70 - t73;
	t401 = t68 * t387 - t85 * t399 - t123 - t124;
	t402 = t401 * t118;
	t403 = t402 * t121;
	t406 = t85 * t387 + t68 * t399 + t110 - t116;
	t407 = t406 * t118;
	t408 = t407 * t128;
	t409 = -t403 + t408;
	t413 = t407 * t121;
	t414 = t402 * t128;
	t415 = t413 + t414;
	t421 = 0.2e1 * t130 * t409 + 0.2e1 * t137 * t415;
	t424 = 0.1e1 / t150;
	t428 = 0.4e1 * t130 * t409 + 0.4e1 * t137 * t415;
	t432 = 0.2e1 * t131 * t428 - 0.2e1 * t142 * t421;
	t437 = t146 ^ 2;
	t438 = 0.1e1 / t437;
	t442 = (-t403 + t408 - (t137 * t424 * t432 + 0.2e1 * t130 * t421 + 0.2e1 * t409 * t142 + 0.2e1 * t415 * t150) * t153 + 0.2e1 * t152 * t438 * t428) * t156;
	t455 = (-t413 - t414 - (t130 * t424 * t432 - 0.2e1 * t421 * t137 - 0.2e1 * t142 * t415 + 0.2e1 * t409 * t150) * t153 + 0.2e1 * t162 * t438 * t428) * t156;
	t457 = -t442 * t158 + t455 * t166;
	t461 = t455 * t158 + t442 * t166;
	t463 = -t55 * t457 + t6 * t461;
	t470 = t6 * t457 + t55 * t461;
	t475 = t463 * t117 * t118 + t470 * t125 * t118 + t265 * t401 * t118 + t270 * t406 * t118;
	t481 = t68 * t401 * t118 + t85 * t406 * t118 - t194 + t196;
	t485 = t481 * pkin(23) - t91 - t92;
	t492 = t85 * t401 * t118 - t68 * t406 * t118 + t184 + t186;
	t496 = t492 * pkin(23) + t70 - t73;
	t499 = -t187 * t485 * t191 - t481 * t189 * t191 - t197 * t496 * t191 - t492 * t199 * t191;
	t509 = t470 * t117 * t118 - t463 * t125 * t118 - t265 * t406 * t118 + t270 * t401 * t118;
	t518 = t187 * t496 * t191 - t485 * t191 * t197 + t481 * t199 * t191 - t211 * t492;
	t520 = t475 * t202 + t509 * t213 + t273 * t499 + t279 * t518;
	t523 = 0.2e1 * t216 * t374;
	t526 = 0.2e1 * t218 * t374;
	t528 = t382 * t216 + t396 * t218 - t385 * t523 - t397 * t526 + t225 - t226;
	t534 = t509 * t202 - t475 * t213 - t273 * t518 + t279 * t499;
	t540 = -t396 * t216 + t382 * t218 - t385 * t526 + t397 * t523 + t217 + t219;
	t542 = t520 * t220 + t534 * t227 + t281 * t528 + t285 * t540;
	t544 = -t240 + t242 + t239;
	t545 = t544 * t248;
	t548 = 0.1e1 / t247 / t246;
	t549 = t238 * t548;
	t550 = t237 + t232 + t235;
	t553 = t238 * t544 + t243 * t550;
	t554 = 0.2e1 * t241 * t553;
	t557 = t550 * t248;
	t559 = t243 * t548;
	t560 = 0.2e1 * t234 * t553;
	t563 = t545 * t241 - t549 * t554 / 0.2e1 - t259 + t557 * t234 - t559 * t560 / 0.2e1 + t258;
	t569 = t534 * t220 - t520 * t227 - t281 * t540 + t285 * t528;
	t577 = t557 * t241 - t559 * t554 / 0.2e1 - t252 - t545 * t234 + t549 * t560 / 0.2e1 - t250;
	t590 = -t544 * t248;
	t594 = -t238 * t544 - t243 * t550;
	t595 = 0.2e1 * t241 * t594;
	t598 = -t550 * t248;
	t600 = 0.2e1 * t234 * t594;
	t603 = t590 * t241 - t549 * t595 / 0.2e1 + t259 + t598 * t234 - t559 * t600 / 0.2e1 - t258;
	t611 = t598 * t241 - t559 * t595 / 0.2e1 + t252 - t590 * t234 + t549 * t600 / 0.2e1 + t250;
	unknown(1,1) = t3 * t5 * t14;
	unknown(1,2) = t21;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = t22 * t38 - (t1 * t8 * t5 * t14 * t24 * t6 - t26 * t1 * t2 + t3 * t14 * t26) * t1 * t52;
	unknown(2,2) = -t55 * t38 - (t21 * t24 * t22 + t21 * t26 * t4 - t24 * t2 - t27 * t4) * t1 * t52;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = (-t229 * t253 - t257 * t260) * t294 * t304 - (t229 * t260 - t257 * t253) * t298 * t310;
	unknown(3,2) = (-t335 * t253 - t339 * t260) * t294 * t304 - (-t339 * t253 + t335 * t260) * t298 * t310;
	unknown(3,3) = (-t542 * t253 - t569 * t260 - t287 * t563 - t291 * t577) * t294 * t304 - (-t569 * t253 + t542 * t260 + t287 * t577 - t291 * t563) * t298 * t310;
	unknown(3,4) = (-t287 * t603 - t291 * t611) * t294 * t304 - (t287 * t611 - t291 * t603) * t298 * t310;
	unknown(3,5) = 0.0e0;
	Ja_rot = unknown;
end