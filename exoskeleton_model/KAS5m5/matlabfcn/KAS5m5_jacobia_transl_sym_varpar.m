% Analytische Jacobi-Matrix (Translatorisch) für beliebiges Segment von
% KAS5m5
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorposition und verallgemeinerten Koordinaten.
% (Ist für translatorischen Teil egal, kennzeichnet nur den Rechenweg der Herleitung)
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% link_index [1x1 uint8]
%   Index des Segmentes, auf dem der Punkt C liegt (0=Basis).
% r_i_i_C [3x1]
%   Ortsvektor vom KörperKS-Ursprung zum gesuchten Punkt
% pkin [30x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a10,a11,a12,a4,a5,a6,a9,d1,d2,d3,d7,d8,delta8s,delta9s,l11,l12,l13,l14,l17,l18,l20,l21,l22,l4,l5,l6,delta10s,delta12s,delta17s,delta18s]';
% 
% Output:
% Ja_transl [3x5]
%   Translatorischer Teil der analytischen Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-06-27 19:16
% Revision: bc59515823ab4a8d0fec19bf3bf92c32c39a66b0 (2020-06-27)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Ja_transl = KAS5m5_jacobia_transl_sym_varpar(qJ, link_index, r_i_i_C, ...
  pkin)


%% Coder Information
%#codegen
%$cgargs {zeros(5,1),uint8(0),zeros(3,1),zeros(30,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'KAS5m5_jacobia_transl_sym_varpar: qJ has to be [5x1] (double)');
assert(isa(r_i_i_C,'double') && isreal(r_i_i_C) && all(size(r_i_i_C) == [3 1]), ...
	'KAS5m5_jacobia_transl_sym_varpar: Position vector r_i_i_C has to be [3x1] double');
assert(isa(link_index,'uint8') && all(size(link_index) == [1 1]), ...
	'KAS5m5_jacobia_transl_sym_varpar: link_index has to be [1x1] uint8');
assert(isreal(pkin) && all(size(pkin) == [30 1]), ...
  'KAS5m5_jacobia_transl_sym_varpar: pkin has to be [30x1] (double)');
Ja_transl=NaN(3,5);
if link_index == 0
	%% Symbolic Calculation
	% From jacobia_transl_0_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:24
	% EndTime: 2020-06-27 18:29:24
	% DurationCPUTime: 0.03s
	% Computational Cost: add. (0->0), mult. (0->0), div. (0->0), fcn. (0->0), ass. (0->15)
	unknown=NaN(3,5);
	unknown(1,1) = 0;
	unknown(1,2) = 0;
	unknown(1,3) = 0;
	unknown(1,4) = 0;
	unknown(1,5) = 0;
	unknown(2,1) = 0;
	unknown(2,2) = 0;
	unknown(2,3) = 0;
	unknown(2,4) = 0;
	unknown(2,5) = 0;
	unknown(3,1) = 0;
	unknown(3,2) = 0;
	unknown(3,3) = 0;
	unknown(3,4) = 0;
	unknown(3,5) = 0;
	Ja_transl = unknown;
elseif link_index == 1
	%% Symbolic Calculation
	% From jacobia_transl_1_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:24
	% EndTime: 2020-06-27 18:29:24
	% DurationCPUTime: 0.04s
	% Computational Cost: add. (2->2), mult. (4->4), div. (0->0), fcn. (4->2), ass. (0->17)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t3 = sin(qJ(1));
	unknown(1,1) = t1 * r_i_i_C(1) - t3 * r_i_i_C(2);
	unknown(1,2) = 0.0e0;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = t3 * r_i_i_C(1) + t1 * r_i_i_C(2);
	unknown(2,2) = 0.0e0;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = 0.0e0;
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 2
	%% Symbolic Calculation
	% From jacobia_transl_2_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:24
	% EndTime: 2020-06-27 18:29:24
	% DurationCPUTime: 0.04s
	% Computational Cost: add. (9->9), mult. (22->18), div. (0->0), fcn. (22->4), ass. (0->23)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t5 = cos(qJ(2));
	t6 = t1 * t5;
	t8 = sin(qJ(1));
	t12 = t8 * t5;
	t14 = t8 * t2;
	unknown(1,1) = -t8 * pkin(9) - t3 * r_i_i_C(1) - t6 * r_i_i_C(2) - t8 * r_i_i_C(3);
	unknown(1,2) = -t12 * r_i_i_C(1) + t14 * r_i_i_C(2);
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = t1 * pkin(9) - t14 * r_i_i_C(1) - t12 * r_i_i_C(2) + t1 * r_i_i_C(3);
	unknown(2,2) = t6 * r_i_i_C(1) - t3 * r_i_i_C(2);
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = t2 * r_i_i_C(1) + t5 * r_i_i_C(2);
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 3
	%% Symbolic Calculation
	% From jacobia_transl_3_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:24
	% EndTime: 2020-06-27 18:31:16
	% DurationCPUTime: 16.46s
	% Computational Cost: add. (1072930->120), mult. (1404416->240), div. (16548->8), fcn. (561560->16), ass. (0->120)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t45 = t42 * t43 + pkin(15) - t6 - t9;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t51 = t49 * t43 + t27 - t28;
	t52 = t21 * t51;
	t54 = 0.1e1 / pkin(23);
	t55 = (t46 - t52) * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t62 = (t59 + t60) * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t117 = cos(qJ(2));
	t118 = t1 * t117;
	t123 = t106 * t117;
	t124 = t104 * r_i_i_C(1);
	t126 = -t109 * r_i_i_C(2);
	t128 = t106 * t2;
	t132 = -t27 - t28;
	t144 = -t6 + t9;
	t149 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t132 * t8 * pkin(18) + 0.2e1 * t144 * t16 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t152 = 0.1e1 / t40;
	t156 = 0.4e1 * t10 * t132 + 0.4e1 * t29 * t144;
	t160 = 0.2e1 * t11 * t156 - 0.2e1 * t32 * t149;
	t165 = t36 ^ 2;
	t166 = 0.1e1 / t165;
	t169 = t27 + t28 + (-t29 * t152 * t160 + 0.2e1 * t10 * t149 + 0.2e1 * t132 * t32 - 0.2e1 * t144 * t40) * t43 - 0.2e1 * t42 * t166 * t156;
	t181 = t6 - t9 + (t10 * t152 * t160 + 0.2e1 * t132 * t40 + 0.2e1 * t32 * t144 + 0.2e1 * t149 * t29) * t43 - 0.2e1 * t49 * t166 * t156;
	t184 = (t4 * t169 - t21 * t181 - t59 - t60) * t54;
	t185 = t184 * t57;
	t189 = (t21 * t169 + t4 * t181 + t46 - t52) * t54;
	t190 = t189 * t64;
	t191 = -t185 + t190;
	t195 = t189 * t57;
	t196 = t184 * t64;
	t197 = t195 + t196;
	t203 = 0.2e1 * t66 * t191 + 0.2e1 * t73 * t197;
	t206 = 0.1e1 / t86;
	t210 = 0.4e1 * t66 * t191 + 0.4e1 * t73 * t197;
	t214 = -0.2e1 * t78 * t203 + 0.2e1 * t67 * t210;
	t219 = t82 ^ 2;
	t220 = 0.1e1 / t219;
	t224 = (-t185 + t190 - (t73 * t206 * t214 + 0.2e1 * t191 * t78 + 0.2e1 * t197 * t86 + 0.2e1 * t66 * t203) * t89 + 0.2e1 * t88 * t220 * t210) * t92;
	t237 = (-t195 - t196 - (t66 * t206 * t214 + 0.2e1 * t191 * t86 - 0.2e1 * t78 * t197 - 0.2e1 * t203 * t73) * t89 + 0.2e1 * t98 * t220 * t210) * t92;
	t239 = t237 * t102 - t224 * t94;
	t243 = t224 * t102 + t237 * t94;
	unknown(1,1) = (-t3 * t104 - t106 * t109) * r_i_i_C(1) + (-t106 * t104 + t3 * t109) * r_i_i_C(2) + t118 * r_i_i_C(3) + t118 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = -t128 * pkin(10) - t128 * r_i_i_C(3) - t123 * t124 - t123 * t126;
	unknown(1,3) = (t1 * t243 - t128 * t239) * r_i_i_C(1) + (t1 * t239 + t128 * t243) * r_i_i_C(2);
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = (t1 * t109 - t128 * t104) * r_i_i_C(1) + (t1 * t104 + t128 * t109) * r_i_i_C(2) + t123 * r_i_i_C(3) + t123 * pkin(10) + t1 * pkin(9);
	unknown(2,2) = t3 * pkin(10) + t3 * r_i_i_C(3) + t118 * t124 + t118 * t126;
	unknown(2,3) = (t106 * t243 + t3 * t239) * r_i_i_C(1) + (t106 * t239 - t3 * t243) * r_i_i_C(2);
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = t2 * t104 * r_i_i_C(1) - t2 * t109 * r_i_i_C(2) - t117 * pkin(10) - t117 * r_i_i_C(3);
	unknown(3,3) = -t117 * t239 * r_i_i_C(1) + t117 * t243 * r_i_i_C(2);
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 4
	%% Symbolic Calculation
	% From jacobia_transl_4_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:25
	% EndTime: 2020-06-27 18:34:12
	% DurationCPUTime: 43.44s
	% Computational Cost: add. (2902899->160), mult. (3795786->293), div. (46010->8), fcn. (1518062->16), ass. (0->141)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t45 = t42 * t43 + pkin(15) - t6 - t9;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t51 = t49 * t43 + t27 - t28;
	t52 = t21 * t51;
	t54 = 0.1e1 / pkin(23);
	t55 = (t46 - t52) * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t62 = (t59 + t60) * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 - t106 * t109;
	t115 = -t106 * t104 + t3 * t109;
	t123 = cos(qJ(2));
	t124 = t1 * t123;
	t130 = t106 * t123;
	t131 = t104 * t4;
	t133 = -t109 * t21;
	t137 = t104 * t21;
	t139 = -t109 * t4;
	t143 = t106 * t2;
	t145 = t104 * pkin(4);
	t149 = -t27 - t28;
	t161 = -t6 + t9;
	t166 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t149 * t8 * pkin(18) + 0.2e1 * t161 * t16 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t169 = 0.1e1 / t40;
	t173 = 0.4e1 * t10 * t149 + 0.4e1 * t29 * t161;
	t177 = 0.2e1 * t11 * t173 - 0.2e1 * t32 * t166;
	t182 = t36 ^ 2;
	t183 = 0.1e1 / t182;
	t186 = t27 + t28 + (-t29 * t169 * t177 + 0.2e1 * t10 * t166 + 0.2e1 * t149 * t32 - 0.2e1 * t161 * t40) * t43 - 0.2e1 * t42 * t183 * t173;
	t198 = t6 - t9 + (t10 * t169 * t177 + 0.2e1 * t149 * t40 + 0.2e1 * t32 * t161 + 0.2e1 * t166 * t29) * t43 - 0.2e1 * t49 * t183 * t173;
	t201 = (t4 * t186 - t21 * t198 - t59 - t60) * t54;
	t202 = t201 * t57;
	t206 = (t21 * t186 + t4 * t198 + t46 - t52) * t54;
	t207 = t206 * t64;
	t208 = -t202 + t207;
	t212 = t206 * t57;
	t213 = t201 * t64;
	t214 = t212 + t213;
	t220 = 0.2e1 * t66 * t208 + 0.2e1 * t73 * t214;
	t223 = 0.1e1 / t86;
	t227 = 0.4e1 * t66 * t208 + 0.4e1 * t73 * t214;
	t231 = -0.2e1 * t78 * t220 + 0.2e1 * t67 * t227;
	t236 = t82 ^ 2;
	t237 = 0.1e1 / t236;
	t241 = (-t202 + t207 - (t73 * t223 * t231 + 0.2e1 * t208 * t78 + 0.2e1 * t214 * t86 + 0.2e1 * t66 * t220) * t89 + 0.2e1 * t88 * t237 * t227) * t92;
	t254 = (-t212 - t213 - (t66 * t223 * t231 + 0.2e1 * t208 * t86 - 0.2e1 * t78 * t214 - 0.2e1 * t220 * t73) * t89 + 0.2e1 * t98 * t237 * t227) * t92;
	t256 = t254 * t102 - t241 * t94;
	t260 = t241 * t102 + t254 * t94;
	t262 = t1 * t260 - t143 * t256;
	t266 = t1 * t109 - t143 * t104;
	t267 = t266 * t21;
	t270 = t1 * t256 + t143 * t260;
	t274 = t1 * t104 + t143 * t109;
	t275 = t274 * t4;
	t279 = t266 * t4;
	t281 = t274 * t21;
	t309 = t106 * t260 + t3 * t256;
	t314 = t106 * t256 - t3 * t260;
	t327 = t2 * t104;
	t329 = -t2 * t109;
	t341 = t123 * t256;
	t343 = t123 * t104;
	t345 = -t123 * t260;
	t347 = -t123 * t109;
	unknown(1,1) = (t111 * t4 + t115 * t21) * r_i_i_C(1) + (-t111 * t21 + t115 * t4) * r_i_i_C(2) + t124 * r_i_i_C(3) + t111 * pkin(4) + t124 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (-t130 * t131 - t130 * t133) * r_i_i_C(1) + (t130 * t137 - t130 * t139) * r_i_i_C(2) - t143 * r_i_i_C(3) - t130 * t145 - t143 * pkin(10);
	unknown(1,3) = (t270 * t21 + t262 * t4 - t267 + t275) * r_i_i_C(1) + (-t262 * t21 + t270 * t4 - t279 - t281) * r_i_i_C(2) + t262 * pkin(4);
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = (t279 + t281) * r_i_i_C(1) + (-t267 + t275) * r_i_i_C(2) + t130 * r_i_i_C(3) + t266 * pkin(4) + t130 * pkin(10) + t1 * pkin(9);
	unknown(2,2) = (t124 * t131 + t124 * t133) * r_i_i_C(1) + (-t124 * t137 + t124 * t139) * r_i_i_C(2) + t3 * r_i_i_C(3) + t124 * t145 + t3 * pkin(10);
	unknown(2,3) = (t111 * t21 - t115 * t4 + t314 * t21 + t309 * t4) * r_i_i_C(1) + (t111 * t4 + t115 * t21 - t309 * t21 + t314 * t4) * r_i_i_C(2) + t309 * pkin(4);
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (t329 * t21 + t327 * t4) * r_i_i_C(1) + (-t327 * t21 + t329 * t4) * r_i_i_C(2) - t123 * r_i_i_C(3) + t327 * pkin(4) - t123 * pkin(10);
	unknown(3,3) = (t343 * t21 - t345 * t21 - t341 * t4 - t347 * t4) * r_i_i_C(1) + (t341 * t21 + t347 * t21 + t343 * t4 - t345 * t4) * r_i_i_C(2) - t341 * pkin(4);
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 5
	%% Symbolic Calculation
	% From jacobia_transl_5_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:26
	% EndTime: 2020-06-27 18:39:52
	% DurationCPUTime: 103.04s
	% Computational Cost: add. (6893704->199), mult. (9005692->347), div. (111894->8), fcn. (3602334->18), ass. (0->173)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t45 = t42 * t43 + pkin(15) - t6 - t9;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t51 = t49 * t43 + t27 - t28;
	t52 = t21 * t51;
	t54 = 0.1e1 / pkin(23);
	t55 = (t46 - t52) * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t62 = (t59 + t60) * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 - t106 * t109;
	t115 = -t106 * t104 + t3 * t109;
	t117 = t111 * t4 + t115 * t21;
	t118 = cos(qJ(4));
	t122 = -t111 * t21 + t115 * t4;
	t123 = sin(qJ(4));
	t131 = cos(qJ(2));
	t132 = t1 * t131;
	t139 = t106 * t131;
	t140 = t104 * t4;
	t142 = -t109 * t21;
	t144 = -t139 * t140 - t139 * t142;
	t146 = t104 * t21;
	t148 = -t109 * t4;
	t150 = t139 * t146 - t139 * t148;
	t158 = t106 * t2;
	t161 = t104 * pkin(4);
	t165 = -t27 - t28;
	t177 = -t6 + t9;
	t182 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t177 * t16 * pkin(18) + 0.2e1 * t165 * t8 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t185 = 0.1e1 / t40;
	t189 = 0.4e1 * t10 * t165 + 0.4e1 * t29 * t177;
	t193 = 0.2e1 * t11 * t189 - 0.2e1 * t32 * t182;
	t198 = t36 ^ 2;
	t199 = 0.1e1 / t198;
	t202 = t27 + t28 + (-t29 * t185 * t193 + 0.2e1 * t10 * t182 + 0.2e1 * t165 * t32 - 0.2e1 * t177 * t40) * t43 - 0.2e1 * t42 * t199 * t189;
	t214 = t6 - t9 + (t10 * t185 * t193 + 0.2e1 * t165 * t40 + 0.2e1 * t32 * t177 + 0.2e1 * t182 * t29) * t43 - 0.2e1 * t49 * t199 * t189;
	t217 = (t4 * t202 - t21 * t214 - t59 - t60) * t54;
	t218 = t217 * t57;
	t222 = (t21 * t202 + t4 * t214 + t46 - t52) * t54;
	t223 = t222 * t64;
	t224 = -t218 + t223;
	t228 = t222 * t57;
	t229 = t217 * t64;
	t230 = t228 + t229;
	t236 = 0.2e1 * t66 * t224 + 0.2e1 * t73 * t230;
	t239 = 0.1e1 / t86;
	t243 = 0.4e1 * t66 * t224 + 0.4e1 * t73 * t230;
	t247 = -0.2e1 * t78 * t236 + 0.2e1 * t67 * t243;
	t252 = t82 ^ 2;
	t253 = 0.1e1 / t252;
	t257 = (-t218 + t223 - (t73 * t239 * t247 + 0.2e1 * t224 * t78 + 0.2e1 * t230 * t86 + 0.2e1 * t66 * t236) * t89 + 0.2e1 * t88 * t253 * t243) * t92;
	t270 = (-t228 - t229 - (t66 * t239 * t247 + 0.2e1 * t224 * t86 - 0.2e1 * t78 * t230 - 0.2e1 * t236 * t73) * t89 + 0.2e1 * t98 * t253 * t243) * t92;
	t272 = t270 * t102 - t257 * t94;
	t276 = t257 * t102 + t270 * t94;
	t278 = t1 * t276 - t158 * t272;
	t282 = t1 * t109 - t158 * t104;
	t283 = t282 * t21;
	t286 = t1 * t272 + t158 * t276;
	t290 = t1 * t104 + t158 * t109;
	t291 = t290 * t4;
	t292 = t286 * t21 + t278 * t4 - t283 + t291;
	t295 = t282 * t4;
	t297 = t290 * t21;
	t298 = -t278 * t21 + t286 * t4 - t295 - t297;
	t309 = t295 + t297;
	t311 = -t283 + t291;
	t313 = t311 * t118 - t309 * t123;
	t317 = -t309 * t118 - t311 * t123;
	t330 = t132 * t140 + t132 * t142;
	t334 = -t132 * t146 + t132 * t148;
	t349 = t106 * t276 + t3 * t272;
	t351 = -t111 * t21;
	t354 = t106 * t272 - t3 * t276;
	t356 = -t115 * t4;
	t357 = t354 * t21 + t349 * t4 - t351 + t356;
	t360 = -t111 * t4;
	t362 = -t115 * t21;
	t363 = -t349 * t21 + t354 * t4 - t360 - t362;
	t374 = t360 + t362;
	t376 = -t351 + t356;
	t385 = t2 * t104;
	t387 = -t2 * t109;
	t389 = t387 * t21 + t385 * t4;
	t393 = -t385 * t21 + t387 * t4;
	t406 = t131 * t272;
	t408 = t131 * t104;
	t409 = t408 * t21;
	t410 = -t131 * t276;
	t412 = -t131 * t109;
	t413 = t412 * t4;
	t414 = -t410 * t21 - t406 * t4 + t409 - t413;
	t417 = t408 * t4;
	t419 = t412 * t21;
	t420 = t406 * t21 - t410 * t4 + t417 + t419;
	t431 = -t417 - t419;
	t433 = t409 - t413;
	unknown(1,1) = (t117 * t118 + t122 * t123) * r_i_i_C(1) + (-t117 * t123 + t122 * t118) * r_i_i_C(2) + t132 * r_i_i_C(3) + t117 * pkin(5) + t111 * pkin(4) + t132 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (t144 * t118 + t150 * t123) * r_i_i_C(1) + (t150 * t118 - t144 * t123) * r_i_i_C(2) - t158 * r_i_i_C(3) + t144 * pkin(5) - t139 * t161 - t158 * pkin(10);
	unknown(1,3) = (t292 * t118 + t298 * t123) * r_i_i_C(1) + (t298 * t118 - t292 * t123) * r_i_i_C(2) + t292 * pkin(5) + t278 * pkin(4);
	unknown(1,4) = t313 * r_i_i_C(1) + t317 * r_i_i_C(2);
	unknown(1,5) = 0.0e0;
	unknown(2,1) = t282 * pkin(4) + t309 * pkin(5) + t1 * pkin(9) + t139 * pkin(10) - t317 * r_i_i_C(1) + t313 * r_i_i_C(2) + t139 * r_i_i_C(3);
	unknown(2,2) = (t330 * t118 + t334 * t123) * r_i_i_C(1) + (t334 * t118 - t330 * t123) * r_i_i_C(2) + t3 * r_i_i_C(3) + t330 * pkin(5) + t132 * t161 + t3 * pkin(10);
	unknown(2,3) = (t357 * t118 + t363 * t123) * r_i_i_C(1) + (t363 * t118 - t357 * t123) * r_i_i_C(2) + t357 * pkin(5) + t349 * pkin(4);
	unknown(2,4) = (t376 * t118 - t374 * t123) * r_i_i_C(1) + (-t374 * t118 - t376 * t123) * r_i_i_C(2);
	unknown(2,5) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (t389 * t118 + t393 * t123) * r_i_i_C(1) + (t393 * t118 - t389 * t123) * r_i_i_C(2) - t131 * r_i_i_C(3) + t389 * pkin(5) + t385 * pkin(4) - t131 * pkin(10);
	unknown(3,3) = (t414 * t118 + t420 * t123) * r_i_i_C(1) + (t420 * t118 - t414 * t123) * r_i_i_C(2) + t414 * pkin(5) - t406 * pkin(4);
	unknown(3,4) = (t433 * t118 - t431 * t123) * r_i_i_C(1) + (-t431 * t118 - t433 * t123) * r_i_i_C(2);
	unknown(3,5) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 6
	%% Symbolic Calculation
	% From jacobia_transl_6_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:28
	% EndTime: 2020-06-27 18:49:24
	% DurationCPUTime: 238.41s
	% Computational Cost: add. (15978344->252), mult. (20849369->410), div. (266862->8), fcn. (8341754->20), ass. (0->206)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t45 = t42 * t43 + pkin(15) - t6 - t9;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t51 = t49 * t43 + t27 - t28;
	t52 = t21 * t51;
	t54 = 0.1e1 / pkin(23);
	t55 = (t46 - t52) * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t62 = (t59 + t60) * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 - t106 * t109;
	t115 = -t106 * t104 + t3 * t109;
	t117 = t111 * t4 + t115 * t21;
	t118 = cos(qJ(4));
	t122 = -t111 * t21 + t115 * t4;
	t123 = sin(qJ(4));
	t125 = t117 * t118 + t122 * t123;
	t126 = -qJ(4) + qJ(3) - pkin(30);
	t127 = sin(t126);
	t131 = -t117 * t123 + t122 * t118;
	t132 = cos(t126);
	t140 = cos(qJ(2));
	t141 = t1 * t140;
	t149 = t106 * t140;
	t150 = t104 * t4;
	t152 = -t109 * t21;
	t154 = -t149 * t150 - t149 * t152;
	t156 = t104 * t21;
	t158 = -t109 * t4;
	t160 = t149 * t156 - t149 * t158;
	t162 = t154 * t118 + t160 * t123;
	t166 = t160 * t118 - t154 * t123;
	t174 = t106 * t2;
	t178 = t104 * pkin(4);
	t182 = -t27 - t28;
	t194 = -t6 + t9;
	t199 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t194 * t16 * pkin(18) + 0.2e1 * t182 * t8 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t202 = 0.1e1 / t40;
	t206 = 0.4e1 * t10 * t182 + 0.4e1 * t29 * t194;
	t210 = 0.2e1 * t11 * t206 - 0.2e1 * t32 * t199;
	t215 = t36 ^ 2;
	t216 = 0.1e1 / t215;
	t219 = t27 + t28 + (-t29 * t202 * t210 + 0.2e1 * t10 * t199 + 0.2e1 * t182 * t32 - 0.2e1 * t194 * t40) * t43 - 0.2e1 * t42 * t216 * t206;
	t231 = t6 - t9 + (t10 * t202 * t210 + 0.2e1 * t182 * t40 + 0.2e1 * t32 * t194 + 0.2e1 * t199 * t29) * t43 - 0.2e1 * t49 * t216 * t206;
	t234 = (-t21 * t231 + t4 * t219 - t59 - t60) * t54;
	t235 = t234 * t57;
	t239 = (t21 * t219 + t4 * t231 + t46 - t52) * t54;
	t240 = t239 * t64;
	t241 = -t235 + t240;
	t245 = t239 * t57;
	t246 = t234 * t64;
	t247 = t245 + t246;
	t253 = 0.2e1 * t66 * t241 + 0.2e1 * t73 * t247;
	t256 = 0.1e1 / t86;
	t260 = 0.4e1 * t66 * t241 + 0.4e1 * t73 * t247;
	t264 = -0.2e1 * t78 * t253 + 0.2e1 * t67 * t260;
	t269 = t82 ^ 2;
	t270 = 0.1e1 / t269;
	t274 = (-t235 + t240 - (t73 * t256 * t264 + 0.2e1 * t241 * t78 + 0.2e1 * t247 * t86 + 0.2e1 * t66 * t253) * t89 + 0.2e1 * t88 * t270 * t260) * t92;
	t287 = (-t245 - t246 - (t66 * t256 * t264 + 0.2e1 * t241 * t86 - 0.2e1 * t78 * t247 - 0.2e1 * t253 * t73) * t89 + 0.2e1 * t98 * t270 * t260) * t92;
	t289 = t287 * t102 - t274 * t94;
	t293 = t274 * t102 + t287 * t94;
	t295 = t1 * t293 - t174 * t289;
	t299 = t1 * t109 - t174 * t104;
	t300 = t299 * t21;
	t303 = t1 * t289 + t174 * t293;
	t307 = t1 * t104 + t174 * t109;
	t308 = t307 * t4;
	t309 = t303 * t21 + t295 * t4 - t300 + t308;
	t312 = t299 * t4;
	t314 = t307 * t21;
	t315 = -t295 * t21 + t303 * t4 - t312 - t314;
	t317 = t309 * t118 + t315 * t123;
	t319 = t312 + t314;
	t321 = -t300 + t308;
	t323 = t319 * t118 + t321 * t123;
	t324 = t323 * t132;
	t327 = t315 * t118 - t309 * t123;
	t331 = t321 * t118 - t319 * t123;
	t332 = t331 * t127;
	t336 = t323 * t127;
	t338 = t331 * t132;
	t368 = t141 * t150 + t141 * t152;
	t372 = -t141 * t156 + t141 * t158;
	t374 = t368 * t118 + t372 * t123;
	t378 = t372 * t118 - t368 * t123;
	t394 = t106 * t293 + t3 * t289;
	t396 = -t111 * t21;
	t399 = t106 * t289 - t3 * t293;
	t401 = -t115 * t4;
	t402 = t399 * t21 + t394 * t4 - t396 + t401;
	t405 = -t111 * t4;
	t407 = -t115 * t21;
	t408 = -t394 * t21 + t399 * t4 - t405 - t407;
	t410 = t402 * t118 + t408 * t123;
	t412 = t405 + t407;
	t414 = -t396 + t401;
	t416 = t412 * t118 + t414 * t123;
	t417 = t416 * t132;
	t420 = t408 * t118 - t402 * t123;
	t424 = t414 * t118 - t412 * t123;
	t425 = t424 * t127;
	t429 = t416 * t127;
	t431 = t424 * t132;
	t448 = t2 * t104;
	t450 = -t2 * t109;
	t452 = t450 * t21 + t448 * t4;
	t456 = -t448 * t21 + t450 * t4;
	t458 = t452 * t118 + t456 * t123;
	t462 = t456 * t118 - t452 * t123;
	t476 = t140 * t289;
	t478 = t140 * t104;
	t479 = t478 * t21;
	t480 = -t140 * t293;
	t482 = -t140 * t109;
	t483 = t482 * t4;
	t484 = -t480 * t21 - t476 * t4 + t479 - t483;
	t487 = t478 * t4;
	t489 = t482 * t21;
	t490 = t476 * t21 - t480 * t4 + t487 + t489;
	t492 = t484 * t118 + t490 * t123;
	t494 = -t487 - t489;
	t496 = t479 - t483;
	t498 = t494 * t118 + t496 * t123;
	t499 = t498 * t132;
	t502 = t490 * t118 - t484 * t123;
	t506 = t496 * t118 - t494 * t123;
	t507 = t506 * t127;
	t511 = t498 * t127;
	t513 = t506 * t132;
	unknown(1,1) = (t125 * t127 + t131 * t132) * r_i_i_C(1) + (-t125 * t132 + t131 * t127) * r_i_i_C(2) + t141 * r_i_i_C(3) + t125 * pkin(6) + t117 * pkin(5) + t111 * pkin(4) + t141 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (t162 * t127 + t166 * t132) * r_i_i_C(1) + (t166 * t127 - t162 * t132) * r_i_i_C(2) - t174 * r_i_i_C(3) + t162 * pkin(6) + t154 * pkin(5) - t149 * t178 - t174 * pkin(10);
	unknown(1,3) = (t317 * t127 + t327 * t132 + t324 - t332) * r_i_i_C(1) + (t327 * t127 - t317 * t132 + t336 + t338) * r_i_i_C(2) + t317 * pkin(6) + t309 * pkin(5) + t295 * pkin(4);
	unknown(1,4) = (-t323 * t132 - t324 + 0.2e1 * t332) * r_i_i_C(1) + (-t323 * t127 - t336 - 0.2e1 * t338) * r_i_i_C(2) + t331 * pkin(6);
	unknown(1,5) = 0.0e0;
	unknown(2,1) = (t336 + t338) * r_i_i_C(1) + (-t324 + t332) * r_i_i_C(2) + t149 * r_i_i_C(3) + t323 * pkin(6) + t319 * pkin(5) + t299 * pkin(4) + t149 * pkin(10) + t1 * pkin(9);
	unknown(2,2) = (t374 * t127 + t378 * t132) * r_i_i_C(1) + (t378 * t127 - t374 * t132) * r_i_i_C(2) + t3 * r_i_i_C(3) + t374 * pkin(6) + t368 * pkin(5) + t141 * t178 + t3 * pkin(10);
	unknown(2,3) = (t410 * t127 + t420 * t132 + t417 - t425) * r_i_i_C(1) + (t420 * t127 - t410 * t132 + t429 + t431) * r_i_i_C(2) + t410 * pkin(6) + t402 * pkin(5) + t394 * pkin(4);
	unknown(2,4) = (-t416 * t132 - t417 + 0.2e1 * t425) * r_i_i_C(1) + (-t416 * t127 - t429 - 0.2e1 * t431) * r_i_i_C(2) + t424 * pkin(6);
	unknown(2,5) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (t458 * t127 + t462 * t132) * r_i_i_C(1) + (t462 * t127 - t458 * t132) * r_i_i_C(2) - t140 * r_i_i_C(3) + t458 * pkin(6) + t452 * pkin(5) + t448 * pkin(4) - t140 * pkin(10);
	unknown(3,3) = (t492 * t127 + t502 * t132 + t499 - t507) * r_i_i_C(1) + (t502 * t127 - t492 * t132 + t511 + t513) * r_i_i_C(2) + t492 * pkin(6) + t484 * pkin(5) - t476 * pkin(4);
	unknown(3,4) = (-t498 * t132 - t499 + 0.2e1 * t507) * r_i_i_C(1) + (-t498 * t127 - t511 - 0.2e1 * t513) * r_i_i_C(2) + t506 * pkin(6);
	unknown(3,5) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 7
	%% Symbolic Calculation
	% From jacobia_transl_7_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:30
	% EndTime: 2020-06-27 18:58:19
	% DurationCPUTime: 425.05s
	% Computational Cost: add. (28532348->288), mult. (37210520->471), div. (482766->8), fcn. (14889367->22), ass. (0->236)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t45 = t42 * t43 + pkin(15) - t6 - t9;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t51 = t49 * t43 + t27 - t28;
	t52 = t21 * t51;
	t54 = 0.1e1 / pkin(23);
	t55 = (t46 - t52) * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t62 = (t59 + t60) * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 - t106 * t109;
	t115 = -t106 * t104 + t3 * t109;
	t117 = t111 * t4 + t115 * t21;
	t118 = cos(qJ(4));
	t122 = -t111 * t21 + t115 * t4;
	t123 = sin(qJ(4));
	t125 = t117 * t118 + t122 * t123;
	t126 = -qJ(4) + qJ(3) - pkin(30);
	t127 = sin(t126);
	t131 = -t117 * t123 + t122 * t118;
	t132 = cos(t126);
	t134 = t125 * t127 + t131 * t132;
	t135 = cos(qJ(5));
	t137 = cos(qJ(2));
	t138 = t1 * t137;
	t139 = sin(qJ(5));
	t140 = t138 * t139;
	t144 = t138 * t135;
	t149 = t125 * t132 - t131 * t127;
	t158 = t106 * t137;
	t159 = t104 * t4;
	t161 = -t109 * t21;
	t163 = -t158 * t159 - t158 * t161;
	t165 = t104 * t21;
	t167 = -t109 * t4;
	t169 = t158 * t165 - t158 * t167;
	t171 = t163 * t118 + t169 * t123;
	t175 = t169 * t118 - t163 * t123;
	t177 = t171 * t127 + t175 * t132;
	t179 = t106 * t2;
	t189 = -t175 * t127 + t171 * t132;
	t194 = t104 * pkin(4);
	t198 = -t27 - t28;
	t210 = -t6 + t9;
	t215 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t210 * t16 * pkin(18) + 0.2e1 * t198 * t8 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t218 = 0.1e1 / t40;
	t222 = 0.4e1 * t10 * t198 + 0.4e1 * t29 * t210;
	t226 = 0.2e1 * t11 * t222 - 0.2e1 * t32 * t215;
	t231 = t36 ^ 2;
	t232 = 0.1e1 / t231;
	t235 = t27 + t28 + (-t29 * t218 * t226 + 0.2e1 * t10 * t215 + 0.2e1 * t198 * t32 - 0.2e1 * t210 * t40) * t43 - 0.2e1 * t42 * t232 * t222;
	t247 = t6 - t9 + (t10 * t218 * t226 + 0.2e1 * t198 * t40 + 0.2e1 * t32 * t210 + 0.2e1 * t215 * t29) * t43 - 0.2e1 * t49 * t232 * t222;
	t250 = (-t21 * t247 + t4 * t235 - t59 - t60) * t54;
	t251 = t250 * t57;
	t255 = (t21 * t235 + t4 * t247 + t46 - t52) * t54;
	t256 = t255 * t64;
	t257 = -t251 + t256;
	t261 = t255 * t57;
	t262 = t250 * t64;
	t263 = t261 + t262;
	t269 = 0.2e1 * t66 * t257 + 0.2e1 * t73 * t263;
	t272 = 0.1e1 / t86;
	t276 = 0.4e1 * t66 * t257 + 0.4e1 * t73 * t263;
	t280 = -0.2e1 * t78 * t269 + 0.2e1 * t67 * t276;
	t285 = t82 ^ 2;
	t286 = 0.1e1 / t285;
	t290 = (-t251 + t256 - (t73 * t272 * t280 + 0.2e1 * t257 * t78 + 0.2e1 * t263 * t86 + 0.2e1 * t66 * t269) * t89 + 0.2e1 * t88 * t286 * t276) * t92;
	t303 = (-t261 - t262 - (t66 * t272 * t280 + 0.2e1 * t257 * t86 - 0.2e1 * t78 * t263 - 0.2e1 * t269 * t73) * t89 + 0.2e1 * t98 * t286 * t276) * t92;
	t305 = t303 * t102 - t290 * t94;
	t309 = t290 * t102 + t303 * t94;
	t311 = t1 * t309 - t179 * t305;
	t315 = t1 * t109 - t179 * t104;
	t316 = t315 * t21;
	t319 = t1 * t305 + t179 * t309;
	t323 = t1 * t104 + t179 * t109;
	t324 = t323 * t4;
	t325 = t319 * t21 + t311 * t4 - t316 + t324;
	t328 = t315 * t4;
	t330 = t323 * t21;
	t331 = -t311 * t21 + t319 * t4 - t328 - t330;
	t333 = t325 * t118 + t331 * t123;
	t335 = t328 + t330;
	t337 = -t316 + t324;
	t339 = t335 * t118 + t337 * t123;
	t340 = t339 * t132;
	t343 = t331 * t118 - t325 * t123;
	t347 = t337 * t118 - t335 * t123;
	t348 = t347 * t127;
	t349 = t333 * t127 + t343 * t132 + t340 - t348;
	t355 = t339 * t127;
	t357 = t347 * t132;
	t358 = -t343 * t127 + t333 * t132 - t355 - t357;
	t367 = -t339 * t132 - t340 + 0.2e1 * t348;
	t374 = t339 * t127 + t355 + 0.2e1 * t357;
	t379 = t355 + t357;
	t382 = t158 * t135 - t379 * t139;
	t386 = -t379 * t135 - t158 * t139;
	t391 = t340 - t348;
	t402 = t138 * t159 + t138 * t161;
	t406 = -t138 * t165 + t138 * t167;
	t408 = t402 * t118 + t406 * t123;
	t412 = t406 * t118 - t402 * t123;
	t414 = t408 * t127 + t412 * t132;
	t425 = -t412 * t127 + t408 * t132;
	t435 = t106 * t309 + t3 * t305;
	t437 = -t111 * t21;
	t440 = t106 * t305 - t3 * t309;
	t442 = -t115 * t4;
	t443 = t440 * t21 + t435 * t4 - t437 + t442;
	t446 = -t111 * t4;
	t448 = -t115 * t21;
	t449 = -t435 * t21 + t440 * t4 - t446 - t448;
	t451 = t443 * t118 + t449 * t123;
	t453 = t446 + t448;
	t455 = -t437 + t442;
	t457 = t453 * t118 + t455 * t123;
	t458 = t457 * t132;
	t461 = t449 * t118 - t443 * t123;
	t465 = t455 * t118 - t453 * t123;
	t466 = t465 * t127;
	t467 = t451 * t127 + t461 * t132 + t458 - t466;
	t473 = t457 * t127;
	t475 = t465 * t132;
	t476 = -t461 * t127 + t451 * t132 - t473 - t475;
	t485 = -t457 * t132 - t458 + 0.2e1 * t466;
	t492 = t457 * t127 + t473 + 0.2e1 * t475;
	t497 = t473 + t475;
	t505 = t2 * t104;
	t507 = -t2 * t109;
	t509 = t507 * t21 + t505 * t4;
	t513 = -t505 * t21 + t507 * t4;
	t515 = t509 * t118 + t513 * t123;
	t519 = t513 * t118 - t509 * t123;
	t521 = t515 * t127 + t519 * t132;
	t532 = -t519 * t127 + t515 * t132;
	t540 = t137 * t305;
	t542 = t137 * t104;
	t543 = t542 * t21;
	t544 = -t137 * t309;
	t546 = -t137 * t109;
	t547 = t546 * t4;
	t548 = -t544 * t21 - t540 * t4 + t543 - t547;
	t551 = t542 * t4;
	t553 = t546 * t21;
	t554 = t540 * t21 - t544 * t4 + t551 + t553;
	t556 = t548 * t118 + t554 * t123;
	t558 = -t551 - t553;
	t560 = t543 - t547;
	t562 = t558 * t118 + t560 * t123;
	t563 = t562 * t132;
	t566 = t554 * t118 - t548 * t123;
	t570 = t560 * t118 - t558 * t123;
	t571 = t570 * t127;
	t572 = t556 * t127 + t566 * t132 + t563 - t571;
	t578 = t562 * t127;
	t580 = t570 * t132;
	t581 = -t566 * t127 + t556 * t132 - t578 - t580;
	t590 = -t562 * t132 - t563 + 0.2e1 * t571;
	t597 = t562 * t127 + t578 + 0.2e1 * t580;
	t602 = t578 + t580;
	unknown(1,1) = (t134 * t135 + t140) * r_i_i_C(1) + (-t134 * t139 + t144) * r_i_i_C(2) + t149 * r_i_i_C(3) + t149 * pkin(11) + t125 * pkin(6) + t117 * pkin(5) + t111 * pkin(4) + t138 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (t177 * t135 - t179 * t139) * r_i_i_C(1) + (-t179 * t135 - t177 * t139) * r_i_i_C(2) + t189 * r_i_i_C(3) + t189 * pkin(11) + t171 * pkin(6) + t163 * pkin(5) - t158 * t194 - t179 * pkin(10);
	unknown(1,3) = t349 * t135 * r_i_i_C(1) - t349 * t139 * r_i_i_C(2) + t311 * pkin(4) + t325 * pkin(5) + t333 * pkin(6) + t358 * pkin(11) + t358 * r_i_i_C(3);
	unknown(1,4) = t367 * t135 * r_i_i_C(1) - t367 * t139 * r_i_i_C(2) + t347 * pkin(6) + t374 * pkin(11) + t374 * r_i_i_C(3);
	unknown(1,5) = t382 * r_i_i_C(1) + t386 * r_i_i_C(2);
	unknown(2,1) = t315 * pkin(4) + t335 * pkin(5) + t339 * pkin(6) + t1 * pkin(9) + t158 * pkin(10) + t391 * pkin(11) - t386 * r_i_i_C(1) + t382 * r_i_i_C(2) + t391 * r_i_i_C(3);
	unknown(2,2) = (t414 * t135 + t3 * t139) * r_i_i_C(1) + (t3 * t135 - t414 * t139) * r_i_i_C(2) + t425 * r_i_i_C(3) + t425 * pkin(11) + t408 * pkin(6) + t402 * pkin(5) + t138 * t194 + t3 * pkin(10);
	unknown(2,3) = t467 * t135 * r_i_i_C(1) - t467 * t139 * r_i_i_C(2) + t435 * pkin(4) + t443 * pkin(5) + t451 * pkin(6) + t476 * pkin(11) + t476 * r_i_i_C(3);
	unknown(2,4) = t485 * t135 * r_i_i_C(1) - t485 * t139 * r_i_i_C(2) + t465 * pkin(6) + t492 * pkin(11) + t492 * r_i_i_C(3);
	unknown(2,5) = (-t497 * t139 - t144) * r_i_i_C(1) + (-t497 * t135 + t140) * r_i_i_C(2);
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (t521 * t135 - t137 * t139) * r_i_i_C(1) + (-t137 * t135 - t521 * t139) * r_i_i_C(2) + t532 * r_i_i_C(3) + t532 * pkin(11) + t515 * pkin(6) + t509 * pkin(5) + t505 * pkin(4) - t137 * pkin(10);
	unknown(3,3) = t572 * t135 * r_i_i_C(1) - t572 * t139 * r_i_i_C(2) - t540 * pkin(4) + t548 * pkin(5) + t556 * pkin(6) + t581 * pkin(11) + t581 * r_i_i_C(3);
	unknown(3,4) = t590 * t135 * r_i_i_C(1) - t590 * t139 * r_i_i_C(2) + t570 * pkin(6) + t597 * pkin(11) + t597 * r_i_i_C(3);
	unknown(3,5) = (-t2 * t135 - t602 * t139) * r_i_i_C(1) + (-t602 * t135 + t2 * t139) * r_i_i_C(2);
	Ja_transl = unknown;
elseif link_index == 8
	%% Symbolic Calculation
	% From jacobia_transl_8_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:24
	% EndTime: 2020-06-27 18:29:24
	% DurationCPUTime: 0.05s
	% Computational Cost: add. (21->21), mult. (52->38), div. (0->0), fcn. (56->6), ass. (0->27)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = sin(pkin(13));
	t6 = sin(qJ(1));
	t7 = cos(pkin(13));
	t15 = cos(qJ(2));
	t16 = t1 * t15;
	t21 = t6 * t15;
	t22 = t4 * r_i_i_C(1);
	t24 = t7 * r_i_i_C(2);
	t26 = t6 * t2;
	unknown(1,1) = (t3 * t4 - t6 * t7) * r_i_i_C(1) + (t3 * t7 + t6 * t4) * r_i_i_C(2) + t16 * r_i_i_C(3) + t16 * pkin(12) - t6 * pkin(9);
	unknown(1,2) = -t26 * pkin(12) - t26 * r_i_i_C(3) + t21 * t22 + t21 * t24;
	unknown(1,3) = 0.0e0;
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = (t1 * t7 + t26 * t4) * r_i_i_C(1) + (-t1 * t4 + t26 * t7) * r_i_i_C(2) + t21 * r_i_i_C(3) + t21 * pkin(12) + t1 * pkin(9);
	unknown(2,2) = t3 * pkin(12) + t3 * r_i_i_C(3) - t16 * t22 - t16 * t24;
	unknown(2,3) = 0.0e0;
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = -t2 * t4 * r_i_i_C(1) - t2 * t7 * r_i_i_C(2) - t15 * pkin(12) - t15 * r_i_i_C(3);
	unknown(3,3) = 0.0e0;
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 9
	%% Symbolic Calculation
	% From jacobia_transl_9_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:27
	% EndTime: 2020-06-27 18:45:40
	% DurationCPUTime: 176.11s
	% Computational Cost: add. (11693587->158), mult. (15282124->307), div. (187880->9), fcn. (6112302->16), ass. (0->145)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = sin(pkin(13));
	t6 = sin(qJ(1));
	t7 = cos(pkin(13));
	t9 = t3 * t4 - t6 * t7;
	t10 = cos(qJ(3));
	t11 = -pkin(25) + pkin(26);
	t12 = t10 * t11;
	t13 = pkin(29) + qJ(3);
	t14 = cos(t13);
	t15 = t14 * pkin(18);
	t16 = -pkin(15) + t12 + t15;
	t17 = pkin(17) ^ 2;
	t18 = pkin(23) ^ 2;
	t19 = t14 ^ 2;
	t20 = pkin(18) ^ 2;
	t22 = sin(t13);
	t23 = t22 ^ 2;
	t25 = -pkin(15) + t12;
	t26 = t25 ^ 2;
	t27 = sin(qJ(3));
	t28 = t27 ^ 2;
	t29 = t11 ^ 2;
	t33 = t27 * t11;
	t34 = t22 * pkin(18);
	t35 = -t33 + t34;
	t38 = 0.2e1 * t16 * t14 * pkin(18) + 0.2e1 * t35 * t22 * pkin(18) - t19 * t20 - t23 * t20 + t28 * t29 + t17 - t18 + t26;
	t42 = 0.4e1 * t16 ^ 2 + 0.4e1 * t35 ^ 2;
	t44 = t38 ^ 2;
	t46 = sqrt(t17 * t42 - t44);
	t48 = 0.2e1 * t16 * t38 - 0.2e1 * t35 * t46;
	t49 = 0.1e1 / t42;
	t51 = t48 * t49 + pkin(15) - t12 - t15;
	t52 = t10 * t51;
	t55 = 0.2e1 * t16 * t46 + 0.2e1 * t38 * t35;
	t57 = t55 * t49 + t33 - t34;
	t58 = t27 * t57;
	t60 = 0.1e1 / pkin(23);
	t61 = (t52 - t58) * t60;
	t62 = cos(pkin(14));
	t63 = t62 * pkin(22);
	t64 = t61 * t63;
	t65 = t27 * t51;
	t66 = t10 * t57;
	t68 = (t65 + t66) * t60;
	t69 = sin(pkin(14));
	t70 = t69 * pkin(22);
	t71 = t68 * t70;
	t72 = -pkin(26) - t64 + t71;
	t73 = pkin(21) ^ 2;
	t74 = pkin(24) ^ 2;
	t75 = t64 - t71;
	t76 = t75 ^ 2;
	t77 = t68 * t63;
	t78 = t61 * t70;
	t79 = t77 + t78;
	t80 = t79 ^ 2;
	t81 = pkin(26) ^ 2;
	t84 = -0.2e1 * t72 * t75 + 0.2e1 * t79 ^ 2 + t73 - t74 - t76 - t80 + t81;
	t88 = 0.4e1 * t72 ^ 2 + 0.4e1 * t79 ^ 2;
	t90 = t84 ^ 2;
	t92 = sqrt(t73 * t88 - t90);
	t94 = 0.2e1 * t72 * t84 + 0.2e1 * t79 * t92;
	t95 = 0.1e1 / t88;
	t98 = 0.1e1 / pkin(24);
	t99 = (-t94 * t95 - pkin(26) - t64 + t71) * t98;
	t103 = 0.2e1 * t72 * t92 - 0.2e1 * t84 * t79;
	t106 = (-t103 * t95 - t77 - t78) * t98;
	t108 = t106 * t7 - t99 * t4;
	t112 = t106 * t4 + t99 * t7;
	t114 = t108 * t7 + t112 * t4;
	t116 = t114 * pkin(24) + t77 + t78;
	t118 = 0.1e1 / pkin(21);
	t122 = t108 * t4 - t112 * t7;
	t124 = -t122 * pkin(24) + pkin(26) + t64 - t71;
	t127 = t114 * t116 * t118 - t122 * t124 * t118;
	t131 = t3 * t7 + t6 * t4;
	t134 = t116 * t118;
	t136 = -t114 * t124 * t118 - t134 * t122;
	t144 = cos(qJ(2));
	t145 = t1 * t144;
	t151 = t6 * t144;
	t152 = t4 * t127;
	t154 = t7 * t136;
	t158 = -t4 * t136;
	t160 = t7 * t127;
	t164 = t6 * t2;
	t166 = t4 * pkin(7);
	t172 = t1 * t7 + t164 * t4;
	t173 = -t33 - t34;
	t185 = -t12 + t15;
	t190 = 0.2e1 * t173 * t14 * pkin(18) + 0.2e1 * t35 * t14 * pkin(18) - 0.2e1 * t16 * t22 * pkin(18) + 0.2e1 * t185 * t22 * pkin(18) + 0.2e1 * t27 * t29 * t10 - 0.2e1 * t25 * t27 * t11;
	t193 = 0.1e1 / t46;
	t197 = 0.4e1 * t16 * t173 + 0.4e1 * t35 * t185;
	t201 = 0.2e1 * t17 * t197 - 0.2e1 * t38 * t190;
	t206 = t42 ^ 2;
	t207 = 0.1e1 / t206;
	t210 = t33 + t34 + (-t35 * t193 * t201 + 0.2e1 * t16 * t190 + 0.2e1 * t173 * t38 - 0.2e1 * t185 * t46) * t49 - 0.2e1 * t48 * t207 * t197;
	t222 = t12 - t15 + (t16 * t193 * t201 + 0.2e1 * t173 * t46 + 0.2e1 * t38 * t185 + 0.2e1 * t190 * t35) * t49 - 0.2e1 * t55 * t207 * t197;
	t225 = (t10 * t210 - t27 * t222 - t65 - t66) * t60;
	t226 = t225 * t63;
	t230 = (t10 * t222 + t27 * t210 + t52 - t58) * t60;
	t231 = t230 * t70;
	t232 = -t226 + t231;
	t236 = t230 * t63;
	t237 = t225 * t70;
	t238 = t236 + t237;
	t244 = 0.2e1 * t72 * t232 + 0.2e1 * t79 * t238;
	t247 = 0.1e1 / t92;
	t251 = 0.4e1 * t72 * t232 + 0.4e1 * t79 * t238;
	t255 = -0.2e1 * t84 * t244 + 0.2e1 * t73 * t251;
	t260 = t88 ^ 2;
	t261 = 0.1e1 / t260;
	t265 = (-t226 + t231 - (t79 * t247 * t255 + 0.2e1 * t232 * t84 + 0.2e1 * t238 * t92 + 0.2e1 * t72 * t244) * t95 + 0.2e1 * t94 * t261 * t251) * t98;
	t278 = (-t236 - t237 - (t72 * t247 * t255 + 0.2e1 * t232 * t92 - 0.2e1 * t84 * t238 - 0.2e1 * t244 * t79) * t95 + 0.2e1 * t103 * t261 * t251) * t98;
	t280 = -t265 * t4 + t278 * t7;
	t284 = t265 * t7 + t278 * t4;
	t286 = t280 * t7 + t284 * t4;
	t290 = t286 * pkin(24) + t236 + t237;
	t295 = t280 * t4 - t284 * t7;
	t299 = -t295 * pkin(24) + t226 - t231;
	t302 = t114 * t290 * t118 + t286 * t116 * t118 - t122 * t299 * t118 - t295 * t124 * t118;
	t306 = -t1 * t4 + t164 * t7;
	t314 = -t114 * t299 * t118 - t290 * t118 * t122 - t286 * t124 * t118 - t134 * t295;
	t357 = t2 * t4;
	t359 = t2 * t7;
	t371 = t144 * t4;
	t373 = t144 * t7;
	unknown(1,1) = (t9 * t127 + t131 * t136) * r_i_i_C(1) + (t131 * t127 - t9 * t136) * r_i_i_C(2) + t145 * r_i_i_C(3) + t9 * pkin(7) + t145 * pkin(12) - t6 * pkin(9);
	unknown(1,2) = (t151 * t152 + t151 * t154) * r_i_i_C(1) + (t151 * t158 + t151 * t160) * r_i_i_C(2) - t164 * r_i_i_C(3) + t151 * t166 - t164 * pkin(12);
	unknown(1,3) = (t172 * t302 + t306 * t314) * r_i_i_C(1) + (-t172 * t314 + t306 * t302) * r_i_i_C(2);
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = (t172 * t127 + t306 * t136) * r_i_i_C(1) + (t306 * t127 - t172 * t136) * r_i_i_C(2) + t151 * r_i_i_C(3) + t172 * pkin(7) + t151 * pkin(12) + t1 * pkin(9);
	unknown(2,2) = (-t145 * t152 - t145 * t154) * r_i_i_C(1) + (-t145 * t158 - t145 * t160) * r_i_i_C(2) + t3 * r_i_i_C(3) - t145 * t166 + t3 * pkin(12);
	unknown(2,3) = (-t131 * t314 - t9 * t302) * r_i_i_C(1) + (-t131 * t302 + t9 * t314) * r_i_i_C(2);
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (-t357 * t127 - t359 * t136) * r_i_i_C(1) + (-t359 * t127 + t357 * t136) * r_i_i_C(2) - t144 * r_i_i_C(3) - t357 * pkin(7) - t144 * pkin(12);
	unknown(3,3) = (t371 * t302 + t373 * t314) * r_i_i_C(1) + (t373 * t302 - t371 * t314) * r_i_i_C(2);
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 10
	%% Symbolic Calculation
	% From jacobia_transl_10_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:25
	% EndTime: 2020-06-27 18:34:19
	% DurationCPUTime: 43.85s
	% Computational Cost: add. (2915955->160), mult. (3812858->325), div. (46190->8), fcn. (1524850->16), ass. (0->141)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t45 = t42 * t43 + pkin(15) - t6 - t9;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t51 = t49 * t43 + t27 - t28;
	t52 = t21 * t51;
	t53 = t46 - t52;
	t54 = 0.1e1 / pkin(23);
	t55 = t53 * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t61 = t59 + t60;
	t62 = t61 * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 - t106 * t109;
	t116 = -t106 * t104 + t3 * t109;
	t127 = cos(qJ(2));
	t128 = t1 * t127;
	t134 = t106 * t127;
	t136 = t104 * t53 * t54;
	t139 = -t109 * t61 * t54;
	t144 = t104 * t61 * t54;
	t147 = -t109 * t53 * t54;
	t151 = t106 * t2;
	t153 = t104 * pkin(1);
	t157 = -t27 - t28;
	t169 = -t6 + t9;
	t174 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t157 * t8 * pkin(18) + 0.2e1 * t169 * t16 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t177 = 0.1e1 / t40;
	t181 = 0.4e1 * t10 * t157 + 0.4e1 * t29 * t169;
	t185 = 0.2e1 * t11 * t181 - 0.2e1 * t32 * t174;
	t190 = t36 ^ 2;
	t191 = 0.1e1 / t190;
	t194 = t27 + t28 + (-t29 * t177 * t185 + 0.2e1 * t10 * t174 + 0.2e1 * t157 * t32 - 0.2e1 * t169 * t40) * t43 - 0.2e1 * t42 * t191 * t181;
	t206 = t6 - t9 + (t10 * t177 * t185 + 0.2e1 * t157 * t40 + 0.2e1 * t32 * t169 + 0.2e1 * t174 * t29) * t43 - 0.2e1 * t49 * t191 * t181;
	t208 = t4 * t194 - t21 * t206 - t59 - t60;
	t209 = t208 * t54;
	t210 = t209 * t57;
	t213 = t21 * t194 + t4 * t206 + t46 - t52;
	t214 = t213 * t54;
	t215 = t214 * t64;
	t216 = -t210 + t215;
	t220 = t214 * t57;
	t221 = t209 * t64;
	t222 = t220 + t221;
	t228 = 0.2e1 * t66 * t216 + 0.2e1 * t73 * t222;
	t231 = 0.1e1 / t86;
	t235 = 0.4e1 * t66 * t216 + 0.4e1 * t73 * t222;
	t239 = -0.2e1 * t78 * t228 + 0.2e1 * t67 * t235;
	t244 = t82 ^ 2;
	t245 = 0.1e1 / t244;
	t249 = (-t210 + t215 - (t73 * t231 * t239 + 0.2e1 * t216 * t78 + 0.2e1 * t222 * t86 + 0.2e1 * t66 * t228) * t89 + 0.2e1 * t88 * t245 * t235) * t92;
	t262 = (-t220 - t221 - (t66 * t231 * t239 + 0.2e1 * t216 * t86 - 0.2e1 * t78 * t222 - 0.2e1 * t228 * t73) * t89 + 0.2e1 * t98 * t245 * t235) * t92;
	t264 = t262 * t102 - t249 * t94;
	t268 = t249 * t102 + t262 * t94;
	t270 = t1 * t268 - t151 * t264;
	t275 = t1 * t109 - t151 * t104;
	t280 = t1 * t264 + t151 * t268;
	t285 = t1 * t104 + t151 * t109;
	t333 = t106 * t268 + t3 * t264;
	t340 = t106 * t264 - t3 * t268;
	t359 = t2 * t104;
	t361 = -t2 * t109;
	t373 = t127 * t264;
	t375 = t127 * t104;
	t377 = -t127 * t268;
	t379 = -t127 * t109;
	unknown(1,1) = (t111 * t53 * t54 + t116 * t61 * t54) * r_i_i_C(1) + (-t111 * t61 * t54 + t116 * t53 * t54) * r_i_i_C(2) + t128 * r_i_i_C(3) + t111 * pkin(1) + t128 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (-t134 * t136 - t134 * t139) * r_i_i_C(1) + (t134 * t144 - t134 * t147) * r_i_i_C(2) - t151 * r_i_i_C(3) - t134 * t153 - t151 * pkin(10);
	unknown(1,3) = (t275 * t208 * t54 + t285 * t213 * t54 + t270 * t53 * t54 + t280 * t61 * t54) * r_i_i_C(1) + (t285 * t208 * t54 - t275 * t213 * t54 - t270 * t61 * t54 + t280 * t53 * t54) * r_i_i_C(2) + t270 * pkin(1);
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = (t275 * t53 * t54 + t285 * t61 * t54) * r_i_i_C(1) + (-t275 * t61 * t54 + t285 * t53 * t54) * r_i_i_C(2) + t134 * r_i_i_C(3) + t275 * pkin(1) + t134 * pkin(10) + t1 * pkin(9);
	unknown(2,2) = (t128 * t136 + t128 * t139) * r_i_i_C(1) + (-t128 * t144 + t128 * t147) * r_i_i_C(2) + t3 * r_i_i_C(3) + t128 * t153 + t3 * pkin(10);
	unknown(2,3) = (-t111 * t208 * t54 - t116 * t213 * t54 + t333 * t53 * t54 + t340 * t61 * t54) * r_i_i_C(1) + (t111 * t213 * t54 - t116 * t208 * t54 - t333 * t61 * t54 + t340 * t53 * t54) * r_i_i_C(2) + t333 * pkin(1);
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (t359 * t55 + t361 * t62) * r_i_i_C(1) + (-t359 * t62 + t361 * t55) * r_i_i_C(2) - t127 * r_i_i_C(3) + t359 * pkin(1) - t127 * pkin(10);
	unknown(3,3) = (-t375 * t209 - t379 * t214 - t373 * t55 - t377 * t62) * r_i_i_C(1) + (-t379 * t209 + t375 * t214 + t373 * t62 - t377 * t55) * r_i_i_C(2) - t373 * pkin(1);
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 11
	%% Symbolic Calculation
	% From jacobia_transl_11_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:26
	% EndTime: 2020-06-27 18:40:18
	% DurationCPUTime: 108.85s
	% Computational Cost: add. (7062779->225), mult. (9225678->432), div. (114544->9), fcn. (3690644->16), ass. (0->179)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t45 = t42 * t43 + pkin(15) - t6 - t9;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t51 = t49 * t43 + t27 - t28;
	t52 = t21 * t51;
	t53 = t46 - t52;
	t54 = 0.1e1 / pkin(23);
	t55 = t53 * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t61 = t59 + t60;
	t62 = t61 * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 - t106 * t109;
	t116 = -t106 * t104 + t3 * t109;
	t119 = t111 * t53 * t54 + t116 * t61 * t54;
	t121 = t4 * t53 * t54;
	t123 = t21 * t61 * t54;
	t124 = t121 + t123;
	t126 = t124 * pkin(23) - pkin(15) + t6 + t9;
	t128 = 0.1e1 / pkin(17);
	t131 = t21 * t53 * t54;
	t133 = t4 * t61 * t54;
	t134 = t131 - t133;
	t136 = t134 * pkin(23) + t27 - t28;
	t139 = -t124 * t126 * t128 - t134 * t136 * t128;
	t145 = -t111 * t61 * t54 + t116 * t53 * t54;
	t148 = t126 * t128;
	t150 = t124 * t136 * t128 - t148 * t134;
	t158 = cos(qJ(2));
	t159 = t1 * t158;
	t166 = t106 * t158;
	t168 = t104 * t53 * t54;
	t171 = -t109 * t61 * t54;
	t173 = -t166 * t168 - t166 * t171;
	t176 = t104 * t61 * t54;
	t179 = -t109 * t53 * t54;
	t181 = t166 * t176 - t166 * t179;
	t189 = t106 * t2;
	t192 = t104 * pkin(1);
	t196 = -t27 - t28;
	t208 = -t6 + t9;
	t213 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t208 * t16 * pkin(18) + 0.2e1 * t196 * t8 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t216 = 0.1e1 / t40;
	t220 = 0.4e1 * t10 * t196 + 0.4e1 * t29 * t208;
	t224 = 0.2e1 * t11 * t220 - 0.2e1 * t32 * t213;
	t229 = t36 ^ 2;
	t230 = 0.1e1 / t229;
	t233 = t27 + t28 + (-t29 * t216 * t224 + 0.2e1 * t10 * t213 + 0.2e1 * t196 * t32 - 0.2e1 * t208 * t40) * t43 - 0.2e1 * t42 * t230 * t220;
	t245 = t6 - t9 + (t10 * t216 * t224 + 0.2e1 * t196 * t40 + 0.2e1 * t32 * t208 + 0.2e1 * t213 * t29) * t43 - 0.2e1 * t49 * t230 * t220;
	t247 = -t21 * t245 + t4 * t233 - t59 - t60;
	t248 = t247 * t54;
	t249 = t248 * t57;
	t252 = t21 * t233 + t4 * t245 + t46 - t52;
	t253 = t252 * t54;
	t254 = t253 * t64;
	t255 = -t249 + t254;
	t259 = t253 * t57;
	t260 = t248 * t64;
	t261 = t259 + t260;
	t267 = 0.2e1 * t66 * t255 + 0.2e1 * t73 * t261;
	t270 = 0.1e1 / t86;
	t274 = 0.4e1 * t66 * t255 + 0.4e1 * t73 * t261;
	t278 = -0.2e1 * t78 * t267 + 0.2e1 * t67 * t274;
	t283 = t82 ^ 2;
	t284 = 0.1e1 / t283;
	t288 = (-t249 + t254 - (t73 * t270 * t278 + 0.2e1 * t255 * t78 + 0.2e1 * t261 * t86 + 0.2e1 * t66 * t267) * t89 + 0.2e1 * t88 * t284 * t274) * t92;
	t301 = (-t259 - t260 - (t66 * t270 * t278 + 0.2e1 * t255 * t86 - 0.2e1 * t78 * t261 - 0.2e1 * t267 * t73) * t89 + 0.2e1 * t98 * t284 * t274) * t92;
	t303 = t301 * t102 - t288 * t94;
	t307 = t288 * t102 + t301 * t94;
	t309 = t1 * t307 - t189 * t303;
	t314 = t1 * t109 - t189 * t104;
	t319 = t1 * t303 + t189 * t307;
	t324 = t1 * t104 + t189 * t109;
	t327 = t314 * t247 * t54 + t324 * t252 * t54 + t309 * t53 * t54 + t319 * t61 * t54;
	t333 = t314 * t53 * t54 + t324 * t61 * t54;
	t338 = t21 * t252 * t54 + t4 * t247 * t54 - t131 + t133;
	t342 = t338 * pkin(23) - t27 - t28;
	t349 = t21 * t247 * t54 - t4 * t252 * t54 + t121 + t123;
	t353 = t349 * pkin(23) + t6 - t9;
	t356 = -t124 * t342 * t128 - t338 * t126 * t128 - t134 * t353 * t128 - t349 * t136 * t128;
	t366 = t324 * t247 * t54 - t314 * t252 * t54 - t309 * t61 * t54 + t319 * t53 * t54;
	t372 = -t314 * t61 * t54 + t324 * t53 * t54;
	t380 = t124 * t353 * t128 - t342 * t128 * t134 + t338 * t136 * t128 - t148 * t349;
	t409 = t159 * t168 + t159 * t171;
	t413 = -t159 * t176 + t159 * t179;
	t428 = t106 * t307 + t3 * t303;
	t435 = t106 * t303 - t3 * t307;
	t440 = -t111 * t247 * t54 - t116 * t252 * t54 + t428 * t53 * t54 + t435 * t61 * t54;
	t446 = -t111 * t53 * t54 - t116 * t61 * t54;
	t456 = t111 * t252 * t54 - t116 * t247 * t54 - t428 * t61 * t54 + t435 * t53 * t54;
	t462 = t111 * t61 * t54 - t116 * t53 * t54;
	t475 = t2 * t104;
	t477 = -t2 * t109;
	t479 = t475 * t55 + t477 * t62;
	t483 = -t475 * t62 + t477 * t55;
	t496 = t158 * t303;
	t498 = t158 * t104;
	t500 = -t158 * t307;
	t502 = -t158 * t109;
	t504 = -t498 * t248 - t502 * t253 - t496 * t55 - t500 * t62;
	t508 = -t498 * t55 - t502 * t62;
	t514 = -t502 * t248 + t498 * t253 + t496 * t62 - t500 * t55;
	t518 = t498 * t62 - t502 * t55;
	unknown(1,1) = (t119 * t139 + t145 * t150) * r_i_i_C(1) + (-t119 * t150 + t145 * t139) * r_i_i_C(2) + t159 * r_i_i_C(3) + t119 * pkin(2) + t111 * pkin(1) + t159 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (t173 * t139 + t181 * t150) * r_i_i_C(1) + (t181 * t139 - t173 * t150) * r_i_i_C(2) - t189 * r_i_i_C(3) + t173 * pkin(2) - t166 * t192 - t189 * pkin(10);
	unknown(1,3) = (t327 * t139 + t366 * t150 + t333 * t356 + t372 * t380) * r_i_i_C(1) + (t366 * t139 - t327 * t150 - t333 * t380 + t372 * t356) * r_i_i_C(2) + t327 * pkin(2) + t309 * pkin(1);
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = (t333 * t139 + t372 * t150) * r_i_i_C(1) + (t372 * t139 - t333 * t150) * r_i_i_C(2) + t166 * r_i_i_C(3) + t333 * pkin(2) + t314 * pkin(1) + t166 * pkin(10) + t1 * pkin(9);
	unknown(2,2) = (t409 * t139 + t413 * t150) * r_i_i_C(1) + (t413 * t139 - t409 * t150) * r_i_i_C(2) + t3 * r_i_i_C(3) + t409 * pkin(2) + t159 * t192 + t3 * pkin(10);
	unknown(2,3) = (t440 * t139 + t456 * t150 + t446 * t356 + t462 * t380) * r_i_i_C(1) + (t456 * t139 - t440 * t150 + t462 * t356 - t446 * t380) * r_i_i_C(2) + t440 * pkin(2) + t428 * pkin(1);
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (t479 * t139 + t483 * t150) * r_i_i_C(1) + (t483 * t139 - t479 * t150) * r_i_i_C(2) - t158 * r_i_i_C(3) + t479 * pkin(2) + t475 * pkin(1) - t158 * pkin(10);
	unknown(3,3) = (t504 * t139 + t514 * t150 + t508 * t356 + t518 * t380) * r_i_i_C(1) + (t514 * t139 - t504 * t150 + t518 * t356 - t508 * t380) * r_i_i_C(2) + t504 * pkin(2) - t496 * pkin(1);
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 12
	%% Symbolic Calculation
	% From jacobia_transl_12_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:28
	% EndTime: 2020-06-27 18:49:21
	% DurationCPUTime: 238.36s
	% Computational Cost: add. (15997547->277), mult. (20878396->510), div. (265112->9), fcn. (8353652->16), ass. (0->217)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * t10 * t8 * pkin(18) + 0.2e1 * t29 * t16 * pkin(18) - t13 * t14 - t17 * t14 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t44 = t42 * t43;
	t45 = pkin(15) - t6 - t9 + t44;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t32 * t29;
	t50 = t49 * t43;
	t51 = t27 - t28 + t50;
	t52 = t21 * t51;
	t53 = t46 - t52;
	t54 = 0.1e1 / pkin(23);
	t55 = t53 * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t61 = t59 + t60;
	t62 = t61 * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t78 * t73;
	t101 = (-t98 * t89 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t93 * t102;
	t111 = -t3 * t104 - t106 * t109;
	t116 = -t106 * t104 + t3 * t109;
	t119 = t111 * t53 * t54 + t116 * t61 * t54;
	t121 = t4 * t53 * t54;
	t123 = t21 * t61 * t54;
	t124 = t121 + t123;
	t126 = t124 * pkin(23) - pkin(15) + t6 + t9;
	t128 = 0.1e1 / pkin(17);
	t131 = t21 * t53 * t54;
	t133 = t4 * t61 * t54;
	t134 = t131 - t133;
	t136 = t134 * pkin(23) + t27 - t28;
	t139 = -t124 * t126 * t128 - t134 * t136 * t128;
	t145 = -t111 * t61 * t54 + t116 * t53 * t54;
	t148 = t126 * t128;
	t150 = t124 * t136 * t128 - t148 * t134;
	t152 = t119 * t139 + t145 * t150;
	t153 = t128 * t8;
	t154 = t44 * t153;
	t155 = t128 * t16;
	t156 = t50 * t155;
	t157 = t154 + t156;
	t161 = -t119 * t150 + t145 * t139;
	t162 = t50 * t153;
	t163 = t44 * t155;
	t164 = -t162 + t163;
	t172 = cos(qJ(2));
	t173 = t1 * t172;
	t181 = t106 * t172;
	t183 = t104 * t53 * t54;
	t186 = -t109 * t61 * t54;
	t188 = -t181 * t183 - t181 * t186;
	t191 = t104 * t61 * t54;
	t194 = -t109 * t53 * t54;
	t196 = t181 * t191 - t181 * t194;
	t198 = t188 * t139 + t196 * t150;
	t202 = t196 * t139 - t188 * t150;
	t210 = t106 * t2;
	t214 = t104 * pkin(1);
	t218 = -t27 - t28;
	t230 = -t6 + t9;
	t235 = -0.2e1 * t10 * t16 * pkin(18) + 0.2e1 * t230 * t16 * pkin(18) + 0.2e1 * t218 * t8 * pkin(18) + 0.2e1 * t29 * t8 * pkin(18) - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t238 = 0.1e1 / t40;
	t242 = 0.4e1 * t10 * t218 + 0.4e1 * t29 * t230;
	t246 = 0.2e1 * t11 * t242 - 0.2e1 * t32 * t235;
	t250 = (-t29 * t238 * t246 + 0.2e1 * t10 * t235 + 0.2e1 * t218 * t32 - 0.2e1 * t230 * t40) * t43;
	t251 = t36 ^ 2;
	t252 = 0.1e1 / t251;
	t253 = t42 * t252;
	t255 = -0.2e1 * t253 * t242 + t250 + t27 + t28;
	t264 = (t10 * t238 * t246 + 0.2e1 * t218 * t40 + 0.2e1 * t32 * t230 + 0.2e1 * t235 * t29) * t43;
	t265 = t49 * t252;
	t267 = -0.2e1 * t265 * t242 + t264 + t6 - t9;
	t269 = -t21 * t267 + t4 * t255 - t59 - t60;
	t270 = t269 * t54;
	t271 = t270 * t57;
	t274 = t21 * t255 + t4 * t267 + t46 - t52;
	t275 = t274 * t54;
	t276 = t275 * t64;
	t277 = -t271 + t276;
	t281 = t275 * t57;
	t282 = t270 * t64;
	t283 = t281 + t282;
	t289 = 0.2e1 * t66 * t277 + 0.2e1 * t73 * t283;
	t292 = 0.1e1 / t86;
	t296 = 0.4e1 * t66 * t277 + 0.4e1 * t73 * t283;
	t300 = -0.2e1 * t78 * t289 + 0.2e1 * t67 * t296;
	t305 = t82 ^ 2;
	t306 = 0.1e1 / t305;
	t310 = (-t271 + t276 - (t73 * t292 * t300 + 0.2e1 * t277 * t78 + 0.2e1 * t283 * t86 + 0.2e1 * t66 * t289) * t89 + 0.2e1 * t88 * t306 * t296) * t92;
	t323 = (-t281 - t282 - (t66 * t292 * t300 + 0.2e1 * t277 * t86 - 0.2e1 * t78 * t283 - 0.2e1 * t289 * t73) * t89 + 0.2e1 * t98 * t306 * t296) * t92;
	t325 = t323 * t102 - t310 * t94;
	t329 = t310 * t102 + t323 * t94;
	t331 = t1 * t329 - t210 * t325;
	t336 = t1 * t109 - t210 * t104;
	t341 = t1 * t325 + t210 * t329;
	t346 = t1 * t104 + t210 * t109;
	t349 = t336 * t269 * t54 + t346 * t274 * t54 + t331 * t53 * t54 + t341 * t61 * t54;
	t355 = t336 * t53 * t54 + t346 * t61 * t54;
	t360 = t21 * t274 * t54 + t4 * t269 * t54 - t131 + t133;
	t364 = t360 * pkin(23) - t27 - t28;
	t371 = t21 * t269 * t54 - t4 * t274 * t54 + t121 + t123;
	t375 = t371 * pkin(23) + t6 - t9;
	t378 = -t124 * t364 * t128 - t360 * t126 * t128 - t134 * t375 * t128 - t371 * t136 * t128;
	t388 = t346 * t269 * t54 - t336 * t274 * t54 - t331 * t61 * t54 + t341 * t53 * t54;
	t394 = -t336 * t61 * t54 + t346 * t53 * t54;
	t402 = t124 * t375 * t128 - t364 * t128 * t134 + t360 * t136 * t128 - t148 * t371;
	t404 = t349 * t139 + t388 * t150 + t355 * t378 + t394 * t402;
	t408 = t355 * t139 + t394 * t150;
	t410 = 0.2e1 * t153 * t242;
	t413 = 0.2e1 * t155 * t242;
	t415 = t250 * t153 + t264 * t155 - t253 * t410 - t265 * t413 + t162 - t163;
	t421 = t388 * t139 - t349 * t150 - t355 * t402 + t394 * t378;
	t425 = t394 * t139 - t355 * t150;
	t430 = -t264 * t153 + t250 * t155 - t253 * t413 + t265 * t410 + t154 + t156;
	t461 = t173 * t183 + t173 * t186;
	t465 = -t173 * t191 + t173 * t194;
	t467 = t461 * t139 + t465 * t150;
	t471 = t465 * t139 - t461 * t150;
	t487 = t106 * t329 + t3 * t325;
	t494 = t106 * t325 - t3 * t329;
	t499 = -t111 * t269 * t54 - t116 * t274 * t54 + t487 * t53 * t54 + t494 * t61 * t54;
	t505 = -t111 * t53 * t54 - t116 * t61 * t54;
	t515 = t111 * t274 * t54 - t116 * t269 * t54 - t487 * t61 * t54 + t494 * t53 * t54;
	t521 = t111 * t61 * t54 - t116 * t53 * t54;
	t523 = t499 * t139 + t515 * t150 + t505 * t378 + t521 * t402;
	t527 = t505 * t139 + t521 * t150;
	t533 = t515 * t139 - t499 * t150 + t521 * t378 - t505 * t402;
	t537 = t521 * t139 - t505 * t150;
	t551 = t2 * t104;
	t553 = -t2 * t109;
	t555 = t551 * t55 + t553 * t62;
	t559 = t553 * t55 - t551 * t62;
	t561 = t555 * t139 + t559 * t150;
	t565 = t559 * t139 - t555 * t150;
	t579 = t172 * t325;
	t581 = t172 * t104;
	t583 = -t172 * t329;
	t585 = -t172 * t109;
	t587 = -t581 * t270 - t585 * t275 - t579 * t55 - t583 * t62;
	t591 = -t581 * t55 - t585 * t62;
	t597 = -t585 * t270 + t581 * t275 - t583 * t55 + t579 * t62;
	t601 = -t585 * t55 + t581 * t62;
	t603 = t587 * t139 + t597 * t150 + t591 * t378 + t601 * t402;
	t607 = t591 * t139 + t601 * t150;
	t613 = t597 * t139 - t587 * t150 + t601 * t378 - t591 * t402;
	t617 = t601 * t139 - t591 * t150;
	unknown(1,1) = (t152 * t157 + t161 * t164) * r_i_i_C(1) + (-t152 * t164 + t161 * t157) * r_i_i_C(2) + t173 * r_i_i_C(3) + t152 * pkin(3) + t119 * pkin(2) + t111 * pkin(1) + t173 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (t198 * t157 + t202 * t164) * r_i_i_C(1) + (t202 * t157 - t198 * t164) * r_i_i_C(2) - t210 * r_i_i_C(3) + t198 * pkin(3) + t188 * pkin(2) - t181 * t214 - t210 * pkin(10);
	unknown(1,3) = (t404 * t157 + t421 * t164 + t408 * t415 + t425 * t430) * r_i_i_C(1) + (t421 * t157 - t404 * t164 - t408 * t430 + t425 * t415) * r_i_i_C(2) + t404 * pkin(3) + t349 * pkin(2) + t331 * pkin(1);
	unknown(1,4) = 0.0e0;
	unknown(1,5) = 0.0e0;
	unknown(2,1) = (t408 * t157 + t425 * t164) * r_i_i_C(1) + (t425 * t157 - t408 * t164) * r_i_i_C(2) + t181 * r_i_i_C(3) + t408 * pkin(3) + t355 * pkin(2) + t336 * pkin(1) + t181 * pkin(10) + t1 * pkin(9);
	unknown(2,2) = (t467 * t157 + t471 * t164) * r_i_i_C(1) + (t471 * t157 - t467 * t164) * r_i_i_C(2) + t3 * r_i_i_C(3) + t467 * pkin(3) + t461 * pkin(2) + t173 * t214 + t3 * pkin(10);
	unknown(2,3) = (t523 * t157 + t533 * t164 + t527 * t415 + t537 * t430) * r_i_i_C(1) + (t533 * t157 - t523 * t164 + t537 * t415 - t527 * t430) * r_i_i_C(2) + t523 * pkin(3) + t499 * pkin(2) + t487 * pkin(1);
	unknown(2,4) = 0.0e0;
	unknown(2,5) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (t561 * t157 + t565 * t164) * r_i_i_C(1) + (t565 * t157 - t561 * t164) * r_i_i_C(2) - t172 * r_i_i_C(3) + t561 * pkin(3) + t555 * pkin(2) + t551 * pkin(1) - t172 * pkin(10);
	unknown(3,3) = (t603 * t157 + t613 * t164 + t607 * t415 + t617 * t430) * r_i_i_C(1) + (t613 * t157 - t603 * t164 + t617 * t415 - t607 * t430) * r_i_i_C(2) + t603 * pkin(3) + t587 * pkin(2) - t579 * pkin(1);
	unknown(3,4) = 0.0e0;
	unknown(3,5) = 0.0e0;
	Ja_transl = unknown;
elseif link_index == 13
	%% Symbolic Calculation
	% From jacobia_transl_13_floatb_twist_matlab.m
	% OptimizationMode: 1
	% StartTime: 2020-06-27 18:29:30
	% EndTime: 2020-06-27 18:59:10
	% DurationCPUTime: 465.36s
	% Computational Cost: add. (31283724->360), mult. (40762126->636), div. (536840->12), fcn. (16315564->22), ass. (0->283)
	unknown=NaN(3,5);
	t1 = cos(qJ(1));
	t2 = sin(qJ(2));
	t3 = t1 * t2;
	t4 = cos(qJ(3));
	t5 = -pkin(25) + pkin(26);
	t6 = t4 * t5;
	t7 = pkin(29) + qJ(3);
	t8 = cos(t7);
	t9 = t8 * pkin(18);
	t10 = -pkin(15) + t6 + t9;
	t11 = pkin(17) ^ 2;
	t12 = pkin(23) ^ 2;
	t13 = t8 ^ 2;
	t14 = pkin(18) ^ 2;
	t16 = sin(t7);
	t17 = t16 ^ 2;
	t19 = -pkin(15) + t6;
	t20 = t19 ^ 2;
	t21 = sin(qJ(3));
	t22 = t21 ^ 2;
	t23 = t5 ^ 2;
	t27 = t21 * t5;
	t28 = t16 * pkin(18);
	t29 = -t27 + t28;
	t32 = 0.2e1 * pkin(18) * t10 * t8 + 0.2e1 * pkin(18) * t16 * t29 - t13 * t14 - t14 * t17 + t22 * t23 + t11 - t12 + t20;
	t36 = 0.4e1 * t10 ^ 2 + 0.4e1 * t29 ^ 2;
	t38 = t32 ^ 2;
	t40 = sqrt(t11 * t36 - t38);
	t42 = 0.2e1 * t10 * t32 - 0.2e1 * t29 * t40;
	t43 = 0.1e1 / t36;
	t44 = t42 * t43;
	t45 = pkin(15) - t6 - t9 + t44;
	t46 = t4 * t45;
	t49 = 0.2e1 * t10 * t40 + 0.2e1 * t29 * t32;
	t50 = t49 * t43;
	t51 = t27 - t28 + t50;
	t52 = t21 * t51;
	t53 = t46 - t52;
	t54 = 0.1e1 / pkin(23);
	t55 = t53 * t54;
	t56 = cos(pkin(14));
	t57 = t56 * pkin(22);
	t58 = t55 * t57;
	t59 = t21 * t45;
	t60 = t4 * t51;
	t61 = t59 + t60;
	t62 = t61 * t54;
	t63 = sin(pkin(14));
	t64 = t63 * pkin(22);
	t65 = t62 * t64;
	t66 = -pkin(26) - t58 + t65;
	t67 = pkin(21) ^ 2;
	t68 = pkin(24) ^ 2;
	t69 = t58 - t65;
	t70 = t69 ^ 2;
	t71 = t62 * t57;
	t72 = t55 * t64;
	t73 = t71 + t72;
	t74 = t73 ^ 2;
	t75 = pkin(26) ^ 2;
	t78 = -0.2e1 * t66 * t69 + 0.2e1 * t73 ^ 2 + t67 - t68 - t70 - t74 + t75;
	t82 = 0.4e1 * t66 ^ 2 + 0.4e1 * t73 ^ 2;
	t84 = t78 ^ 2;
	t86 = sqrt(t67 * t82 - t84);
	t88 = 0.2e1 * t66 * t78 + 0.2e1 * t73 * t86;
	t89 = 0.1e1 / t82;
	t92 = 0.1e1 / pkin(24);
	t93 = (-t88 * t89 - pkin(26) - t58 + t65) * t92;
	t94 = sin(pkin(13));
	t98 = 0.2e1 * t66 * t86 - 0.2e1 * t73 * t78;
	t101 = (-t89 * t98 - t71 - t72) * t92;
	t102 = cos(pkin(13));
	t104 = t101 * t102 - t93 * t94;
	t106 = sin(qJ(1));
	t109 = t101 * t94 + t102 * t93;
	t111 = -t104 * t3 - t106 * t109;
	t116 = -t104 * t106 + t109 * t3;
	t119 = t111 * t53 * t54 + t116 * t54 * t61;
	t121 = t4 * t53 * t54;
	t123 = t21 * t61 * t54;
	t124 = t121 + t123;
	t126 = pkin(23) * t124 - pkin(15) + t6 + t9;
	t128 = 0.1e1 / pkin(17);
	t131 = t21 * t53 * t54;
	t133 = t4 * t61 * t54;
	t134 = t131 - t133;
	t136 = pkin(23) * t134 + t27 - t28;
	t139 = -t124 * t126 * t128 - t128 * t134 * t136;
	t145 = -t111 * t54 * t61 + t116 * t53 * t54;
	t148 = t126 * t128;
	t150 = t124 * t128 * t136 - t134 * t148;
	t152 = t119 * t139 + t145 * t150;
	t153 = t128 * t8;
	t154 = t44 * t153;
	t155 = t128 * t16;
	t156 = t50 * t155;
	t157 = t154 + t156;
	t161 = -t119 * t150 + t139 * t145;
	t162 = t50 * t153;
	t163 = t44 * t155;
	t164 = -t162 + t163;
	t166 = t152 * t157 + t161 * t164;
	t167 = -qJ(4) + qJ(3) - pkin(30);
	t168 = sin(t167);
	t169 = t168 * pkin(19);
	t170 = cos(t167);
	t171 = t170 * pkin(20);
	t172 = pkin(29) + qJ(3) - qJ(4);
	t173 = cos(t172);
	t174 = t173 * pkin(18);
	t175 = t169 - pkin(16) - t171 - t174;
	t176 = t175 ^ 2;
	t177 = t170 * pkin(19);
	t178 = t168 * pkin(20);
	t179 = sin(t172);
	t180 = t179 * pkin(18);
	t181 = t177 + t178 - t180;
	t182 = t181 ^ 2;
	t183 = t176 + t182;
	t184 = sqrt(t183);
	t185 = 0.1e1 / t184;
	t186 = t175 * t185;
	t187 = t186 * t173;
	t188 = -t181 * t185;
	t189 = t188 * t179;
	t190 = t187 - t189;
	t194 = -t152 * t164 + t157 * t161;
	t195 = t188 * t173;
	t196 = t186 * t179;
	t197 = -t195 - t196;
	t205 = cos(qJ(2));
	t206 = t1 * t205;
	t214 = t106 * t205;
	t216 = t104 * t53 * t54;
	t219 = -t109 * t61 * t54;
	t221 = -t214 * t216 - t214 * t219;
	t224 = t104 * t61 * t54;
	t227 = -t109 * t53 * t54;
	t229 = t214 * t224 - t214 * t227;
	t231 = t139 * t221 + t150 * t229;
	t235 = t139 * t229 - t150 * t221;
	t237 = t157 * t231 + t164 * t235;
	t241 = t157 * t235 - t164 * t231;
	t249 = t106 * t2;
	t253 = t104 * pkin(1);
	t257 = -t27 - t28;
	t269 = -t6 + t9;
	t274 = -0.2e1 * pkin(18) * t10 * t16 + 0.2e1 * pkin(18) * t16 * t269 + 0.2e1 * pkin(18) * t257 * t8 + 0.2e1 * pkin(18) * t29 * t8 - 0.2e1 * t19 * t21 * t5 + 0.2e1 * t21 * t23 * t4;
	t277 = 0.1e1 / t40;
	t281 = 0.4e1 * t10 * t257 + 0.4e1 * t269 * t29;
	t285 = 0.2e1 * t11 * t281 - 0.2e1 * t274 * t32;
	t289 = (-t277 * t285 * t29 + 0.2e1 * t10 * t274 + 0.2e1 * t257 * t32 - 0.2e1 * t269 * t40) * t43;
	t290 = t36 ^ 2;
	t291 = 0.1e1 / t290;
	t292 = t42 * t291;
	t294 = -0.2e1 * t281 * t292 + t27 + t28 + t289;
	t303 = (t10 * t277 * t285 + 0.2e1 * t257 * t40 + 0.2e1 * t269 * t32 + 0.2e1 * t274 * t29) * t43;
	t304 = t49 * t291;
	t306 = -0.2e1 * t281 * t304 + t303 + t6 - t9;
	t308 = -t21 * t306 + t294 * t4 - t59 - t60;
	t309 = t308 * t54;
	t310 = t309 * t57;
	t313 = t21 * t294 + t306 * t4 + t46 - t52;
	t314 = t313 * t54;
	t315 = t314 * t64;
	t316 = -t310 + t315;
	t320 = t314 * t57;
	t321 = t309 * t64;
	t322 = t320 + t321;
	t328 = 0.2e1 * t316 * t66 + 0.2e1 * t322 * t73;
	t331 = 0.1e1 / t86;
	t335 = 0.4e1 * t316 * t66 + 0.4e1 * t322 * t73;
	t339 = -0.2e1 * t328 * t78 + 0.2e1 * t335 * t67;
	t344 = t82 ^ 2;
	t345 = 0.1e1 / t344;
	t349 = (-t310 + t315 - (t331 * t339 * t73 + 0.2e1 * t316 * t78 + 0.2e1 * t322 * t86 + 0.2e1 * t328 * t66) * t89 + 0.2e1 * t88 * t345 * t335) * t92;
	t362 = (-t320 - t321 - (t331 * t339 * t66 + 0.2e1 * t316 * t86 - 0.2e1 * t322 * t78 - 0.2e1 * t328 * t73) * t89 + 0.2e1 * t98 * t345 * t335) * t92;
	t364 = t102 * t362 - t349 * t94;
	t368 = t102 * t349 + t362 * t94;
	t370 = t1 * t368 - t249 * t364;
	t375 = t1 * t109 - t104 * t249;
	t380 = t1 * t364 + t249 * t368;
	t385 = t1 * t104 + t109 * t249;
	t388 = t308 * t375 * t54 + t313 * t385 * t54 + t370 * t53 * t54 + t380 * t54 * t61;
	t394 = t375 * t53 * t54 + t385 * t54 * t61;
	t399 = t21 * t313 * t54 + t308 * t4 * t54 - t131 + t133;
	t403 = pkin(23) * t399 - t27 - t28;
	t410 = t21 * t308 * t54 - t313 * t4 * t54 + t121 + t123;
	t414 = pkin(23) * t410 + t6 - t9;
	t417 = -t124 * t128 * t403 - t126 * t128 * t399 - t128 * t134 * t414 - t128 * t136 * t410;
	t427 = t308 * t385 * t54 - t313 * t375 * t54 - t370 * t54 * t61 + t380 * t53 * t54;
	t433 = -t375 * t54 * t61 + t385 * t53 * t54;
	t441 = t124 * t128 * t414 - t128 * t134 * t403 + t128 * t136 * t399 - t148 * t410;
	t443 = t139 * t388 + t150 * t427 + t394 * t417 + t433 * t441;
	t447 = t139 * t394 + t150 * t433;
	t449 = 0.2e1 * t153 * t281;
	t452 = 0.2e1 * t155 * t281;
	t454 = t153 * t289 + t155 * t303 - t292 * t449 - t304 * t452 + t162 - t163;
	t460 = t139 * t427 - t150 * t388 - t394 * t441 + t417 * t433;
	t464 = t139 * t433 - t150 * t394;
	t469 = -t153 * t303 + t155 * t289 - t292 * t452 + t304 * t449 + t154 + t156;
	t471 = t157 * t443 + t164 * t460 + t447 * t454 + t464 * t469;
	t475 = t157 * t447 + t164 * t464;
	t476 = t177 + t178 + t180;
	t477 = t476 * t185;
	t480 = 0.1e1 / t184 / t183;
	t481 = t175 * t480;
	t483 = -t169 + t171 - t174;
	t485 = t175 * t476 + t181 * t483;
	t486 = 0.2e1 * t173 * t485;
	t489 = -t483 * t185;
	t491 = -t181 * t480;
	t492 = 0.2e1 * t179 * t485;
	t495 = t477 * t173 - t481 * t486 / 0.2e1 - t196 - t489 * t179 + t491 * t492 / 0.2e1 - t195;
	t501 = t157 * t460 - t164 * t443 - t447 * t469 + t454 * t464;
	t505 = t157 * t464 - t164 * t447;
	t512 = -t489 * t173 + t491 * t486 / 0.2e1 + t189 - t477 * t179 + t481 * t492 / 0.2e1 - t187;
	t526 = -t476 * t185;
	t530 = -t175 * t476 - t181 * t483;
	t531 = 0.2e1 * t173 * t530;
	t534 = t483 * t185;
	t536 = 0.2e1 * t179 * t530;
	t539 = t526 * t173 - t481 * t531 / 0.2e1 + t196 - t534 * t179 + t491 * t536 / 0.2e1 + t195;
	t547 = -t534 * t173 + t491 * t531 / 0.2e1 - t189 - t526 * t179 + t481 * t536 / 0.2e1 + t187;
	t573 = t206 * t216 + t206 * t219;
	t577 = -t206 * t224 + t206 * t227;
	t579 = t139 * t573 + t150 * t577;
	t583 = t139 * t577 - t150 * t573;
	t585 = t157 * t579 + t164 * t583;
	t589 = t157 * t583 - t164 * t579;
	t605 = t106 * t368 + t3 * t364;
	t612 = t106 * t364 - t3 * t368;
	t617 = -t111 * t308 * t54 - t116 * t313 * t54 + t53 * t54 * t605 + t54 * t61 * t612;
	t623 = -t111 * t53 * t54 - t116 * t54 * t61;
	t633 = t111 * t313 * t54 - t116 * t308 * t54 + t53 * t54 * t612 - t54 * t605 * t61;
	t639 = t111 * t54 * t61 - t116 * t53 * t54;
	t641 = t139 * t617 + t150 * t633 + t417 * t623 + t441 * t639;
	t645 = t139 * t623 + t150 * t639;
	t651 = t139 * t633 - t150 * t617 + t417 * t639 - t441 * t623;
	t655 = t139 * t639 - t150 * t623;
	t657 = t157 * t641 + t164 * t651 + t454 * t645 + t469 * t655;
	t661 = t157 * t645 + t164 * t655;
	t667 = t157 * t651 - t164 * t641 + t454 * t655 - t469 * t645;
	t671 = t157 * t655 - t164 * t645;
	t694 = t2 * t104;
	t696 = -t2 * t109;
	t698 = t55 * t694 + t62 * t696;
	t702 = t55 * t696 - t62 * t694;
	t704 = t139 * t698 + t150 * t702;
	t708 = t139 * t702 - t150 * t698;
	t710 = t157 * t704 + t164 * t708;
	t714 = t157 * t708 - t164 * t704;
	t728 = t205 * t364;
	t730 = t205 * t104;
	t732 = -t205 * t368;
	t734 = -t205 * t109;
	t736 = -t309 * t730 - t314 * t734 - t55 * t728 - t62 * t732;
	t740 = -t55 * t730 - t62 * t734;
	t746 = -t309 * t734 + t314 * t730 - t55 * t732 + t62 * t728;
	t750 = -t55 * t734 + t62 * t730;
	t752 = t139 * t736 + t150 * t746 + t417 * t740 + t441 * t750;
	t756 = t139 * t740 + t150 * t750;
	t762 = t139 * t746 - t150 * t736 + t417 * t750 - t441 * t740;
	t766 = t139 * t750 - t150 * t740;
	t768 = t157 * t752 + t164 * t762 + t454 * t756 + t469 * t766;
	t772 = t157 * t756 + t164 * t766;
	t778 = t157 * t762 - t164 * t752 + t454 * t766 - t469 * t756;
	t782 = t157 * t766 - t164 * t756;
	unknown(1,1) = (t166 * t190 + t194 * t197) * r_i_i_C(1) + (-t166 * t197 + t190 * t194) * r_i_i_C(2) + t206 * r_i_i_C(3) + t152 * pkin(3) + t119 * pkin(2) + t111 * pkin(1) + t206 * pkin(10) - t106 * pkin(9);
	unknown(1,2) = (t190 * t237 + t197 * t241) * r_i_i_C(1) + (t190 * t241 - t197 * t237) * r_i_i_C(2) - t249 * r_i_i_C(3) + t231 * pkin(3) + t221 * pkin(2) - t214 * t253 - t249 * pkin(10);
	unknown(1,3) = (t190 * t471 + t197 * t501 + t475 * t495 + t505 * t512) * r_i_i_C(1) + (t190 * t501 - t197 * t471 - t475 * t512 + t495 * t505) * r_i_i_C(2) + t443 * pkin(3) + t388 * pkin(2) + t370 * pkin(1);
	unknown(1,4) = (t475 * t539 + t505 * t547) * r_i_i_C(1) + (-t475 * t547 + t505 * t539) * r_i_i_C(2);
	unknown(1,5) = 0.0e0;
	unknown(2,1) = (t190 * t475 + t197 * t505) * r_i_i_C(1) + (t190 * t505 - t197 * t475) * r_i_i_C(2) + t214 * r_i_i_C(3) + t447 * pkin(3) + t394 * pkin(2) + t375 * pkin(1) + t214 * pkin(10) + t1 * pkin(9);
	unknown(2,2) = (t190 * t585 + t197 * t589) * r_i_i_C(1) + (t190 * t589 - t197 * t585) * r_i_i_C(2) + t3 * r_i_i_C(3) + t579 * pkin(3) + t573 * pkin(2) + t206 * t253 + t3 * pkin(10);
	unknown(2,3) = (t190 * t657 + t197 * t667 + t495 * t661 + t512 * t671) * r_i_i_C(1) + (t190 * t667 - t197 * t657 + t495 * t671 - t512 * t661) * r_i_i_C(2) + t641 * pkin(3) + t617 * pkin(2) + t605 * pkin(1);
	unknown(2,4) = (t539 * t661 + t547 * t671) * r_i_i_C(1) + (t539 * t671 - t547 * t661) * r_i_i_C(2);
	unknown(2,5) = 0.0e0;
	unknown(3,1) = 0.0e0;
	unknown(3,2) = (t190 * t710 + t197 * t714) * r_i_i_C(1) + (t190 * t714 - t197 * t710) * r_i_i_C(2) - t205 * r_i_i_C(3) + t704 * pkin(3) + t698 * pkin(2) + t694 * pkin(1) - t205 * pkin(10);
	unknown(3,3) = (t190 * t768 + t197 * t778 + t495 * t772 + t512 * t782) * r_i_i_C(1) + (t190 * t778 - t197 * t768 + t495 * t782 - t512 * t772) * r_i_i_C(2) + t752 * pkin(3) + t736 * pkin(2) - t728 * pkin(1);
	unknown(3,4) = (t539 * t772 + t547 * t782) * r_i_i_C(1) + (t782 * t539 - t772 * t547) * r_i_i_C(2);
	unknown(3,5) = 0.0e0;
	Ja_transl = unknown;
end