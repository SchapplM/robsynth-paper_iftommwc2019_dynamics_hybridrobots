% Calculate forward kinematics (homogenous transformation matrices) for fixed-base
% KAS5m7DE1
% Use Code from Maple symbolic Code Generation
% 
% Input:
% qJ [5x1]
%   Generalized joint coordinates (joint angles)
% pkin [24x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[delta10,delta12,delta17,delta18,delta20,delta8,delta9,l1,l11,l12,l13,l14,l15,l17,l18,l2,l20,l21,l22,l23,l3,l4,l5,l6]';
% 
% Output:
% Tc_mdh [4x4x(21+1)]
%   homogenous transformation matrices for each (body) frame (MDH)
%   1:  mdh base (link 0) -> mdh base link 0 (unit matrix, no information)
%   ...
%   16:  mdh base (link 0) -> mdh frame (16-1), link (16-1)
%   ...
%   21+1:  mdh base (link 0) -> mdh frame (21)
% T_c_stack [(21+1)*3 x 4]
%   stacked matrices from Tc_mdh into one 2D array, last row left out.
%   Last row only contains [0 0 0 1].

% Quelle: HybrDyn-Toolbox
% Datum: 2020-05-25 11:30
% Revision: 91226b68921adecbf67aba0faa97e308f05cdafe (2020-05-14)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function [Tc_mdh, Tc_stack] = KAS5m7DE1_fkine_fixb_rotmat_mdh_sym_varpar(qJ, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(5,1),zeros(24,1)}
assert(isreal(qJ) && all(size(qJ) == [5 1]), ...
  'KAS5m7DE1_fkine_fixb_rotmat_mdh_sym_varpar: qJ has to be [5x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [24 1]), ...
  'KAS5m7DE1_fkine_fixb_rotmat_mdh_sym_varpar: pkin has to be [24x1] (double)');

%% Symbolic Calculation
% From fkine_mdh_floatb_twist_rotmat_matlab.m
% OptimizationMode: 1
% StartTime: 2020-05-25 11:20:14
% EndTime: 2020-05-25 11:26:58
% DurationCPUTime: 374.67s
% Computational Cost: add. (24510408->403), mult. (31636493->337), div. (511034->4), fcn. (12686014->48), ass. (0->495)
unknown=NaN(66,4);
t1 = sin(qJ(1));
t2 = cos(qJ(1));
t3 = (pkin(8) + 0);
t4 = sin(qJ(2));
t5 = t1 * t4;
t6 = cos(qJ(2));
t7 = t1 * t6;
t8 = t2 * pkin(16);
t10 = t2 * t4;
t11 = t2 * t6;
t12 = t1 * pkin(16);
t14 = sin(qJ(3));
t15 = cos(qJ(3));
t16 = -pkin(23) + pkin(24);
t17 = t15 * t16;
t18 = pkin(3) + qJ(3);
t19 = cos(t18);
t20 = t19 * pkin(12);
t21 = -pkin(9) + t17 + t20;
t22 = pkin(11) ^ 2;
t23 = pkin(19) ^ 2;
t24 = t19 ^ 2;
t25 = pkin(12) ^ 2;
t27 = sin(t18);
t28 = t27 ^ 2;
t31 = (-pkin(9) + t17) ^ 2;
t32 = t14 ^ 2;
t33 = t16 ^ 2;
t37 = t14 * t16;
t38 = t27 * pkin(12);
t39 = -t37 + t38;
t42 = 0.2e1 * t21 * t19 * pkin(12) + 0.2e1 * t39 * t27 * pkin(12) - t24 * t25 - t28 * t25 + t32 * t33 + t22 - t23 + t31;
t46 = 0.4e1 * t21 ^ 2 + 0.4e1 * t39 ^ 2;
t48 = t42 ^ 2;
t50 = sqrt(t22 * t46 - t48);
t53 = 0.1e1 / t46;
t54 = (0.2e1 * t21 * t42 - 0.2e1 * t39 * t50) * t53;
t55 = pkin(9) - t17 - t20 + t54;
t60 = (0.2e1 * t21 * t50 + 0.2e1 * t42 * t39) * t53;
t61 = t37 - t38 + t60;
t63 = t14 * t55 + t15 * t61;
t64 = 0.1e1 / pkin(19);
t65 = t63 * t64;
t66 = cos(pkin(7));
t67 = t66 * pkin(18);
t68 = t65 * t67;
t71 = -t14 * t61 + t15 * t55;
t72 = t71 * t64;
t73 = sin(pkin(7));
t74 = t73 * pkin(18);
t75 = t72 * t74;
t76 = pkin(17) ^ 2;
t77 = pkin(22) ^ 2;
t78 = t72 * t67;
t79 = t65 * t74;
t80 = t78 - t79;
t81 = t80 ^ 2;
t82 = t68 + t75;
t83 = t82 ^ 2;
t84 = pkin(24) ^ 2;
t85 = -pkin(24) - t78 + t79;
t88 = -0.2e1 * t85 * t80 + 0.2e1 * t82 ^ 2 + t76 - t77 - t81 - t83 + t84;
t92 = 0.4e1 * t82 ^ 2 + 0.4e1 * t85 ^ 2;
t94 = t88 ^ 2;
t96 = sqrt(t76 * t92 - t94);
t99 = 0.1e1 / t92;
t101 = -t68 - t75 - (-0.2e1 * t88 * t82 + 0.2e1 * t85 * t96) * t99;
t106 = t78 - t79 + (0.2e1 * t82 * t96 + 0.2e1 * t85 * t88) * t99 + pkin(24);
t107 = atan2(t101, t106);
t108 = t107 + pkin(6);
t109 = sin(t108);
t111 = cos(t108);
t113 = -t5 * t109 - t2 * t111;
t116 = t2 * t109 - t5 * t111;
t117 = t7 * pkin(21);
t118 = t117 + t8 + 0;
t121 = -t1 * t111 + t10 * t109;
t124 = t1 * t109 + t10 * t111;
t125 = t11 * pkin(21);
t126 = -t125 + t12 + 0;
t127 = t6 * t109;
t128 = t6 * t111;
t129 = t4 * pkin(21);
t130 = -t129 + pkin(8) + 0;
t133 = t113 * t15 + t116 * t14;
t136 = -t113 * t14 + t116 * t15;
t137 = t113 * pkin(23);
t141 = t121 * t15 + t124 * t14;
t144 = -t121 * t14 + t124 * t15;
t145 = t121 * pkin(23);
t149 = -t127 * t15 - t128 * t14;
t152 = t127 * t14 - t128 * t15;
t153 = t127 * pkin(23);
t155 = cos(qJ(4));
t157 = sin(qJ(4));
t159 = t133 * t155 + t136 * t157;
t162 = -t133 * t157 + t136 * t155;
t163 = t133 * pkin(9);
t164 = t163 + t137 + t117 + t8 + 0;
t167 = t141 * t155 + t144 * t157;
t170 = -t141 * t157 + t144 * t155;
t171 = t141 * pkin(9);
t172 = t171 + t145 - t125 + t12 + 0;
t175 = t149 * t155 + t152 * t157;
t178 = -t149 * t157 + t152 * t155;
t179 = t149 * pkin(9);
t180 = t179 - t153 - t129 + pkin(8) + 0;
t181 = qJ(4) - qJ(3) + pkin(4);
t182 = sin(t181);
t184 = cos(t181);
t186 = -t159 * t182 + t162 * t184;
t189 = -t159 * t184 - t162 * t182;
t190 = t159 * pkin(10);
t194 = -t167 * t182 + t170 * t184;
t197 = -t167 * t184 - t170 * t182;
t198 = t167 * pkin(10);
t202 = -t175 * t182 + t178 * t184;
t205 = -t175 * t184 - t178 * t182;
t206 = t175 * pkin(10);
t208 = cos(qJ(5));
t210 = sin(qJ(5));
t234 = sin(pkin(6));
t236 = cos(pkin(6));
t238 = t2 * t236 + t5 * t234;
t241 = -t2 * t234 + t5 * t236;
t244 = t1 * t236 - t10 * t234;
t247 = -t1 * t234 - t10 * t236;
t248 = t6 * t234;
t249 = t6 * t236;
t250 = 0.1e1 / pkin(22);
t251 = t101 * t250;
t253 = -t106 * t250;
t255 = t251 * t234 + t253 * t236;
t259 = -t253 * t234 + t251 * t236;
t269 = atan2(-(t259 * t234 - t255 * t236) * pkin(22) + pkin(24) + t78 - t79, (t255 * t234 + t259 * t236) * pkin(22) + t68 + t75);
t270 = t107 - t269;
t271 = sin(t270);
t273 = cos(t270);
t275 = t238 * t271 - t241 * t273;
t278 = t238 * t273 + t241 * t271;
t279 = t238 * pkin(22);
t283 = t244 * t271 - t247 * t273;
t286 = t244 * t273 + t247 * t271;
t287 = t244 * pkin(22);
t291 = t248 * t271 - t249 * t273;
t294 = t248 * t273 + t249 * t271;
t295 = t248 * pkin(22);
t297 = atan2(-t63, t71);
t298 = cos(t297);
t300 = sin(t297);
t302 = t113 * t298 - t116 * t300;
t305 = t113 * t300 + t116 * t298;
t306 = t113 * pkin(24);
t310 = t121 * t298 - t124 * t300;
t313 = t121 * t300 + t124 * t298;
t314 = t121 * pkin(24);
t318 = -t127 * t298 + t128 * t300;
t321 = -t127 * t300 - t128 * t298;
t322 = t127 * pkin(24);
t338 = atan2((t14 * t71 * t64 - t15 * t63 * t64) * pkin(19) + t37 - t38, (t14 * t63 * t64 + t15 * t71 * t64) * pkin(19) - pkin(9) + t17 + t20);
t339 = -t338 + qJ(3) + t297;
t340 = cos(t339);
t342 = sin(t339);
t344 = -t302 * t340 - t305 * t342;
t347 = t302 * t342 - t305 * t340;
t348 = t302 * pkin(19);
t352 = -t310 * t340 - t313 * t342;
t355 = t310 * t342 - t313 * t340;
t356 = t310 * pkin(19);
t360 = -t318 * t340 - t321 * t342;
t363 = t318 * t342 - t321 * t340;
t364 = t318 * pkin(19);
t368 = t133 * t14 - t136 * t15;
t371 = t133 * t15 + t136 * t14;
t374 = t141 * t14 - t144 * t15;
t377 = t144 * t14 + t141 * t15;
t380 = t149 * t14 - t152 * t15;
t383 = t152 * t14 + t149 * t15;
t384 = sin(pkin(3));
t386 = cos(pkin(3));
t388 = t368 * t384 - t371 * t386;
t391 = t368 * t386 + t371 * t384;
t394 = t374 * t384 - t377 * t386;
t397 = t374 * t386 + t377 * t384;
t400 = t380 * t384 - t383 * t386;
t403 = t380 * t386 + t383 * t384;
t405 = pkin(3) + qJ(3) - qJ(4);
t406 = sin(t405);
t409 = t406 * pkin(12) - t184 * pkin(14) + t182 * pkin(15);
t412 = cos(t405);
t414 = -t412 * pkin(12) - t182 * pkin(14) - t184 * pkin(15) - pkin(10);
t415 = atan2(t409, t414);
t416 = t415 + pkin(3) + qJ(3) - qJ(4);
t417 = sin(t416);
t419 = cos(t416);
t421 = t388 * t417 + t391 * t419;
t424 = -t388 * t419 + t391 * t417;
t425 = t388 * pkin(12);
t426 = t425 + t163 + t137 + t117 + t8 + 0;
t429 = t394 * t417 + t397 * t419;
t432 = -t394 * t419 + t397 * t417;
t433 = t394 * pkin(12);
t434 = t433 + t171 + t145 - t125 + t12 + 0;
t437 = t400 * t417 + t403 * t419;
t440 = -t400 * t419 + t403 * t417;
t441 = t400 * pkin(12);
t442 = t441 + t179 - t153 - t129 + pkin(8) + 0;
t443 = t414 ^ 2;
t444 = t409 ^ 2;
t446 = sqrt(t443 + t444);
t448 = -t424 * t446 + t117 + t137 + t163 + t425 + t8 + 0;
t450 = -t432 * t446 + t12 - t125 + t145 + t171 + t433 + 0;
t452 = -t440 * t446 + pkin(8) - t129 - t153 + t179 + t441 + 0;
t453 = t302 * t66;
t454 = t305 * t73;
t462 = t310 * t66;
t463 = t313 * t73;
t471 = t318 * t66;
t472 = t321 * t73;
t480 = atan2(t60, t54);
t481 = -t480 + pkin(3) + qJ(3);
t482 = cos(t481);
t484 = sin(t481);
t502 = cos(pkin(5));
t504 = sin(pkin(5));
t507 = t186 * t504;
t508 = t189 * t502;
t516 = t194 * t504;
t517 = t197 * t502;
t525 = t202 * t504;
t526 = t205 * t502;
unknown(1,1) = 1;
unknown(1,2) = 0;
unknown(1,3) = 0;
unknown(1,4) = 0;
unknown(2,1) = 0;
unknown(2,2) = 1;
unknown(2,3) = 0;
unknown(2,4) = 0;
unknown(3,1) = 0;
unknown(3,2) = 0;
unknown(3,3) = 1;
unknown(3,4) = 0;
unknown(4,1) = t1;
unknown(4,2) = t2;
unknown(4,3) = 0;
unknown(4,4) = 0;
unknown(5,1) = -t2;
unknown(5,2) = t1;
unknown(5,3) = 0;
unknown(5,4) = 0;
unknown(6,1) = 0;
unknown(6,2) = 0;
unknown(6,3) = 1;
unknown(6,4) = t3;
unknown(7,1) = -t5;
unknown(7,2) = -t7;
unknown(7,3) = t2;
unknown(7,4) = (t8 + 0);
unknown(8,1) = t10;
unknown(8,2) = t11;
unknown(8,3) = t1;
unknown(8,4) = (t12 + 0);
unknown(9,1) = -t6;
unknown(9,2) = t4;
unknown(9,3) = 0;
unknown(9,4) = t3;
unknown(10,1) = t113;
unknown(10,2) = t116;
unknown(10,3) = t7;
unknown(10,4) = t118;
unknown(11,1) = t121;
unknown(11,2) = t124;
unknown(11,3) = -t11;
unknown(11,4) = t126;
unknown(12,1) = -t127;
unknown(12,2) = -t128;
unknown(12,3) = -t4;
unknown(12,4) = t130;
unknown(13,1) = t133;
unknown(13,2) = t136;
unknown(13,3) = t7;
unknown(13,4) = (t137 + t117 + t8 + 0);
unknown(14,1) = t141;
unknown(14,2) = t144;
unknown(14,3) = -t11;
unknown(14,4) = (t145 - t125 + t12 + 0);
unknown(15,1) = t149;
unknown(15,2) = t152;
unknown(15,3) = -t4;
unknown(15,4) = (-t153 - t129 + pkin(8) + 0);
unknown(16,1) = t159;
unknown(16,2) = t162;
unknown(16,3) = t7;
unknown(16,4) = t164;
unknown(17,1) = t167;
unknown(17,2) = t170;
unknown(17,3) = -t11;
unknown(17,4) = t172;
unknown(18,1) = t175;
unknown(18,2) = t178;
unknown(18,3) = -t4;
unknown(18,4) = t180;
unknown(19,1) = t186;
unknown(19,2) = t189;
unknown(19,3) = t7;
unknown(19,4) = (t190 + t163 + t137 + t117 + t8 + 0);
unknown(20,1) = t194;
unknown(20,2) = t197;
unknown(20,3) = -t11;
unknown(20,4) = (t198 + t171 + t145 - t125 + t12 + 0);
unknown(21,1) = t202;
unknown(21,2) = t205;
unknown(21,3) = -t4;
unknown(21,4) = (t206 + t179 - t153 - t129 + pkin(8) + 0);
unknown(22,1) = (t186 * t208 + t7 * t210);
unknown(22,2) = (-t186 * t210 + t7 * t208);
unknown(22,3) = -t189;
unknown(22,4) = (-t189 * pkin(13) + t117 + t137 + t163 + t190 + t8 + 0);
unknown(23,1) = (-t11 * t210 + t194 * t208);
unknown(23,2) = (-t11 * t208 - t194 * t210);
unknown(23,3) = -t197;
unknown(23,4) = (-t197 * pkin(13) + t12 - t125 + t145 + t171 + t198 + 0);
unknown(24,1) = (t202 * t208 - t4 * t210);
unknown(24,2) = (-t202 * t210 - t4 * t208);
unknown(24,3) = -t205;
unknown(24,4) = (-t205 * pkin(13) + pkin(8) - t129 - t153 + t179 + t206 + 0);
unknown(25,1) = t238;
unknown(25,2) = t241;
unknown(25,3) = t7;
unknown(25,4) = t118;
unknown(26,1) = t244;
unknown(26,2) = t247;
unknown(26,3) = -t11;
unknown(26,4) = t126;
unknown(27,1) = t248;
unknown(27,2) = t249;
unknown(27,3) = -t4;
unknown(27,4) = t130;
unknown(28,1) = t275;
unknown(28,2) = t278;
unknown(28,3) = t7;
unknown(28,4) = (-t279 + t117 + t8 + 0);
unknown(29,1) = t283;
unknown(29,2) = t286;
unknown(29,3) = -t11;
unknown(29,4) = (-t287 - t125 + t12 + 0);
unknown(30,1) = t291;
unknown(30,2) = t294;
unknown(30,3) = -t4;
unknown(30,4) = (-t295 - t129 + pkin(8) + 0);
unknown(31,1) = t302;
unknown(31,2) = t305;
unknown(31,3) = t7;
unknown(31,4) = (t306 + t117 + t8 + 0);
unknown(32,1) = t310;
unknown(32,2) = t313;
unknown(32,3) = -t11;
unknown(32,4) = (t314 - t125 + t12 + 0);
unknown(33,1) = t318;
unknown(33,2) = t321;
unknown(33,3) = -t4;
unknown(33,4) = (-t322 - t129 + pkin(8) + 0);
unknown(34,1) = t344;
unknown(34,2) = t347;
unknown(34,3) = t7;
unknown(34,4) = (t348 + t306 + t117 + t8 + 0);
unknown(35,1) = t352;
unknown(35,2) = t355;
unknown(35,3) = -t11;
unknown(35,4) = (t356 + t314 - t125 + t12 + 0);
unknown(36,1) = t360;
unknown(36,2) = t363;
unknown(36,3) = -t4;
unknown(36,4) = (t364 - t322 - t129 + pkin(8) + 0);
unknown(37,1) = t368;
unknown(37,2) = t371;
unknown(37,3) = t7;
unknown(37,4) = t164;
unknown(38,1) = t374;
unknown(38,2) = t377;
unknown(38,3) = -t11;
unknown(38,4) = t172;
unknown(39,1) = t380;
unknown(39,2) = t383;
unknown(39,3) = -t4;
unknown(39,4) = t180;
unknown(40,1) = t388;
unknown(40,2) = t391;
unknown(40,3) = t7;
unknown(40,4) = t164;
unknown(41,1) = t394;
unknown(41,2) = t397;
unknown(41,3) = -t11;
unknown(41,4) = t172;
unknown(42,1) = t400;
unknown(42,2) = t403;
unknown(42,3) = -t4;
unknown(42,4) = t180;
unknown(43,1) = t421;
unknown(43,2) = t424;
unknown(43,3) = t7;
unknown(43,4) = t426;
unknown(44,1) = t429;
unknown(44,2) = t432;
unknown(44,3) = -t11;
unknown(44,4) = t434;
unknown(45,1) = t437;
unknown(45,2) = t440;
unknown(45,3) = -t4;
unknown(45,4) = t442;
unknown(46,1) = t421;
unknown(46,2) = t7;
unknown(46,3) = -t424;
unknown(46,4) = t448;
unknown(47,1) = t429;
unknown(47,2) = -t11;
unknown(47,3) = -t432;
unknown(47,4) = t450;
unknown(48,1) = t437;
unknown(48,2) = -t4;
unknown(48,3) = -t440;
unknown(48,4) = t452;
unknown(49,1) = (t453 + t454);
unknown(49,2) = (-t302 * t73 + t305 * t66);
unknown(49,3) = t7;
unknown(49,4) = (t453 * pkin(18) + t454 * pkin(18) + t117 + t306 + t8 + 0);
unknown(50,1) = (t462 + t463);
unknown(50,2) = (-t310 * t73 + t313 * t66);
unknown(50,3) = -t11;
unknown(50,4) = (t462 * pkin(18) + t463 * pkin(18) + t12 - t125 + t314 + 0);
unknown(51,1) = (t471 + t472);
unknown(51,2) = (-t318 * t73 + t321 * t66);
unknown(51,3) = -t4;
unknown(51,4) = (t471 * pkin(18) + t472 * pkin(18) + pkin(8) - t129 - t322 + 0);
unknown(52,1) = (t388 * t482 - t391 * t484);
unknown(52,2) = (t388 * t484 + t391 * t482);
unknown(52,3) = t7;
unknown(52,4) = t426;
unknown(53,1) = (t394 * t482 - t397 * t484);
unknown(53,2) = (t394 * t484 + t397 * t482);
unknown(53,3) = -t11;
unknown(53,4) = t434;
unknown(54,1) = (t400 * t482 - t403 * t484);
unknown(54,2) = (t400 * t484 + t403 * t482);
unknown(54,3) = -t4;
unknown(54,4) = t442;
unknown(55,1) = (t186 * t502 - t189 * t504);
unknown(55,2) = (t507 + t508);
unknown(55,3) = t7;
unknown(55,4) = (-t507 * pkin(20) - t508 * pkin(20) + t117 + t137 + t163 + t190 + t8 + 0);
unknown(56,1) = (t194 * t502 - t197 * t504);
unknown(56,2) = (t516 + t517);
unknown(56,3) = -t11;
unknown(56,4) = (-t516 * pkin(20) - t517 * pkin(20) + t12 - t125 + t145 + t171 + t198 + 0);
unknown(57,1) = (t202 * t502 - t205 * t504);
unknown(57,2) = (t525 + t526);
unknown(57,3) = -t4;
unknown(57,4) = (-t525 * pkin(20) - t526 * pkin(20) + pkin(8) - t129 - t153 + t179 + t206 + 0);
unknown(58,1) = t275;
unknown(58,2) = t278;
unknown(58,3) = t7;
unknown(58,4) = (t275 * pkin(17) + t117 - t279 + t8 + 0);
unknown(59,1) = t283;
unknown(59,2) = t286;
unknown(59,3) = -t11;
unknown(59,4) = (t283 * pkin(17) + t12 - t125 - t287 + 0);
unknown(60,1) = t291;
unknown(60,2) = t294;
unknown(60,3) = -t4;
unknown(60,4) = (t291 * pkin(17) + pkin(8) - t129 - t295 + 0);
unknown(61,1) = t344;
unknown(61,2) = t347;
unknown(61,3) = t7;
unknown(61,4) = (t344 * pkin(11) + t117 + t306 + t348 + t8 + 0);
unknown(62,1) = t352;
unknown(62,2) = t355;
unknown(62,3) = -t11;
unknown(62,4) = (t352 * pkin(11) + t12 - t125 + t314 + t356 + 0);
unknown(63,1) = t360;
unknown(63,2) = t363;
unknown(63,3) = -t4;
unknown(63,4) = (t360 * pkin(11) + pkin(8) - t129 - t322 + t364 + 0);
unknown(64,1) = t421;
unknown(64,2) = t424;
unknown(64,3) = t7;
unknown(64,4) = t448;
unknown(65,1) = t429;
unknown(65,2) = t432;
unknown(65,3) = -t11;
unknown(65,4) = t450;
unknown(66,1) = t437;
unknown(66,2) = t440;
unknown(66,3) = -t4;
unknown(66,4) = t452;
Tc_stack = unknown;
%% Postprocessing: Reshape Output
% Convert Maple format (2-dimensional tensor) to Matlab format (3-dimensional tensor)
% Fallunterscheidung der Initialisierung für symbolische Eingabe
if isa([qJ; pkin], 'double'), Tc_mdh = NaN(4,4,21+1);               % numerisch
else,                         Tc_mdh = sym('xx', [4,4,21+1]); end % symbolisch
for i = 1:21+1
  Tc_mdh(:,:,i) = [Tc_stack((i-1)*3+1 : 3*i, :);[0 0 0 1]];
end
